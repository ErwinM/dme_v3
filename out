Opening: validation/A_sim.mifFound colon - skip: 0Found colon - skip: 0Found colon - skip: 0Found colon - skip: 0Found colon - skip: 0Found colon - skip: 0Found colon - skip: 0Found colon - skip: 0Found colon - skip: 0Init done..
MAR <- 0
PC++
IR <- 801
------------------------------------------------------
cycle: 0.DECODE(3), phase: 0, PC: 2, SP: 0, MAR: 0(801), MDR: 0
IR: DECODING (801) Micro(0): 0010000000000000000000001100000000001000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(256) ALUS(0) MDRin(256) 
ALUS(0) 
Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:MDRout(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 0.DECODE(3), phase: 1, PC: 2, SP: 0, MAR: 0(801), MDR: 0
IR: ldi (801) - (0000100000000001), Micro(0): 0010000000000000000000001100000000001000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:MDRout(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0100
------------------------------------------------------
cycle: 0.EXECUTE(7), phase: 0, PC: 2, SP: 0, MAR: 0(801), MDR: 100
IR: ldi (801) - (0000100000000001), Micro(128): 0001000000000000101000000100000000000000
REGWS(TGT) OP0S(MDRout) IRimm(0) ALUS(0) MDRin(0) 
ALUS(0) 
Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:1
ALU: 0:MDRout(100) 1:REGR0(0) func: out:100
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 0.EXECUTE(7), phase: 1, PC: 2, SP: 0, MAR: 0(801), MDR: 100
IR: ldi (801) - (0000100000000001), Micro(128): 0001000000000000101000000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:1
ALU: 0:MDRout(100) 1:REGR0(0) func: out:100
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 100
MAR <- 2
PC++
IR <- 20fc
------------------------------------------------------
cycle: 1.DECODE(3), phase: 0, PC: 4, SP: 0, MAR: 2(20fc), MDR: 100
IR: DECODING (20fc) Micro(1): 0010000000000000000000010000000000001000
MDR_LOAD IMMS(IMM13) IRimm(252) ALUS(0) REGR1(0) OP0(0) MDRin(252) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:3, 1:7, tgt:4
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 1.DECODE(3), phase: 1, PC: 4, SP: 0, MAR: 2(20fc), MDR: 100
IR: br (20fc) - (0010000011111100), Micro(1): 0010000000000000000000010000000000001000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:3, 1:7, tgt:4
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 00fc
------------------------------------------------------
cycle: 1.EXECUTE(7), phase: 0, PC: 4, SP: 0, MAR: 2(20fc), MDR: fc
IR: br (20fc) - (0010000011111100), Micro(129): 0001000001110000011100000100000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(63) ALUS(0) REGR0(4) OP0(252) OP1(4) MDRin(63) 
ALUS(0) ALUout(256) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:3, 1:7, tgt:4
ALU: 0:MDRout(fc) 1:REGR0(4) func: out:100
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 1.EXECUTE(7), phase: 1, PC: 4, SP: 0, MAR: 2(20fc), MDR: fc
IR: br (20fc) - (0010000011111100), Micro(129): 0001000001110000011100000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:3, 1:7, tgt:4
ALU: 0:MDRout(fc) 1:REGR0(4) func: out:100
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 100
MAR <- 100
PC++
IR <- 8a
------------------------------------------------------
cycle: 2.DECODE(3), phase: 0, PC: 102, SP: 0, MAR: 100(8a), MDR: fc
IR: DECODING (8a) Micro(0): 0010000000000000000000001100000000001000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(17) ALUS(0) REGR1(0) OP0(252) MDRin(17) 
ALUS(0) ALUout(252) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:2, 1:1, tgt:2
ALU: 0:MDRout(fc) 1:REGR0(0) func: out:fc
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 2.DECODE(3), phase: 1, PC: 102, SP: 0, MAR: 100(8a), MDR: fc
IR: ldi (8a) - (0000000010001010), Micro(0): 0010000000000000000000001100000000001000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:2, 1:1, tgt:2
ALU: 0:MDRout(fc) 1:REGR0(0) func: out:fc
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0011
------------------------------------------------------
cycle: 2.EXECUTE(7), phase: 0, PC: 102, SP: 0, MAR: 100(8a), MDR: 11
IR: ldi (8a) - (0000000010001010), Micro(128): 0001000000000000101000000100000000000000
REGWS(TGT) OP0S(MDRout) IRimm(34) ALUS(0) MDRin(34) 
ALUS(0) 
Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:2, 1:1, tgt:2
ALU: 0:MDRout(11) 1:REGR0(0) func: out:11
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 2.EXECUTE(7), phase: 1, PC: 102, SP: 0, MAR: 100(8a), MDR: 11
IR: ldi (8a) - (0000000010001010), Micro(128): 0001000000000000101000000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:2, 1:1, tgt:2
ALU: 0:MDRout(11) 1:REGR0(0) func: out:11
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG2 <- 11
MAR <- 102
PC++
IR <- 321
------------------------------------------------------
cycle: 3.DECODE(3), phase: 0, PC: 104, SP: 0, MAR: 102(321), MDR: 11
IR: DECODING (321) Micro(0): 0010000000000000000000001100000000001000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(100) ALUS(0) REGR1(0) OP0(17) MDRin(100) 
ALUS(0) ALUout(17) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:4, 1:4, tgt:1
ALU: 0:MDRout(11) 1:REGR0(0) func: out:11
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 3.DECODE(3), phase: 1, PC: 104, SP: 0, MAR: 102(321), MDR: 11
IR: ldi (321) - (0000001100100001), Micro(0): 0010000000000000000000001100000000001000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:4, 1:4, tgt:1
ALU: 0:MDRout(11) 1:REGR0(0) func: out:11
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0064
------------------------------------------------------
cycle: 3.EXECUTE(7), phase: 0, PC: 104, SP: 0, MAR: 102(321), MDR: 64
IR: ldi (321) - (0000001100100001), Micro(128): 0001000000000000101000000100000000000000
REGWS(TGT) OP0S(MDRout) IRimm(65480) ALUS(0) MDRin(65480) 
ALUS(0) 
Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:4, 1:4, tgt:1
ALU: 0:MDRout(64) 1:REGR0(0) func: out:64
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 3.EXECUTE(7), phase: 1, PC: 104, SP: 0, MAR: 102(321), MDR: 64
IR: ldi (321) - (0000001100100001), Micro(128): 0001000000000000101000000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:4, 1:4, tgt:1
ALU: 0:MDRout(64) 1:REGR0(0) func: out:64
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 64
MAR <- 104
PC++
IR <- b611
------------------------------------------------------
cycle: 4.DECODE(3), phase: 0, PC: 106, SP: 0, MAR: 104(b611), MDR: 64
IR: DECODING (b611) Micro(27): 0000000000000000000000000000000000000000
IRimm(4) ALUS(0) REGR1(0) OP0(0) MDRin(4) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 4.DECODE(3), phase: 1, PC: 106, SP: 0, MAR: 104(b611), MDR: 64
IR: stb.b (b611) - (1011011000010001), Micro(27): 0000000000000000000000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 4.READ(5), phase: 0, PC: 106, SP: 0, MAR: 104(b611), MDR: 64
IR: stb.b (b611) - (1011011000010001), Micro(91): 1000000010001001000000000000100000000000
MAR_LOAD REGR0S(ARG0) REGR1S(ARG1) OP1S(REGR1) ALUS(0) REGR1(17) OP1(17) 
ALUS(0) ALUout(17) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:REG0
args: 0:0, 1:2, tgt:1
ALU: 0:REGR0(0) 1:REGR1(11) func: out:11
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 4.READ(5), phase: 1, PC: 106, SP: 0, MAR: 104(b611), MDR: 64
IR: stb.b (b611) - (1011011000010001), Micro(91): 1000000010001001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:REG0
args: 0:0, 1:2, tgt:1
ALU: 0:REGR0(0) 1:REGR1(11) func: out:11
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MAR <- 11
------------------------------------------------------
cycle: 4.EXECUTE(7), phase: 0, PC: 106, SP: 0, MAR: 11(0), MDR: 64
IR: stb.b (b611) - (1011011000010001), Micro(155): 0010100110100000000010000000100000000000
MDR_LOAD BE REGR0S(TGT) MDRS(ALUout) OP1S(REGR1) ALUS(0) REGR0(100) REGR1(0) OP0(100) OP1(0) MDRin(17) 
ALUS(0) ALUout(100) MDRin(100) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:1
ALU: 0:REGR0(64) 1:REGR1(0) func: out:64
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 4.EXECUTE(7), phase: 1, PC: 106, SP: 0, MAR: 11(0), MDR: 64
IR: stb.b (b611) - (1011011000010001), Micro(155): 0010100110100000000010000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:1
ALU: 0:REGR0(64) 1:REGR1(0) func: out:64
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0064
RAM[10L] <- 64 (64)
MAR <- 106
PC++
IR <- 9a
------------------------------------------------------
cycle: 5.DECODE(3), phase: 0, PC: 108, SP: 0, MAR: 106(9a), MDR: 64
IR: DECODING (9a) Micro(0): 0010000000000000000000001100000000001000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(19) ALUS(0) REGR1(0) OP0(100) MDRin(19) 
ALUS(0) ALUout(100) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:2, 1:3, tgt:2
ALU: 0:MDRout(64) 1:REGR0(0) func: out:64
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 5.DECODE(3), phase: 1, PC: 108, SP: 0, MAR: 106(9a), MDR: 64
IR: ldi (9a) - (0000000010011010), Micro(0): 0010000000000000000000001100000000001000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:2, 1:3, tgt:2
ALU: 0:MDRout(64) 1:REGR0(0) func: out:64
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0013
------------------------------------------------------
cycle: 5.EXECUTE(7), phase: 0, PC: 108, SP: 0, MAR: 106(9a), MDR: 13
IR: ldi (9a) - (0000000010011010), Micro(128): 0001000000000000101000000100000000000000
REGWS(TGT) OP0S(MDRout) IRimm(38) ALUS(0) MDRin(38) 
ALUS(0) 
Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:2, 1:3, tgt:2
ALU: 0:MDRout(13) 1:REGR0(0) func: out:13
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 5.EXECUTE(7), phase: 1, PC: 108, SP: 0, MAR: 106(9a), MDR: 13
IR: ldi (9a) - (0000000010011010), Micro(128): 0001000000000000101000000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:2, 1:3, tgt:2
ALU: 0:MDRout(13) 1:REGR0(0) func: out:13
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG2 <- 13
MAR <- 108
PC++
IR <- 9
------------------------------------------------------
cycle: 6.DECODE(3), phase: 0, PC: 10a, SP: 0, MAR: 108(9), MDR: 13
IR: DECODING (9) Micro(0): 0010000000000000000000001100000000001000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(1) ALUS(0) REGR1(0) OP0(19) MDRin(1) 
ALUS(0) ALUout(19) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:MDRout(13) 1:REGR0(0) func: out:13
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 6.DECODE(3), phase: 1, PC: 10a, SP: 0, MAR: 108(9), MDR: 13
IR: ldi (9) - (0000000000001001), Micro(0): 0010000000000000000000001100000000001000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:MDRout(13) 1:REGR0(0) func: out:13
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 6.EXECUTE(7), phase: 0, PC: 10a, SP: 0, MAR: 108(9), MDR: 1
IR: ldi (9) - (0000000000001001), Micro(128): 0001000000000000101000000100000000000000
REGWS(TGT) OP0S(MDRout) IRimm(2) ALUS(0) MDRin(2) 
ALUS(0) 
Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:MDRout(1) 1:REGR0(0) func: out:1
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 6.EXECUTE(7), phase: 1, PC: 10a, SP: 0, MAR: 108(9), MDR: 1
IR: ldi (9) - (0000000000001001), Micro(128): 0001000000000000101000000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:MDRout(1) 1:REGR0(0) func: out:1
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 1
MAR <- 10a
PC++
IR <- b611
------------------------------------------------------
cycle: 7.DECODE(3), phase: 0, PC: 10c, SP: 0, MAR: 10a(b611), MDR: 1
IR: DECODING (b611) Micro(27): 0000000000000000000000000000000000000000
IRimm(4) ALUS(0) REGR1(0) OP0(0) MDRin(4) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 7.DECODE(3), phase: 1, PC: 10c, SP: 0, MAR: 10a(b611), MDR: 1
IR: stb.b (b611) - (1011011000010001), Micro(27): 0000000000000000000000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 7.READ(5), phase: 0, PC: 10c, SP: 0, MAR: 10a(b611), MDR: 1
IR: stb.b (b611) - (1011011000010001), Micro(91): 1000000010001001000000000000100000000000
MAR_LOAD REGR0S(ARG0) REGR1S(ARG1) OP1S(REGR1) ALUS(0) REGR1(19) OP1(19) 
ALUS(0) ALUout(19) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:REG0
args: 0:0, 1:2, tgt:1
ALU: 0:REGR0(0) 1:REGR1(13) func: out:13
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 7.READ(5), phase: 1, PC: 10c, SP: 0, MAR: 10a(b611), MDR: 1
IR: stb.b (b611) - (1011011000010001), Micro(91): 1000000010001001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:REG0
args: 0:0, 1:2, tgt:1
ALU: 0:REGR0(0) 1:REGR1(13) func: out:13
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MAR <- 13
------------------------------------------------------
cycle: 7.EXECUTE(7), phase: 0, PC: 10c, SP: 0, MAR: 13(0), MDR: 1
IR: stb.b (b611) - (1011011000010001), Micro(155): 0010100110100000000010000000100000000000
MDR_LOAD BE REGR0S(TGT) MDRS(ALUout) OP1S(REGR1) ALUS(0) REGR0(1) REGR1(0) OP0(1) OP1(0) MDRin(19) 
ALUS(0) ALUout(1) MDRin(1) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:1
ALU: 0:REGR0(1) 1:REGR1(0) func: out:1
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 7.EXECUTE(7), phase: 1, PC: 10c, SP: 0, MAR: 13(0), MDR: 1
IR: stb.b (b611) - (1011011000010001), Micro(155): 0010100110100000000010000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:1
ALU: 0:REGR0(1) 1:REGR1(0) func: out:1
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
RAM[12L] <- 1 (1)
MAR <- 10c
PC++
IR <- a2
------------------------------------------------------
cycle: 8.DECODE(3), phase: 0, PC: 10e, SP: 0, MAR: 10c(a2), MDR: 1
IR: DECODING (a2) Micro(0): 0010000000000000000000001100000000001000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(20) ALUS(0) REGR1(0) OP0(1) MDRin(20) 
ALUS(0) ALUout(1) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:2, 1:4, tgt:2
ALU: 0:MDRout(1) 1:REGR0(0) func: out:1
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 8.DECODE(3), phase: 1, PC: 10e, SP: 0, MAR: 10c(a2), MDR: 1
IR: ldi (a2) - (0000000010100010), Micro(0): 0010000000000000000000001100000000001000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:2, 1:4, tgt:2
ALU: 0:MDRout(1) 1:REGR0(0) func: out:1
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0014
------------------------------------------------------
cycle: 8.EXECUTE(7), phase: 0, PC: 10e, SP: 0, MAR: 10c(a2), MDR: 14
IR: ldi (a2) - (0000000010100010), Micro(128): 0001000000000000101000000100000000000000
REGWS(TGT) OP0S(MDRout) IRimm(40) ALUS(0) MDRin(40) 
ALUS(0) 
Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:2, 1:4, tgt:2
ALU: 0:MDRout(14) 1:REGR0(0) func: out:14
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 8.EXECUTE(7), phase: 1, PC: 10e, SP: 0, MAR: 10c(a2), MDR: 14
IR: ldi (a2) - (0000000010100010), Micro(128): 0001000000000000101000000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:2, 1:4, tgt:2
ALU: 0:MDRout(14) 1:REGR0(0) func: out:14
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG2 <- 14
MAR <- 10e
PC++
IR <- c
------------------------------------------------------
cycle: 9.DECODE(3), phase: 0, PC: 110, SP: 0, MAR: 10e(c), MDR: 14
IR: DECODING (c) Micro(0): 0010000000000000000000001100000000001000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(1) ALUS(0) REGR1(0) OP0(20) MDRin(1) 
ALUS(0) ALUout(20) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:4
ALU: 0:MDRout(14) 1:REGR0(0) func: out:14
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 9.DECODE(3), phase: 1, PC: 110, SP: 0, MAR: 10e(c), MDR: 14
IR: ldi (c) - (0000000000001100), Micro(0): 0010000000000000000000001100000000001000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:4
ALU: 0:MDRout(14) 1:REGR0(0) func: out:14
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 9.EXECUTE(7), phase: 0, PC: 110, SP: 0, MAR: 10e(c), MDR: 1
IR: ldi (c) - (0000000000001100), Micro(128): 0001000000000000101000000100000000000000
REGWS(TGT) OP0S(MDRout) IRimm(3) ALUS(0) MDRin(3) 
ALUS(0) 
Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:1, tgt:4
ALU: 0:MDRout(1) 1:REGR0(0) func: out:1
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 9.EXECUTE(7), phase: 1, PC: 110, SP: 0, MAR: 10e(c), MDR: 1
IR: ldi (c) - (0000000000001100), Micro(128): 0001000000000000101000000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:1, tgt:4
ALU: 0:MDRout(1) 1:REGR0(0) func: out:1
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG4 <- 1
MAR <- 110
PC++
IR <- b614
------------------------------------------------------
cycle: 10.DECODE(3), phase: 0, PC: 112, SP: 0, MAR: 110(b614), MDR: 1
IR: DECODING (b614) Micro(27): 0000000000000000000000000000000000000000
IRimm(5) ALUS(0) REGR1(0) OP0(0) MDRin(5) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:4
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 10.DECODE(3), phase: 1, PC: 112, SP: 0, MAR: 110(b614), MDR: 1
IR: stb.b (b614) - (1011011000010100), Micro(27): 0000000000000000000000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:4
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 10.READ(5), phase: 0, PC: 112, SP: 0, MAR: 110(b614), MDR: 1
IR: stb.b (b614) - (1011011000010100), Micro(91): 1000000010001001000000000000100000000000
MAR_LOAD REGR0S(ARG0) REGR1S(ARG1) OP1S(REGR1) ALUS(0) REGR1(20) OP1(20) 
ALUS(0) ALUout(20) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:REG0
args: 0:0, 1:2, tgt:4
ALU: 0:REGR0(0) 1:REGR1(14) func: out:14
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 10.READ(5), phase: 1, PC: 112, SP: 0, MAR: 110(b614), MDR: 1
IR: stb.b (b614) - (1011011000010100), Micro(91): 1000000010001001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:REG0
args: 0:0, 1:2, tgt:4
ALU: 0:REGR0(0) 1:REGR1(14) func: out:14
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MAR <- 14
------------------------------------------------------
cycle: 10.EXECUTE(7), phase: 0, PC: 112, SP: 0, MAR: 14(0), MDR: 1
IR: stb.b (b614) - (1011011000010100), Micro(155): 0010100110100000000010000000100000000000
MDR_LOAD BE REGR0S(TGT) MDRS(ALUout) OP1S(REGR1) ALUS(0) REGR0(1) REGR1(0) OP0(1) OP1(0) MDRin(20) 
ALUS(0) ALUout(1) MDRin(1) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:4
ALU: 0:REGR0(1) 1:REGR1(0) func: out:1
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 10.EXECUTE(7), phase: 1, PC: 112, SP: 0, MAR: 14(0), MDR: 1
IR: stb.b (b614) - (1011011000010100), Micro(155): 0010100110100000000010000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:4
ALU: 0:REGR0(1) 1:REGR1(0) func: out:1
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
RAM[14H] <- 1 (100)
MAR <- 112
PC++
IR <- 9401
------------------------------------------------------
cycle: 11.DECODE(3), phase: 0, PC: 114, SP: 0, MAR: 112(9401), MDR: 1
IR: DECODING (9401) Micro(10): 0001000010001001101000000000100000010000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) IRimm(0) ALUS(0) REGR1(0) OP0(0) MDRin(0) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(0) 1:REGR1(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 11.DECODE(3), phase: 1, PC: 114, SP: 0, MAR: 112(9401), MDR: 1
IR: add (9401) - (1001010000000001), Micro(10): 0001000010001001101000000000100000010000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(0) 1:REGR1(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 0
MAR <- 114
PC++
IR <- 9402
------------------------------------------------------
cycle: 12.DECODE(3), phase: 0, PC: 116, SP: 0, MAR: 114(9402), MDR: 1
IR: DECODING (9402) Micro(10): 0001000010001001101000000000100000010000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(0) REGR1(0) OP0(0) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:0, 1:0, tgt:2
ALU: 0:REGR0(0) 1:REGR1(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 12.DECODE(3), phase: 1, PC: 116, SP: 0, MAR: 114(9402), MDR: 1
IR: add (9402) - (1001010000000010), Micro(10): 0001000010001001101000000000100000010000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:0, 1:0, tgt:2
ALU: 0:REGR0(0) 1:REGR1(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG2 <- 0
MAR <- 116
PC++
IR <- 9403
------------------------------------------------------
cycle: 13.DECODE(3), phase: 0, PC: 118, SP: 0, MAR: 116(9403), MDR: 1
IR: DECODING (9403) Micro(10): 0001000010001001101000000000100000010000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(0) REGR1(0) OP0(0) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:0, 1:0, tgt:3
ALU: 0:REGR0(0) 1:REGR1(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 13.DECODE(3), phase: 1, PC: 118, SP: 0, MAR: 116(9403), MDR: 1
IR: add (9403) - (1001010000000011), Micro(10): 0001000010001001101000000000100000010000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:0, 1:0, tgt:3
ALU: 0:REGR0(0) 1:REGR1(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 0
MAR <- 118
PC++
IR <- 9405
------------------------------------------------------
cycle: 14.DECODE(3), phase: 0, PC: 11a, SP: 0, MAR: 118(9405), MDR: 1
IR: DECODING (9405) Micro(10): 0001000010001001101000000000100000010000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(0) 1:REGR1(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 14.DECODE(3), phase: 1, PC: 11a, SP: 0, MAR: 118(9405), MDR: 1
IR: add (9405) - (1001010000000101), Micro(10): 0001000010001001101000000000100000010000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(0) 1:REGR1(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
BP <- 0
MAR <- 11a
PC++
IR <- de1
------------------------------------------------------
cycle: 15.DECODE(3), phase: 0, PC: 11c, SP: 0, MAR: 11a(de1), MDR: 1
IR: DECODING (de1) Micro(0): 0010000000000000000000001100000000001000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(444) ALUS(0) REGR1(0) OP0(1) MDRin(444) 
ALUS(0) ALUout(1) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:4, tgt:1
ALU: 0:MDRout(1) 1:REGR0(0) func: out:1
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 15.DECODE(3), phase: 1, PC: 11c, SP: 0, MAR: 11a(de1), MDR: 1
IR: ldi (de1) - (0000110111100001), Micro(0): 0010000000000000000000001100000000001000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:4, tgt:1
ALU: 0:MDRout(1) 1:REGR0(0) func: out:1
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 01bc
------------------------------------------------------
cycle: 15.EXECUTE(7), phase: 0, PC: 11c, SP: 0, MAR: 11a(de1), MDR: 1bc
IR: ldi (de1) - (0000110111100001), Micro(128): 0001000000000000101000000100000000000000
REGWS(TGT) OP0S(MDRout) IRimm(65528) ALUS(0) MDRin(65528) 
ALUS(0) 
Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:7, 1:4, tgt:1
ALU: 0:MDRout(1bc) 1:REGR0(0) func: out:1bc
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 15.EXECUTE(7), phase: 1, PC: 11c, SP: 0, MAR: 11a(de1), MDR: 1bc
IR: ldi (de1) - (0000110111100001), Micro(128): 0001000000000000101000000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:7, 1:4, tgt:1
ALU: 0:MDRout(1bc) 1:REGR0(0) func: out:1bc
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 1bc
MAR <- 11c
PC++
IR <- 1e2
------------------------------------------------------
cycle: 16.DECODE(3), phase: 0, PC: 11e, SP: 0, MAR: 11c(1e2), MDR: 1bc
IR: DECODING (1e2) Micro(0): 0010000000000000000000001100000000001000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(60) ALUS(0) REGR1(0) OP0(444) MDRin(60) 
ALUS(0) ALUout(444) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:4, tgt:2
ALU: 0:MDRout(1bc) 1:REGR0(0) func: out:1bc
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 16.DECODE(3), phase: 1, PC: 11e, SP: 0, MAR: 11c(1e2), MDR: 1bc
IR: ldi (1e2) - (0000000111100010), Micro(0): 0010000000000000000000001100000000001000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:4, tgt:2
ALU: 0:MDRout(1bc) 1:REGR0(0) func: out:1bc
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 003c
------------------------------------------------------
cycle: 16.EXECUTE(7), phase: 0, PC: 11e, SP: 0, MAR: 11c(1e2), MDR: 3c
IR: ldi (1e2) - (0000000111100010), Micro(128): 0001000000000000101000000100000000000000
REGWS(TGT) OP0S(MDRout) IRimm(65528) ALUS(0) MDRin(65528) 
ALUS(0) 
Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:7, 1:4, tgt:2
ALU: 0:MDRout(3c) 1:REGR0(0) func: out:3c
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 16.EXECUTE(7), phase: 1, PC: 11e, SP: 0, MAR: 11c(1e2), MDR: 3c
IR: ldi (1e2) - (0000000111100010), Micro(128): 0001000000000000101000000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:7, 1:4, tgt:2
ALU: 0:MDRout(3c) 1:REGR0(0) func: out:3c
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG2 <- 3c
MAR <- 11e
PC++
IR <- 9655
------------------------------------------------------
cycle: 17.DECODE(3), phase: 0, PC: 120, SP: 0, MAR: 11e(9655), MDR: 3c
IR: DECODING (9655) Micro(11): 0001000010001001101000000000100000110000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(21) ALUS(1) REGR0(444) REGR1(60) OP0(444) OP1(60) MDRin(21) 
ALUS(1) ALUout(384) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:5
ALU: 0:REGR0(1bc) 1:REGR1(3c) func: out:180
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 17.DECODE(3), phase: 1, PC: 120, SP: 0, MAR: 11e(9655), MDR: 3c
IR: sub (9655) - (1001011001010101), Micro(11): 0001000010001001101000000000100000110000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:5
ALU: 0:REGR0(1bc) 1:REGR1(3c) func: out:180
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
BP <- 180
MAR <- 120
PC++
IR <- 8af2
------------------------------------------------------
cycle: 18.DECODE(3), phase: 0, PC: 122, SP: 0, MAR: 120(8af2), MDR: 3c
IR: DECODING (8af2) Micro(5): 0010000000000000000000000000000000000000
MDR_LOAD IRimm(60) ALUS(0) REGR1(0) OP0(0) MDRin(60) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:3, 1:6, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 18.DECODE(3), phase: 1, PC: 122, SP: 0, MAR: 120(8af2), MDR: 3c
IR: ldb s7 (8af2) - (1000101011110010), Micro(5): 0010000000000000000000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:3, 1:6, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 003c
------------------------------------------------------
cycle: 18.READ(5), phase: 0, PC: 122, SP: 0, MAR: 120(8af2), MDR: 3c
IR: ldb s7 (8af2) - (1000101011110010), Micro(69): 1000000001010000000000000100000000000000
MAR_LOAD REGR0S(BP) OP0S(MDRout) ALUS(0) REGR0(384) OP0(60) OP1(384) 
ALUS(0) ALUout(444) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:BP, r1:REG0, w:REG0
args: 0:3, 1:6, tgt:2
ALU: 0:MDRout(3c) 1:REGR0(180) func: out:1bc
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 18.READ(5), phase: 1, PC: 122, SP: 0, MAR: 120(8af2), MDR: 3c
IR: ldb s7 (8af2) - (1000101011110010), Micro(69): 1000000001010000000000000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:BP, r1:REG0, w:REG0
args: 0:3, 1:6, tgt:2
ALU: 0:MDRout(3c) 1:REGR0(180) func: out:1bc
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MAR <- 1bc
------------------------------------------------------
cycle: 18.EXECUTE(7), phase: 0, PC: 122, SP: 0, MAR: 1bc(aa00), MDR: 3c
IR: ldb s7 (8af2) - (1000101011110010), Micro(133): 0011000100000000101101000100000000000000
MDR_LOAD BE REGWS(TGT2) MDRS(RAMout) OP0S(MDRout) ALUS(0) REGR0(0) OP1(0) MDRin(170) 
ALUS(0) ALUout(60) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT2
args: 0:3, 1:6, tgt:2
ALU: 0:MDRout(3c) 1:REGR0(0) func: out:3c
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 18.EXECUTE(7), phase: 1, PC: 122, SP: 0, MAR: 1bc(aa), MDR: 3c
IR: ldb s7 (8af2) - (1000101011110010), Micro(133): 0011000100000000101101000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT2
args: 0:3, 1:6, tgt:2
ALU: 0:MDRout(3c) 1:REGR0(0) func: out:3c
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 00aa
REG3 <- aa
MAR <- 122
PC++
IR <- 551
------------------------------------------------------
cycle: 19.DECODE(3), phase: 0, PC: 124, SP: 0, MAR: 122(551), MDR: aa
IR: DECODING (551) Micro(0): 0010000000000000000000001100000000001000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(170) ALUS(0) REGR1(0) OP0(170) MDRin(170) 
ALUS(0) ALUout(170) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:5, 1:2, tgt:1
ALU: 0:MDRout(aa) 1:REGR0(0) func: out:aa
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 19.DECODE(3), phase: 1, PC: 124, SP: 0, MAR: 122(551), MDR: aa
IR: ldi (551) - (0000010101010001), Micro(0): 0010000000000000000000001100000000001000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:5, 1:2, tgt:1
ALU: 0:MDRout(aa) 1:REGR0(0) func: out:aa
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 00aa
------------------------------------------------------
cycle: 19.EXECUTE(7), phase: 0, PC: 124, SP: 0, MAR: 122(551), MDR: aa
IR: ldi (551) - (0000010101010001), Micro(128): 0001000000000000101000000100000000000000
REGWS(TGT) OP0S(MDRout) IRimm(65492) ALUS(0) MDRin(65492) 
ALUS(0) 
Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:5, 1:2, tgt:1
ALU: 0:MDRout(aa) 1:REGR0(0) func: out:aa
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 19.EXECUTE(7), phase: 1, PC: 124, SP: 0, MAR: 122(551), MDR: aa
IR: ldi (551) - (0000010101010001), Micro(128): 0001000000000000101000000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:5, 1:2, tgt:1
ALU: 0:MDRout(aa) 1:REGR0(0) func: out:aa
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- aa
MAR <- 124
PC++
IR <- 9e59
------------------------------------------------------
cycle: 20.DECODE(3), phase: 0, PC: 126, SP: 0, MAR: 124(9e59), MDR: aa
IR: DECODING (9e59) Micro(15): 0001000010001001101000000000100100110000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(22) SKIP ALUS(1) REGR0(170) REGR1(170) OP0(170) OP1(170) MDRin(22) 
ALUS(1) ALUout(0) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:3, tgt:1
ALU: 0:REGR0(aa) 1:REGR1(aa) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 20.DECODE(3), phase: 1, PC: 126, SP: 0, MAR: 124(9e59), MDR: aa
IR: addskp.z (9e59) - (1001111001011001), Micro(15): 0001000010001001101000000000100100110000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:3, tgt:1
ALU: 0:REGR0(aa) 1:REGR1(aa) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC++ (SKIP)
REG1 <- 0
MAR <- 128
PC++
IR <- 2002
------------------------------------------------------
cycle: 21.DECODE(3), phase: 0, PC: 12a, SP: 0, MAR: 128(2002), MDR: aa
IR: DECODING (2002) Micro(1): 0010000000000000000000010000000000001000
MDR_LOAD IMMS(IMM13) IRimm(2) ALUS(0) REGR1(0) OP0(0) MDRin(2) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 21.DECODE(3), phase: 1, PC: 12a, SP: 0, MAR: 128(2002), MDR: aa
IR: br (2002) - (0010000000000010), Micro(1): 0010000000000000000000010000000000001000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0002
------------------------------------------------------
cycle: 21.EXECUTE(7), phase: 0, PC: 12a, SP: 0, MAR: 128(2002), MDR: 2
IR: br (2002) - (0010000000000010), Micro(129): 0001000001110000011100000100000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(0) ALUS(0) REGR0(298) OP0(2) OP1(298) MDRin(0) 
ALUS(0) ALUout(300) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:0, 1:0, tgt:2
ALU: 0:MDRout(2) 1:REGR0(12a) func: out:12c
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 21.EXECUTE(7), phase: 1, PC: 12a, SP: 0, MAR: 128(2002), MDR: 2
IR: br (2002) - (0010000000000010), Micro(129): 0001000001110000011100000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:0, 1:0, tgt:2
ALU: 0:MDRout(2) 1:REGR0(12a) func: out:12c
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 12c
MAR <- 12c
PC++
IR <- a2
------------------------------------------------------
cycle: 22.DECODE(3), phase: 0, PC: 12e, SP: 0, MAR: 12c(a2), MDR: 2
IR: DECODING (a2) Micro(0): 0010000000000000000000001100000000001000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(20) ALUS(0) REGR1(0) OP0(2) MDRin(20) 
ALUS(0) ALUout(2) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:2, 1:4, tgt:2
ALU: 0:MDRout(2) 1:REGR0(0) func: out:2
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 22.DECODE(3), phase: 1, PC: 12e, SP: 0, MAR: 12c(a2), MDR: 2
IR: ldi (a2) - (0000000010100010), Micro(0): 0010000000000000000000001100000000001000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:2, 1:4, tgt:2
ALU: 0:MDRout(2) 1:REGR0(0) func: out:2
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0014
------------------------------------------------------
cycle: 22.EXECUTE(7), phase: 0, PC: 12e, SP: 0, MAR: 12c(a2), MDR: 14
IR: ldi (a2) - (0000000010100010), Micro(128): 0001000000000000101000000100000000000000
REGWS(TGT) OP0S(MDRout) IRimm(40) ALUS(0) MDRin(40) 
ALUS(0) 
Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:2, 1:4, tgt:2
ALU: 0:MDRout(14) 1:REGR0(0) func: out:14
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 22.EXECUTE(7), phase: 1, PC: 12e, SP: 0, MAR: 12c(a2), MDR: 14
IR: ldi (a2) - (0000000010100010), Micro(128): 0001000000000000101000000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:2, 1:4, tgt:2
ALU: 0:MDRout(14) 1:REGR0(0) func: out:14
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG2 <- 14
MAR <- 12e
PC++
IR <- 14
------------------------------------------------------
cycle: 23.DECODE(3), phase: 0, PC: 130, SP: 0, MAR: 12e(14), MDR: 14
IR: DECODING (14) Micro(0): 0010000000000000000000001100000000001000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(2) ALUS(0) REGR1(0) OP0(20) MDRin(2) 
ALUS(0) ALUout(20) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:4
ALU: 0:MDRout(14) 1:REGR0(0) func: out:14
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 23.DECODE(3), phase: 1, PC: 130, SP: 0, MAR: 12e(14), MDR: 14
IR: ldi (14) - (0000000000010100), Micro(0): 0010000000000000000000001100000000001000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:4
ALU: 0:MDRout(14) 1:REGR0(0) func: out:14
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0002
------------------------------------------------------
cycle: 23.EXECUTE(7), phase: 0, PC: 130, SP: 0, MAR: 12e(14), MDR: 2
IR: ldi (14) - (0000000000010100), Micro(128): 0001000000000000101000000100000000000000
REGWS(TGT) OP0S(MDRout) IRimm(5) ALUS(0) MDRin(5) 
ALUS(0) 
Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:2, tgt:4
ALU: 0:MDRout(2) 1:REGR0(0) func: out:2
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 23.EXECUTE(7), phase: 1, PC: 130, SP: 0, MAR: 12e(14), MDR: 2
IR: ldi (14) - (0000000000010100), Micro(128): 0001000000000000101000000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:2, tgt:4
ALU: 0:MDRout(2) 1:REGR0(0) func: out:2
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG4 <- 2
MAR <- 130
PC++
IR <- b614
------------------------------------------------------
cycle: 24.DECODE(3), phase: 0, PC: 132, SP: 0, MAR: 130(b614), MDR: 2
IR: DECODING (b614) Micro(27): 0000000000000000000000000000000000000000
ALUS(0) REGR1(0) OP0(0) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:4
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 24.DECODE(3), phase: 1, PC: 132, SP: 0, MAR: 130(b614), MDR: 2
IR: stb.b (b614) - (1011011000010100), Micro(27): 0000000000000000000000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:4
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 24.READ(5), phase: 0, PC: 132, SP: 0, MAR: 130(b614), MDR: 2
IR: stb.b (b614) - (1011011000010100), Micro(91): 1000000010001001000000000000100000000000
MAR_LOAD REGR0S(ARG0) REGR1S(ARG1) OP1S(REGR1) ALUS(0) REGR1(20) OP1(20) 
ALUS(0) ALUout(20) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:REG0
args: 0:0, 1:2, tgt:4
ALU: 0:REGR0(0) 1:REGR1(14) func: out:14
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 24.READ(5), phase: 1, PC: 132, SP: 0, MAR: 130(b614), MDR: 2
IR: stb.b (b614) - (1011011000010100), Micro(91): 1000000010001001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:REG0
args: 0:0, 1:2, tgt:4
ALU: 0:REGR0(0) 1:REGR1(14) func: out:14
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MAR <- 14
------------------------------------------------------
cycle: 24.EXECUTE(7), phase: 0, PC: 132, SP: 0, MAR: 14(100), MDR: 2
IR: stb.b (b614) - (1011011000010100), Micro(155): 0010100110100000000010000000100000000000
MDR_LOAD BE REGR0S(TGT) MDRS(ALUout) OP1S(REGR1) ALUS(0) REGR0(2) REGR1(0) OP0(2) OP1(0) MDRin(20) 
ALUS(0) ALUout(2) MDRin(2) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:4
ALU: 0:REGR0(2) 1:REGR1(0) func: out:2
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 24.EXECUTE(7), phase: 1, PC: 132, SP: 0, MAR: 14(1), MDR: 2
IR: stb.b (b614) - (1011011000010100), Micro(155): 0010100110100000000010000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:4
ALU: 0:REGR0(2) 1:REGR1(0) func: out:2
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0002
RAM[14H] <- 2 (200)
MAR <- 132
PC++
IR <- 9401
------------------------------------------------------
cycle: 25.DECODE(3), phase: 0, PC: 134, SP: 0, MAR: 132(9401), MDR: 2
IR: DECODING (9401) Micro(10): 0001000010001001101000000000100000010000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) IRimm(0) ALUS(0) REGR1(0) OP0(0) MDRin(0) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(0) 1:REGR1(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 25.DECODE(3), phase: 1, PC: 134, SP: 0, MAR: 132(9401), MDR: 2
IR: add (9401) - (1001010000000001), Micro(10): 0001000010001001101000000000100000010000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(0) 1:REGR1(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 0
MAR <- 134
PC++
IR <- 9402
------------------------------------------------------
cycle: 26.DECODE(3), phase: 0, PC: 136, SP: 0, MAR: 134(9402), MDR: 2
IR: DECODING (9402) Micro(10): 0001000010001001101000000000100000010000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(0) REGR1(0) OP0(0) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:0, 1:0, tgt:2
ALU: 0:REGR0(0) 1:REGR1(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 26.DECODE(3), phase: 1, PC: 136, SP: 0, MAR: 134(9402), MDR: 2
IR: add (9402) - (1001010000000010), Micro(10): 0001000010001001101000000000100000010000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:0, 1:0, tgt:2
ALU: 0:REGR0(0) 1:REGR1(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG2 <- 0
MAR <- 136
PC++
IR <- 9403
------------------------------------------------------
cycle: 27.DECODE(3), phase: 0, PC: 138, SP: 0, MAR: 136(9403), MDR: 2
IR: DECODING (9403) Micro(10): 0001000010001001101000000000100000010000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(0) REGR1(0) OP0(0) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:0, 1:0, tgt:3
ALU: 0:REGR0(0) 1:REGR1(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 27.DECODE(3), phase: 1, PC: 138, SP: 0, MAR: 136(9403), MDR: 2
IR: add (9403) - (1001010000000011), Micro(10): 0001000010001001101000000000100000010000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:0, 1:0, tgt:3
ALU: 0:REGR0(0) 1:REGR1(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 0
MAR <- 138
PC++
IR <- 9405
------------------------------------------------------
cycle: 28.DECODE(3), phase: 0, PC: 13a, SP: 0, MAR: 138(9405), MDR: 2
IR: DECODING (9405) Micro(10): 0001000010001001101000000000100000010000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(0) 1:REGR1(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 28.DECODE(3), phase: 1, PC: 13a, SP: 0, MAR: 138(9405), MDR: 2
IR: add (9405) - (1001010000000101), Micro(10): 0001000010001001101000000000100000010000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(0) 1:REGR1(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
BP <- 0
MAR <- 13a
PC++
IR <- de1
------------------------------------------------------
cycle: 29.DECODE(3), phase: 0, PC: 13c, SP: 0, MAR: 13a(de1), MDR: 2
IR: DECODING (de1) Micro(0): 0010000000000000000000001100000000001000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(444) ALUS(0) REGR1(0) OP0(2) MDRin(444) 
ALUS(0) ALUout(2) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:4, tgt:1
ALU: 0:MDRout(2) 1:REGR0(0) func: out:2
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 29.DECODE(3), phase: 1, PC: 13c, SP: 0, MAR: 13a(de1), MDR: 2
IR: ldi (de1) - (0000110111100001), Micro(0): 0010000000000000000000001100000000001000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:4, tgt:1
ALU: 0:MDRout(2) 1:REGR0(0) func: out:2
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 01bc
------------------------------------------------------
cycle: 29.EXECUTE(7), phase: 0, PC: 13c, SP: 0, MAR: 13a(de1), MDR: 1bc
IR: ldi (de1) - (0000110111100001), Micro(128): 0001000000000000101000000100000000000000
REGWS(TGT) OP0S(MDRout) IRimm(65528) ALUS(0) MDRin(65528) 
ALUS(0) 
Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:7, 1:4, tgt:1
ALU: 0:MDRout(1bc) 1:REGR0(0) func: out:1bc
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 29.EXECUTE(7), phase: 1, PC: 13c, SP: 0, MAR: 13a(de1), MDR: 1bc
IR: ldi (de1) - (0000110111100001), Micro(128): 0001000000000000101000000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:7, 1:4, tgt:1
ALU: 0:MDRout(1bc) 1:REGR0(0) func: out:1bc
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 1bc
MAR <- 13c
PC++
IR <- 1e2
------------------------------------------------------
cycle: 30.DECODE(3), phase: 0, PC: 13e, SP: 0, MAR: 13c(1e2), MDR: 1bc
IR: DECODING (1e2) Micro(0): 0010000000000000000000001100000000001000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(60) ALUS(0) REGR1(0) OP0(444) MDRin(60) 
ALUS(0) ALUout(444) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:4, tgt:2
ALU: 0:MDRout(1bc) 1:REGR0(0) func: out:1bc
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 30.DECODE(3), phase: 1, PC: 13e, SP: 0, MAR: 13c(1e2), MDR: 1bc
IR: ldi (1e2) - (0000000111100010), Micro(0): 0010000000000000000000001100000000001000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:4, tgt:2
ALU: 0:MDRout(1bc) 1:REGR0(0) func: out:1bc
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 003c
------------------------------------------------------
cycle: 30.EXECUTE(7), phase: 0, PC: 13e, SP: 0, MAR: 13c(1e2), MDR: 3c
IR: ldi (1e2) - (0000000111100010), Micro(128): 0001000000000000101000000100000000000000
REGWS(TGT) OP0S(MDRout) IRimm(65528) ALUS(0) MDRin(65528) 
ALUS(0) 
Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:7, 1:4, tgt:2
ALU: 0:MDRout(3c) 1:REGR0(0) func: out:3c
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 30.EXECUTE(7), phase: 1, PC: 13e, SP: 0, MAR: 13c(1e2), MDR: 3c
IR: ldi (1e2) - (0000000111100010), Micro(128): 0001000000000000101000000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:7, 1:4, tgt:2
ALU: 0:MDRout(3c) 1:REGR0(0) func: out:3c
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG2 <- 3c
MAR <- 13e
PC++
IR <- 9455
------------------------------------------------------
cycle: 31.DECODE(3), phase: 0, PC: 140, SP: 0, MAR: 13e(9455), MDR: 3c
IR: DECODING (9455) Micro(10): 0001000010001001101000000000100000010000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) IRimm(21) ALUS(0) REGR0(444) REGR1(60) OP0(444) OP1(60) MDRin(21) 
ALUS(0) ALUout(504) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:5
ALU: 0:REGR0(1bc) 1:REGR1(3c) func: out:1f8
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 31.DECODE(3), phase: 1, PC: 140, SP: 0, MAR: 13e(9455), MDR: 3c
IR: add (9455) - (1001010001010101), Micro(10): 0001000010001001101000000000100000010000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:5
ALU: 0:REGR0(1bc) 1:REGR1(3c) func: out:1f8
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
BP <- 1f8
MAR <- 140
PC++
IR <- 8912
------------------------------------------------------
cycle: 32.DECODE(3), phase: 0, PC: 142, SP: 0, MAR: 140(8912), MDR: 3c
IR: DECODING (8912) Micro(4): 0010000000000000000000000000000000000000
MDR_LOAD IRimm(65476) ALUS(0) REGR1(0) OP0(0) MDRin(65476) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:4, 1:2, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 32.DECODE(3), phase: 1, PC: 142, SP: 0, MAR: 140(8912), MDR: 3c
IR: ldw s7 (8912) - (1000100100010010), Micro(4): 0010000000000000000000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:4, 1:2, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- ffc4
------------------------------------------------------
cycle: 32.READ(5), phase: 0, PC: 142, SP: 0, MAR: 140(8912), MDR: ffc4
IR: ldw s7 (8912) - (1000100100010010), Micro(68): 1000000001010000000000000100000000000000
MAR_LOAD REGR0S(BP) OP0S(MDRout) ALUS(0) REGR0(504) OP0(65476) OP1(504) 
ALUS(0) ALUout(444) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:BP, r1:REG0, w:REG0
args: 0:4, 1:2, tgt:2
ALU: 0:MDRout(ffc4) 1:REGR0(1f8) func: out:1bc
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 32.READ(5), phase: 1, PC: 142, SP: 0, MAR: 140(8912), MDR: ffc4
IR: ldw s7 (8912) - (1000100100010010), Micro(68): 1000000001010000000000000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:BP, r1:REG0, w:REG0
args: 0:4, 1:2, tgt:2
ALU: 0:MDRout(ffc4) 1:REGR0(1f8) func: out:1bc
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MAR <- 1bc
------------------------------------------------------
cycle: 32.EXECUTE(7), phase: 0, PC: 142, SP: 0, MAR: 1bc(aa00), MDR: ffc4
IR: ldw s7 (8912) - (1000100100010010), Micro(132): 0011000000000000101101000100000000000000
MDR_LOAD REGWS(TGT2) MDRS(RAMout) OP0S(MDRout) ALUS(0) REGR0(0) OP1(0) MDRin(43520) 
ALUS(0) ALUout(65476) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT2
args: 0:4, 1:2, tgt:2
ALU: 0:MDRout(ffc4) 1:REGR0(0) func: out:ffc4
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 32.EXECUTE(7), phase: 1, PC: 142, SP: 0, MAR: 1bc(aa00), MDR: ffc4
IR: ldw s7 (8912) - (1000100100010010), Micro(132): 0011000000000000101101000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT2
args: 0:4, 1:2, tgt:2
ALU: 0:MDRout(ffc4) 1:REGR0(0) func: out:ffc4
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- aa00
REG3 <- aa00
MAR <- 142
PC++
IR <- 551
------------------------------------------------------
cycle: 33.DECODE(3), phase: 0, PC: 144, SP: 0, MAR: 142(551), MDR: aa00
IR: DECODING (551) Micro(0): 0010000000000000000000001100000000001000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(170) ALUS(0) REGR1(0) OP0(43520) MDRin(170) 
ALUS(0) ALUout(43520) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:5, 1:2, tgt:1
ALU: 0:MDRout(aa00) 1:REGR0(0) func: out:aa00
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 33.DECODE(3), phase: 1, PC: 144, SP: 0, MAR: 142(551), MDR: aa00
IR: ldi (551) - (0000010101010001), Micro(0): 0010000000000000000000001100000000001000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:5, 1:2, tgt:1
ALU: 0:MDRout(aa00) 1:REGR0(0) func: out:aa00
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 00aa
------------------------------------------------------
cycle: 33.EXECUTE(7), phase: 0, PC: 144, SP: 0, MAR: 142(551), MDR: aa
IR: ldi (551) - (0000010101010001), Micro(128): 0001000000000000101000000100000000000000
REGWS(TGT) OP0S(MDRout) IRimm(65492) ALUS(0) MDRin(65492) 
ALUS(0) 
Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:5, 1:2, tgt:1
ALU: 0:MDRout(aa) 1:REGR0(0) func: out:aa
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 33.EXECUTE(7), phase: 1, PC: 144, SP: 0, MAR: 142(551), MDR: aa
IR: ldi (551) - (0000010101010001), Micro(128): 0001000000000000101000000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:5, 1:2, tgt:1
ALU: 0:MDRout(aa) 1:REGR0(0) func: out:aa
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- aa
MAR <- 144
PC++
IR <- 9e59
------------------------------------------------------
cycle: 34.DECODE(3), phase: 0, PC: 146, SP: 0, MAR: 144(9e59), MDR: aa
IR: DECODING (9e59) Micro(15): 0001000010001001101000000000100100110000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(22) SKIP ALUS(1) REGR0(170) REGR1(43520) OP0(170) OP1(43520) MDRin(22) 
ALUS(1) ALUout(22186) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:3, tgt:1
ALU: 0:REGR0(aa) 1:REGR1(aa00) func: out:56aa
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 34.DECODE(3), phase: 1, PC: 146, SP: 0, MAR: 144(9e59), MDR: aa
IR: addskp.z (9e59) - (1001111001011001), Micro(15): 0001000010001001101000000000100100110000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:3, tgt:1
ALU: 0:REGR0(aa) 1:REGR1(aa00) func: out:56aa
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 56aa
MAR <- 146
PC++
IR <- 206a
------------------------------------------------------
cycle: 35.DECODE(3), phase: 0, PC: 148, SP: 0, MAR: 146(206a), MDR: aa
IR: DECODING (206a) Micro(1): 0010000000000000000000010000000000001000
MDR_LOAD IMMS(IMM13) IRimm(106) ALUS(0) REGR1(0) OP0(0) MDRin(106) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:1, 1:5, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 35.DECODE(3), phase: 1, PC: 148, SP: 0, MAR: 146(206a), MDR: aa
IR: br (206a) - (0010000001101010), Micro(1): 0010000000000000000000010000000000001000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:1, 1:5, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 006a
------------------------------------------------------
cycle: 35.EXECUTE(7), phase: 0, PC: 148, SP: 0, MAR: 146(206a), MDR: 6a
IR: br (206a) - (0010000001101010), Micro(129): 0001000001110000011100000100000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(26) ALUS(0) REGR0(328) OP0(106) OP1(328) MDRin(26) 
ALUS(0) ALUout(434) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:1, 1:5, tgt:2
ALU: 0:MDRout(6a) 1:REGR0(148) func: out:1b2
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 35.EXECUTE(7), phase: 1, PC: 148, SP: 0, MAR: 146(206a), MDR: 6a
IR: br (206a) - (0010000001101010), Micro(129): 0001000001110000011100000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:1, 1:5, tgt:2
ALU: 0:MDRout(6a) 1:REGR0(148) func: out:1b2
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 1b2
MAR <- 1b2
PC++
IR <- c03
------------------------------------------------------
cycle: 36.DECODE(3), phase: 0, PC: 1b4, SP: 0, MAR: 1b2(c03), MDR: 6a
IR: DECODING (c03) Micro(0): 0010000000000000000000001100000000001000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(384) ALUS(0) REGR1(0) OP0(106) MDRin(384) 
ALUS(0) ALUout(106) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:3
ALU: 0:MDRout(6a) 1:REGR0(0) func: out:6a
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 36.DECODE(3), phase: 1, PC: 1b4, SP: 0, MAR: 1b2(c03), MDR: 6a
IR: ldi (c03) - (0000110000000011), Micro(0): 0010000000000000000000001100000000001000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:3
ALU: 0:MDRout(6a) 1:REGR0(0) func: out:6a
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0180
------------------------------------------------------
cycle: 36.EXECUTE(7), phase: 0, PC: 1b4, SP: 0, MAR: 1b2(c03), MDR: 180
IR: ldi (c03) - (0000110000000011), Micro(128): 0001000000000000101000000100000000000000
REGWS(TGT) OP0S(MDRout) IRimm(0) ALUS(0) MDRin(0) 
ALUS(0) 
Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:3
ALU: 0:MDRout(180) 1:REGR0(0) func: out:180
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 36.EXECUTE(7), phase: 1, PC: 1b4, SP: 0, MAR: 1b2(c03), MDR: 180
IR: ldi (c03) - (0000110000000011), Micro(128): 0001000000000000101000000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:3
ALU: 0:MDRout(180) 1:REGR0(0) func: out:180
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 180
MAR <- 1b4
PC++
IR <- bdfe
------------------------------------------------------
cycle: 37.DECODE(3), phase: 0, PC: 1b6, SP: 0, MAR: 1b4(bdfe), MDR: 180
IR: DECODING (bdfe) Micro(30): 0010000000000000000000100000000000001000
MDR_LOAD IMMS(IMM7u) IRimm(127) ALUS(0) REGR1(0) OP0(0) MDRin(127) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:6
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 37.DECODE(3), phase: 1, PC: 1b6, SP: 0, MAR: 1b4(bdfe), MDR: 180
IR: addhi (bdfe) - (1011110111111110), Micro(30): 0010000000000000000000100000000000001000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:6
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 007f
------------------------------------------------------
cycle: 37.EXECUTE(7), phase: 0, PC: 1b6, SP: 0, MAR: 1b4(bdfe), MDR: 7f
IR: addhi (bdfe) - (1011110111111110), Micro(158): 0001000000001011101100000100100011000000
REGR1S(TGT2) REGWS(TGT2) OP0S(MDRout) OP1S(REGR1) ALUS(SGT) IRimm(65535) ALUS(6) REGR1(384) OP0(127) OP1(384) MDRin(65535) 
ALUS(6) ALUout(65408) 
ALUS(6) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:TGT2, w:TGT2
args: 0:7, 1:7, tgt:6
ALU: 0:MDRout(7f) 1:REGR1(180) func: out:ff80
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 37.EXECUTE(7), phase: 1, PC: 1b6, SP: 0, MAR: 1b4(bdfe), MDR: 7f
IR: addhi (bdfe) - (1011110111111110), Micro(158): 0001000000001011101100000100100011000000
ALUS(6) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:TGT2, w:TGT2
args: 0:7, 1:7, tgt:6
ALU: 0:MDRout(7f) 1:REGR1(180) func: out:ff80
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- ff80
MAR <- 1b6
PC++
IR <- 7fd
------------------------------------------------------
cycle: 38.DECODE(3), phase: 0, PC: 1b8, SP: 0, MAR: 1b6(7fd), MDR: 7f
IR: DECODING (7fd) Micro(0): 0010000000000000000000001100000000001000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(255) ALUS(0) REGR1(0) OP0(127) MDRin(255) 
ALUS(0) ALUout(127) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:5
ALU: 0:MDRout(7f) 1:REGR0(0) func: out:7f
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 38.DECODE(3), phase: 1, PC: 1b8, SP: 0, MAR: 1b6(7fd), MDR: 7f
IR: ldi (7fd) - (0000011111111101), Micro(0): 0010000000000000000000001100000000001000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:5
ALU: 0:MDRout(7f) 1:REGR0(0) func: out:7f
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 00ff
------------------------------------------------------
cycle: 38.EXECUTE(7), phase: 0, PC: 1b8, SP: 0, MAR: 1b6(7fd), MDR: ff
IR: ldi (7fd) - (0000011111111101), Micro(128): 0001000000000000101000000100000000000000
REGWS(TGT) OP0S(MDRout) IRimm(65535) ALUS(0) MDRin(65535) 
ALUS(0) 
Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:7, 1:7, tgt:5
ALU: 0:MDRout(ff) 1:REGR0(0) func: out:ff
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 38.EXECUTE(7), phase: 1, PC: 1b8, SP: 0, MAR: 1b6(7fd), MDR: ff
IR: ldi (7fd) - (0000011111111101), Micro(128): 0001000000000000101000000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:7, 1:7, tgt:5
ALU: 0:MDRout(ff) 1:REGR0(0) func: out:ff
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
BP <- ff
MAR <- 1b8
PC++
IR <- b41d
------------------------------------------------------
cycle: 39.DECODE(3), phase: 0, PC: 1ba, SP: 0, MAR: 1b8(b41d), MDR: ff
IR: DECODING (b41d) Micro(26): 0000000000000000000000000000000000000000
IRimm(7) ALUS(0) REGR1(0) OP0(0) MDRin(7) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:3, tgt:5
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 39.DECODE(3), phase: 1, PC: 1ba, SP: 0, MAR: 1b8(b41d), MDR: ff
IR: stw.b (b41d) - (1011010000011101), Micro(26): 0000000000000000000000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:3, tgt:5
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 39.READ(5), phase: 0, PC: 1ba, SP: 0, MAR: 1b8(b41d), MDR: ff
IR: stw.b (b41d) - (1011010000011101), Micro(90): 1000000010001001000000000000100000000000
MAR_LOAD REGR0S(ARG0) REGR1S(ARG1) OP1S(REGR1) ALUS(0) REGR1(65408) OP1(65408) 
ALUS(0) ALUout(65408) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:REG0
args: 0:0, 1:3, tgt:5
ALU: 0:REGR0(0) 1:REGR1(ff80) func: out:ff80
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 39.READ(5), phase: 1, PC: 1ba, SP: 0, MAR: 1b8(b41d), MDR: ff
IR: stw.b (b41d) - (1011010000011101), Micro(90): 1000000010001001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:REG0
args: 0:0, 1:3, tgt:5
ALU: 0:REGR0(0) 1:REGR1(ff80) func: out:ff80
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MAR <- ff80
------------------------------------------------------
cycle: 39.EXECUTE(7), phase: 0, PC: 1ba, SP: 0, MAR: ff80(0), MDR: ff
IR: stw.b (b41d) - (1011010000011101), Micro(154): 0010100010100000000010000000100000000000
MDR_LOAD REGR0S(TGT) MDRS(ALUout) OP1S(REGR1) ALUS(0) REGR0(255) REGR1(0) OP0(255) OP1(0) MDRin(65408) 
ALUS(0) ALUout(255) MDRin(255) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:3, tgt:5
ALU: 0:REGR0(ff) 1:REGR1(0) func: out:ff
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 39.EXECUTE(7), phase: 1, PC: 1ba, SP: 0, MAR: ff80(0), MDR: ff
IR: stw.b (b41d) - (1011010000011101), Micro(154): 0010100010100000000010000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:3, tgt:5
ALU: 0:REGR0(ff) 1:REGR1(0) func: out:ff
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 00ff
RAM[ff80] <- ff
MAR <- 1ba
PC++
IR <- fe00
HALT: encountered halt instruction.

-------RAM---------DATA--------
0x064: 00         0x000: 801
0x062: 00         0x002: 20fc
0x060: 00         0x004: 00
0x05e: 00         0x006: 00
0x05c: 00         0x008: 00
0x05a: 00         0x00a: 00
0x058: 00         0x00c: 00
0x056: 00         0x00e: 00
0x054: 00         0x010: 64
0x052: 00         0x012: 01
0x050: 00         0x014: 200
0x04e: 00         0x016: 00
0x04c: 00         0x018: 00
0x04a: 00         0x01a: 00
0x048: 00         0x01c: 00
0x046: 00         0x01e: 00
0x044: 00         0x020: 00
0x042: 00         0x022: 00
0x040: 00         0x024: 00
0x03e: 00         0x026: 00
0x03c: 00         0x028: 00
0x03a: 00         0x02a: 00
0x038: 00         0x02c: 00
0x036: 00         0x02e: 00
0x034: 00         0x030: 00
0x032: 00         0x032: 00
----------------------------REGISTERS-----------------------
R0: 0000
R1: 56aa
R2: 003c
R3: ff80
R4: 0002
R5: 00ff
R6: 0000
R7: 01bc
----------------------------SYSREGS-----------------------
MAR: 01ba
MDR: 00ff
IR: fe00
