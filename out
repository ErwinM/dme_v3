opt: 97
Found colon - skip: 0Found colon - skip: 0Found colon - skip: 0Found colon - skip: 0Found colon - skip: 0Found colon - skip: 0Found colon - skip: 0Found colon - skip: 0Found colon - skip: 0Init done..
MAR <- 0
PC++
IR <- 9401
------------------------------------------------------
cycle: 0.DECODE(3), phase: 0, PC: 2, SP: 0, MAR: 0(9401), MDR: 0
IR: DECODING (9401) Micro(10): 000100001000100110100000000010000001000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(0) 
ALUS(0) 
Stable after 2 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(0) 1:REGR1(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 0.DECODE(3), phase: 1, PC: 2, SP: 0, MAR: 0(9401), MDR: 0
IR: add (9401) - (1001010000000001), Micro(10): 000100001000100110100000000010000001000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(0) 1:REGR1(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 0
MAR <- 2
PC++
IR <- 9
------------------------------------------------------
cycle: 1.DECODE(3), phase: 0, PC: 4, SP: 0, MAR: 2(9), MDR: 0
IR: DECODING (9) Micro(0): 001000000000000000000000110000000000100000000000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:MDRout(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 1.DECODE(3), phase: 1, PC: 4, SP: 0, MAR: 2(9), MDR: 0
IR: ldi (9) - (0000000000001001), Micro(0): 001000000000000000000000110000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:MDRout(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 1.EXECUTE(7), phase: 0, PC: 4, SP: 0, MAR: 2(9), MDR: 1
IR: ldi (9) - (0000000000001001), Micro(128): 000100000000000010100000010000000000000000000000
REGWS(TGT) OP0S(MDRout) IRimm(2) ALUS(0) MDRin(2) 
ALUS(0) 
Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:MDRout(1) 1:REGR0(0) func: out:1
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 1.EXECUTE(7), phase: 1, PC: 4, SP: 0, MAR: 2(9), MDR: 1
IR: ldi (9) - (0000000000001001), Micro(128): 000100000000000010100000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:MDRout(1) 1:REGR0(0) func: out:1
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 1
MAR <- 4
PC++
IR <- 82
------------------------------------------------------
cycle: 2.DECODE(3), phase: 0, PC: 6, SP: 0, MAR: 4(82), MDR: 1
IR: DECODING (82) Micro(0): 001000000000000000000000110000000000100000000000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(16) ALUS(0) REGR1(0) OP0(1) MDRin(16) 
ALUS(0) ALUout(1) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:2, 1:0, tgt:2
ALU: 0:MDRout(1) 1:REGR0(0) func: out:1
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 2.DECODE(3), phase: 1, PC: 6, SP: 0, MAR: 4(82), MDR: 1
IR: ldi (82) - (0000000010000010), Micro(0): 001000000000000000000000110000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:2, 1:0, tgt:2
ALU: 0:MDRout(1) 1:REGR0(0) func: out:1
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0010
------------------------------------------------------
cycle: 2.EXECUTE(7), phase: 0, PC: 6, SP: 0, MAR: 4(82), MDR: 10
IR: ldi (82) - (0000000010000010), Micro(128): 000100000000000010100000010000000000000000000000
REGWS(TGT) OP0S(MDRout) IRimm(32) ALUS(0) MDRin(32) 
ALUS(0) 
Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:2, 1:0, tgt:2
ALU: 0:MDRout(10) 1:REGR0(0) func: out:10
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 2.EXECUTE(7), phase: 1, PC: 6, SP: 0, MAR: 4(82), MDR: 10
IR: ldi (82) - (0000000010000010), Micro(128): 000100000000000010100000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:2, 1:0, tgt:2
ALU: 0:MDRout(10) 1:REGR0(0) func: out:10
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG2 <- 10
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 3.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 10
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 3.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 10
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 3.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(1) OP0(1) OP1(1) MDRin(2) 
ALUS(0) ALUout(2) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(1) 1:MDRout(1) func: out:2
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 3.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(1) 1:MDRout(1) func: out:2
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 2
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 4.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(2) REGR1(16) OP0(2) OP1(16) MDRin(20) 
ALUS(1) ALUout(65522) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(2) 1:REGR1(10) func: out:fff2
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 4.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(2) 1:REGR1(10) func: out:fff2
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- fff2
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 5.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 5.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 5.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 5.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 6.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 6.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 6.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(2) OP0(2) OP1(1) MDRin(2) 
ALUS(0) ALUout(3) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(2) 1:MDRout(1) func: out:3
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 6.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(2) 1:MDRout(1) func: out:3
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 3
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 7.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(3) REGR1(16) OP0(3) OP1(16) MDRin(20) 
ALUS(1) ALUout(65523) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(3) 1:REGR1(10) func: out:fff3
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 7.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(3) 1:REGR1(10) func: out:fff3
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- fff3
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 8.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 8.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 8.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 8.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 9.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 9.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 9.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(3) OP0(3) OP1(1) MDRin(2) 
ALUS(0) ALUout(4) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(3) 1:MDRout(1) func: out:4
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 9.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(3) 1:MDRout(1) func: out:4
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 4
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 10.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(4) REGR1(16) OP0(4) OP1(16) MDRin(20) 
ALUS(1) ALUout(65524) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(4) 1:REGR1(10) func: out:fff4
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 10.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(4) 1:REGR1(10) func: out:fff4
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- fff4
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 11.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 11.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 11.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 11.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 12.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 12.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 12.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(4) OP0(4) OP1(1) MDRin(2) 
ALUS(0) ALUout(5) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(4) 1:MDRout(1) func: out:5
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 12.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(4) 1:MDRout(1) func: out:5
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 5
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 13.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(5) REGR1(16) OP0(5) OP1(16) MDRin(20) 
ALUS(1) ALUout(65525) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(5) 1:REGR1(10) func: out:fff5
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 13.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(5) 1:REGR1(10) func: out:fff5
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- fff5
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 14.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 14.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 14.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 14.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 15.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 15.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 15.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(5) OP0(5) OP1(1) MDRin(2) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(5) 1:MDRout(1) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 15.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(5) 1:MDRout(1) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 6
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 16.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(6) REGR1(16) OP0(6) OP1(16) MDRin(20) 
ALUS(1) ALUout(65526) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(6) 1:REGR1(10) func: out:fff6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 16.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(6) 1:REGR1(10) func: out:fff6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- fff6
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 17.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 17.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 17.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 17.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 18.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 18.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 18.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(6) OP0(6) OP1(1) MDRin(2) 
ALUS(0) ALUout(7) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(6) 1:MDRout(1) func: out:7
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 18.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(6) 1:MDRout(1) func: out:7
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 7
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 19.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(7) REGR1(16) OP0(7) OP1(16) MDRin(20) 
ALUS(1) ALUout(65527) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(7) 1:REGR1(10) func: out:fff7
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 19.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(7) 1:REGR1(10) func: out:fff7
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- fff7
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 20.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 20.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 20.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 20.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 21.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 21.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 21.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(7) OP0(7) OP1(1) MDRin(2) 
ALUS(0) ALUout(8) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(7) 1:MDRout(1) func: out:8
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 21.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(7) 1:MDRout(1) func: out:8
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 8
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 22.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(8) REGR1(16) OP1(16) MDRin(20) 
ALUS(1) ALUout(65528) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(8) 1:REGR1(10) func: out:fff8
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 22.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(8) 1:REGR1(10) func: out:fff8
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- fff8
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 23.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 23.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 23.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 23.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 24.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 24.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 24.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(8) OP0(8) OP1(1) MDRin(2) 
ALUS(0) ALUout(9) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(8) 1:MDRout(1) func: out:9
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 24.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(8) 1:MDRout(1) func: out:9
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 9
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 25.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(9) REGR1(16) OP0(9) OP1(16) MDRin(20) 
ALUS(1) ALUout(65529) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(9) 1:REGR1(10) func: out:fff9
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 25.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(9) 1:REGR1(10) func: out:fff9
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- fff9
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 26.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 26.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 26.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 26.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 27.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 27.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 27.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(9) OP0(9) OP1(1) MDRin(2) 
ALUS(0) ALUout(10) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(9) 1:MDRout(1) func: out:a
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 27.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(9) 1:MDRout(1) func: out:a
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- a
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 28.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(10) REGR1(16) OP0(10) OP1(16) MDRin(20) 
ALUS(1) ALUout(65530) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(a) 1:REGR1(10) func: out:fffa
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 28.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(a) 1:REGR1(10) func: out:fffa
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- fffa
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 29.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 29.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 29.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 29.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 30.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 30.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 30.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(10) OP0(10) OP1(1) MDRin(2) 
ALUS(0) ALUout(11) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(a) 1:MDRout(1) func: out:b
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 30.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(a) 1:MDRout(1) func: out:b
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- b
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 31.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(11) REGR1(16) OP0(11) OP1(16) MDRin(20) 
ALUS(1) ALUout(65531) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(b) 1:REGR1(10) func: out:fffb
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 31.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(b) 1:REGR1(10) func: out:fffb
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- fffb
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 32.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 32.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 32.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 32.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 33.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 33.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 33.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(11) OP0(11) OP1(1) MDRin(2) 
ALUS(0) ALUout(12) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(b) 1:MDRout(1) func: out:c
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 33.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(b) 1:MDRout(1) func: out:c
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- c
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 34.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(12) REGR1(16) OP0(12) OP1(16) MDRin(20) 
ALUS(1) ALUout(65532) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(c) 1:REGR1(10) func: out:fffc
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 34.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(c) 1:REGR1(10) func: out:fffc
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- fffc
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 35.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 35.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 35.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 35.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 36.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 36.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 36.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(12) OP0(12) OP1(1) MDRin(2) 
ALUS(0) ALUout(13) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(c) 1:MDRout(1) func: out:d
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 36.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(c) 1:MDRout(1) func: out:d
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- d
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 37.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(13) REGR1(16) OP0(13) OP1(16) MDRin(20) 
ALUS(1) ALUout(65533) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(d) 1:REGR1(10) func: out:fffd
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 37.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(d) 1:REGR1(10) func: out:fffd
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- fffd
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 38.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 38.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 38.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 38.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 39.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 39.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 39.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(13) OP0(13) OP1(1) MDRin(2) 
ALUS(0) ALUout(14) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(d) 1:MDRout(1) func: out:e
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 39.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(d) 1:MDRout(1) func: out:e
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- e
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 40.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(14) REGR1(16) OP0(14) OP1(16) MDRin(20) 
ALUS(1) ALUout(65534) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(e) 1:REGR1(10) func: out:fffe
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 40.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(e) 1:REGR1(10) func: out:fffe
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- fffe
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 41.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 41.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 41.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 41.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 42.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 42.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 42.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(14) OP0(14) OP1(1) MDRin(2) 
ALUS(0) ALUout(15) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(e) 1:MDRout(1) func: out:f
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 42.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(e) 1:MDRout(1) func: out:f
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- f
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 43.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(15) REGR1(16) OP0(15) OP1(16) MDRin(20) 
ALUS(1) ALUout(65535) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(f) 1:REGR1(10) func: out:ffff
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 43.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(f) 1:REGR1(10) func: out:ffff
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- ffff
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 44.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 44.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 44.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 44.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 45.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 45.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 45.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(15) OP0(15) OP1(1) MDRin(2) 
ALUS(0) ALUout(16) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(f) 1:MDRout(1) func: out:10
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 45.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(f) 1:MDRout(1) func: out:10
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 10
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 46.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(16) REGR1(16) OP0(16) OP1(16) MDRin(20) 
ALUS(1) ALUout(0) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(10) 1:REGR1(10) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 46.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(10) 1:REGR1(10) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC++ (SKIP)
REG3 <- 0
MAR <- c
PC++
IR <- ca00
------------------------------------------------------
cycle: 47.DECODE(3), phase: 0, PC: e, SP: 0, MAR: c(ca00), MDR: 1
IR: DECODING (ca00) Micro(37): 000000000000000000000000000000000000000001000000
IRimm(0) ALUS(0) REGR1(0) OP0(0) MDRin(0) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:0
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 47.DECODE(3), phase: 1, PC: e, SP: 0, MAR: c(ca00), MDR: 1
IR: brk (ca00) - (1100101000000000), Micro(37): 000000000000000000000000000000000000000001000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:0
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 47.READ(5), phase: 0, PC: e, SP: 0, MAR: c(ca00), MDR: 1
IR: brk (ca00) - (1100101000000000), Micro(101): 000000000000000000000000000000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:0
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 47.READ(5), phase: 1, PC: e, SP: 0, MAR: c(ca00), MDR: 1
IR: brk (ca00) - (1100101000000000), Micro(101): 000000000000000000000000000000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:0
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 47.EXECUTE(7), phase: 0, PC: e, SP: 0, MAR: c(ca00), MDR: 1
IR: brk (ca00) - (1100101000000000), Micro(165): 000000000000000000000000000000000000000001000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:0
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 47.EXECUTE(7), phase: 1, PC: e, SP: 0, MAR: c(ca00), MDR: 1
IR: brk (ca00) - (1100101000000000), Micro(165): 000000000000000000000000000000000000000001000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:0
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MAR <- e
PC++
IR <- 92
------------------------------------------------------
cycle: 48.DECODE(3), phase: 0, PC: 10, SP: 0, MAR: e(92), MDR: 1
IR: DECODING (92) Micro(0): 001000000000000000000000110000000000100000000000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(18) ALUS(0) REGR1(0) OP0(1) MDRin(18) 
ALUS(0) ALUout(1) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:2, 1:2, tgt:2
ALU: 0:MDRout(1) 1:REGR0(0) func: out:1
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 48.DECODE(3), phase: 1, PC: 10, SP: 0, MAR: e(92), MDR: 1
IR: ldi (92) - (0000000010010010), Micro(0): 001000000000000000000000110000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:2, 1:2, tgt:2
ALU: 0:MDRout(1) 1:REGR0(0) func: out:1
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0012
------------------------------------------------------
cycle: 48.EXECUTE(7), phase: 0, PC: 10, SP: 0, MAR: e(92), MDR: 12
IR: ldi (92) - (0000000010010010), Micro(128): 000100000000000010100000010000000000000000000000
REGWS(TGT) OP0S(MDRout) IRimm(36) ALUS(0) MDRin(36) 
ALUS(0) 
Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:2, 1:2, tgt:2
ALU: 0:MDRout(12) 1:REGR0(0) func: out:12
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 48.EXECUTE(7), phase: 1, PC: 10, SP: 0, MAR: e(92), MDR: 12
IR: ldi (92) - (0000000010010010), Micro(128): 000100000000000010100000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:2, 1:2, tgt:2
ALU: 0:MDRout(12) 1:REGR0(0) func: out:12
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG2 <- 12
MAR <- 10
PC++
IR <- a209
------------------------------------------------------
cycle: 49.DECODE(3), phase: 0, PC: 12, SP: 0, MAR: 10(a209), MDR: 12
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 49.DECODE(3), phase: 1, PC: 12, SP: 0, MAR: 10(a209), MDR: 12
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 49.EXECUTE(7), phase: 0, PC: 12, SP: 0, MAR: 10(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(16) OP0(16) OP1(1) MDRin(2) 
ALUS(0) ALUout(17) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(10) 1:MDRout(1) func: out:11
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 49.EXECUTE(7), phase: 1, PC: 12, SP: 0, MAR: 10(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(10) 1:MDRout(1) func: out:11
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 11
MAR <- 12
PC++
IR <- 9e53
------------------------------------------------------
cycle: 50.DECODE(3), phase: 0, PC: 14, SP: 0, MAR: 12(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(17) OP0(17) OP1(18) MDRin(20) 
ALUS(1) ALUout(65535) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(11) 1:REGR1(12) func: out:ffff
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 50.DECODE(3), phase: 1, PC: 14, SP: 0, MAR: 12(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(11) 1:REGR1(12) func: out:ffff
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- ffff
MAR <- 14
PC++
IR <- 3ff0
------------------------------------------------------
cycle: 51.DECODE(3), phase: 0, PC: 16, SP: 0, MAR: 14(3ff0), MDR: 1
IR: DECODING (3ff0) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65520) ALUS(0) REGR1(0) OP0(0) MDRin(65520) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:6, tgt:0
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 51.DECODE(3), phase: 1, PC: 16, SP: 0, MAR: 14(3ff0), MDR: 1
IR: br (3ff0) - (0011111111110000), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:6, tgt:0
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fff0
------------------------------------------------------
cycle: 51.EXECUTE(7), phase: 0, PC: 16, SP: 0, MAR: 14(3ff0), MDR: fff0
IR: br (3ff0) - (0011111111110000), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65532) ALUS(0) REGR0(22) OP0(65520) OP1(22) MDRin(65532) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:6, tgt:0
ALU: 0:MDRout(fff0) 1:REGR0(16) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 51.EXECUTE(7), phase: 1, PC: 16, SP: 0, MAR: 14(3ff0), MDR: fff0
IR: br (3ff0) - (0011111111110000), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:6, tgt:0
ALU: 0:MDRout(fff0) 1:REGR0(16) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 52.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fff0
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 52.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fff0
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 52.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(17) OP0(17) OP1(1) MDRin(2) 
ALUS(0) ALUout(18) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(11) 1:MDRout(1) func: out:12
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 52.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(11) 1:MDRout(1) func: out:12
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 12
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 53.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(18) REGR1(18) OP0(18) OP1(18) MDRin(20) 
ALUS(1) ALUout(0) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(12) 1:REGR1(12) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 53.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(12) 1:REGR1(12) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC++ (SKIP)
REG3 <- 0
MAR <- c
PC++
IR <- ca00
------------------------------------------------------
cycle: 54.DECODE(3), phase: 0, PC: e, SP: 0, MAR: c(ca00), MDR: 1
IR: DECODING (ca00) Micro(37): 000000000000000000000000000000000000000001000000
IRimm(0) ALUS(0) REGR1(0) OP0(0) MDRin(0) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:0
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 54.DECODE(3), phase: 1, PC: e, SP: 0, MAR: c(ca00), MDR: 1
IR: brk (ca00) - (1100101000000000), Micro(37): 000000000000000000000000000000000000000001000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:0
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 54.READ(5), phase: 0, PC: e, SP: 0, MAR: c(ca00), MDR: 1
IR: brk (ca00) - (1100101000000000), Micro(101): 000000000000000000000000000000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:0
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 54.READ(5), phase: 1, PC: e, SP: 0, MAR: c(ca00), MDR: 1
IR: brk (ca00) - (1100101000000000), Micro(101): 000000000000000000000000000000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:0
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 54.EXECUTE(7), phase: 0, PC: e, SP: 0, MAR: c(ca00), MDR: 1
IR: brk (ca00) - (1100101000000000), Micro(165): 000000000000000000000000000000000000000001000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:0
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 54.EXECUTE(7), phase: 1, PC: e, SP: 0, MAR: c(ca00), MDR: 1
IR: brk (ca00) - (1100101000000000), Micro(165): 000000000000000000000000000000000000000001000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:0
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MAR <- e
PC++
IR <- 92
------------------------------------------------------
cycle: 55.DECODE(3), phase: 0, PC: 10, SP: 0, MAR: e(92), MDR: 1
IR: DECODING (92) Micro(0): 001000000000000000000000110000000000100000000000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(18) ALUS(0) REGR1(0) OP0(1) MDRin(18) 
ALUS(0) ALUout(1) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:2, 1:2, tgt:2
ALU: 0:MDRout(1) 1:REGR0(0) func: out:1
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 55.DECODE(3), phase: 1, PC: 10, SP: 0, MAR: e(92), MDR: 1
IR: ldi (92) - (0000000010010010), Micro(0): 001000000000000000000000110000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:2, 1:2, tgt:2
ALU: 0:MDRout(1) 1:REGR0(0) func: out:1
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0012
------------------------------------------------------
cycle: 55.EXECUTE(7), phase: 0, PC: 10, SP: 0, MAR: e(92), MDR: 12
IR: ldi (92) - (0000000010010010), Micro(128): 000100000000000010100000010000000000000000000000
REGWS(TGT) OP0S(MDRout) IRimm(36) ALUS(0) MDRin(36) 
ALUS(0) 
Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:2, 1:2, tgt:2
ALU: 0:MDRout(12) 1:REGR0(0) func: out:12
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 55.EXECUTE(7), phase: 1, PC: 10, SP: 0, MAR: e(92), MDR: 12
IR: ldi (92) - (0000000010010010), Micro(128): 000100000000000010100000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:2, 1:2, tgt:2
ALU: 0:MDRout(12) 1:REGR0(0) func: out:12
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG2 <- 12
MAR <- 10
PC++
IR <- a209
------------------------------------------------------
cycle: 56.DECODE(3), phase: 0, PC: 12, SP: 0, MAR: 10(a209), MDR: 12
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 56.DECODE(3), phase: 1, PC: 12, SP: 0, MAR: 10(a209), MDR: 12
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 56.EXECUTE(7), phase: 0, PC: 12, SP: 0, MAR: 10(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(18) OP0(18) OP1(1) MDRin(2) 
ALUS(0) ALUout(19) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(12) 1:MDRout(1) func: out:13
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 56.EXECUTE(7), phase: 1, PC: 12, SP: 0, MAR: 10(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(12) 1:MDRout(1) func: out:13
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 13
MAR <- 12
PC++
IR <- 9e53
------------------------------------------------------
cycle: 57.DECODE(3), phase: 0, PC: 14, SP: 0, MAR: 12(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(19) OP0(19) OP1(18) MDRin(20) 
ALUS(1) ALUout(1) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(13) 1:REGR1(12) func: out:1
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 57.DECODE(3), phase: 1, PC: 14, SP: 0, MAR: 12(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(13) 1:REGR1(12) func: out:1
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 1
MAR <- 14
PC++
IR <- 3ff0
------------------------------------------------------
cycle: 58.DECODE(3), phase: 0, PC: 16, SP: 0, MAR: 14(3ff0), MDR: 1
IR: DECODING (3ff0) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65520) ALUS(0) REGR1(0) OP0(0) MDRin(65520) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:6, tgt:0
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 58.DECODE(3), phase: 1, PC: 16, SP: 0, MAR: 14(3ff0), MDR: 1
IR: br (3ff0) - (0011111111110000), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:6, tgt:0
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fff0
------------------------------------------------------
cycle: 58.EXECUTE(7), phase: 0, PC: 16, SP: 0, MAR: 14(3ff0), MDR: fff0
IR: br (3ff0) - (0011111111110000), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65532) ALUS(0) REGR0(22) OP0(65520) OP1(22) MDRin(65532) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:6, tgt:0
ALU: 0:MDRout(fff0) 1:REGR0(16) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 58.EXECUTE(7), phase: 1, PC: 16, SP: 0, MAR: 14(3ff0), MDR: fff0
IR: br (3ff0) - (0011111111110000), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:6, tgt:0
ALU: 0:MDRout(fff0) 1:REGR0(16) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 59.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fff0
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 59.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fff0
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 59.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(19) OP0(19) OP1(1) MDRin(2) 
ALUS(0) ALUout(20) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(13) 1:MDRout(1) func: out:14
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 59.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(13) 1:MDRout(1) func: out:14
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 14
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 60.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(20) REGR1(18) OP0(20) OP1(18) MDRin(20) 
ALUS(1) ALUout(2) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(14) 1:REGR1(12) func: out:2
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 60.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(14) 1:REGR1(12) func: out:2
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 2
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 61.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 61.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 61.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 61.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 62.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 62.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 62.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(20) OP0(20) OP1(1) MDRin(2) 
ALUS(0) ALUout(21) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(14) 1:MDRout(1) func: out:15
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 62.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(14) 1:MDRout(1) func: out:15
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 15
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 63.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(21) REGR1(18) OP0(21) OP1(18) MDRin(20) 
ALUS(1) ALUout(3) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(15) 1:REGR1(12) func: out:3
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 63.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(15) 1:REGR1(12) func: out:3
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 3
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 64.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 64.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 64.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 64.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 65.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 65.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 65.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(21) OP0(21) OP1(1) MDRin(2) 
ALUS(0) ALUout(22) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(15) 1:MDRout(1) func: out:16
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 65.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(15) 1:MDRout(1) func: out:16
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 16
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 66.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(22) REGR1(18) OP0(22) OP1(18) MDRin(20) 
ALUS(1) ALUout(4) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(16) 1:REGR1(12) func: out:4
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 66.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(16) 1:REGR1(12) func: out:4
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 4
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 67.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 67.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 67.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 67.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 68.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 68.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 68.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(22) OP0(22) OP1(1) MDRin(2) 
ALUS(0) ALUout(23) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(16) 1:MDRout(1) func: out:17
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 68.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(16) 1:MDRout(1) func: out:17
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 17
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 69.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(23) REGR1(18) OP0(23) OP1(18) MDRin(20) 
ALUS(1) ALUout(5) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(17) 1:REGR1(12) func: out:5
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 69.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(17) 1:REGR1(12) func: out:5
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 5
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 70.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 70.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 70.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 70.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 71.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 71.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 71.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(23) OP0(23) OP1(1) MDRin(2) 
ALUS(0) ALUout(24) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(17) 1:MDRout(1) func: out:18
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 71.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(17) 1:MDRout(1) func: out:18
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 18
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 72.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(24) REGR1(18) OP0(24) OP1(18) MDRin(20) 
ALUS(1) ALUout(6) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(18) 1:REGR1(12) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 72.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(18) 1:REGR1(12) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 6
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 73.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 73.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 73.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 73.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 74.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 74.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 74.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(24) OP0(24) OP1(1) MDRin(2) 
ALUS(0) ALUout(25) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(18) 1:MDRout(1) func: out:19
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 74.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(18) 1:MDRout(1) func: out:19
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 19
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 75.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(25) REGR1(18) OP0(25) OP1(18) MDRin(20) 
ALUS(1) ALUout(7) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(19) 1:REGR1(12) func: out:7
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 75.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(19) 1:REGR1(12) func: out:7
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 7
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 76.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 76.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 76.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 76.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 77.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 77.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 77.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(25) OP0(25) OP1(1) MDRin(2) 
ALUS(0) ALUout(26) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(19) 1:MDRout(1) func: out:1a
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 77.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(19) 1:MDRout(1) func: out:1a
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 1a
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 78.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(26) REGR1(18) OP0(26) OP1(18) MDRin(20) 
ALUS(1) 
Stable after 2 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(1a) 1:REGR1(12) func: out:8
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 78.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(1a) 1:REGR1(12) func: out:8
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 8
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 79.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 79.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 79.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 79.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 80.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 80.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 80.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(26) OP0(26) OP1(1) MDRin(2) 
ALUS(0) ALUout(27) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(1a) 1:MDRout(1) func: out:1b
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 80.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(1a) 1:MDRout(1) func: out:1b
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 1b
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 81.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(27) REGR1(18) OP0(27) OP1(18) MDRin(20) 
ALUS(1) ALUout(9) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(1b) 1:REGR1(12) func: out:9
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 81.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(1b) 1:REGR1(12) func: out:9
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 9
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 82.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 82.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 82.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 82.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 83.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 83.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 83.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(27) OP0(27) OP1(1) MDRin(2) 
ALUS(0) ALUout(28) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(1b) 1:MDRout(1) func: out:1c
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 83.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(1b) 1:MDRout(1) func: out:1c
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 1c
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 84.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(28) REGR1(18) OP0(28) OP1(18) MDRin(20) 
ALUS(1) ALUout(10) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(1c) 1:REGR1(12) func: out:a
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 84.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(1c) 1:REGR1(12) func: out:a
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- a
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 85.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 85.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 85.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 85.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 86.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 86.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 86.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(28) OP0(28) OP1(1) MDRin(2) 
ALUS(0) ALUout(29) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(1c) 1:MDRout(1) func: out:1d
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 86.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(1c) 1:MDRout(1) func: out:1d
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 1d
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 87.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(29) REGR1(18) OP0(29) OP1(18) MDRin(20) 
ALUS(1) ALUout(11) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(1d) 1:REGR1(12) func: out:b
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 87.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(1d) 1:REGR1(12) func: out:b
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- b
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 88.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 88.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 88.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 88.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 89.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 89.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 89.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(29) OP0(29) OP1(1) MDRin(2) 
ALUS(0) ALUout(30) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(1d) 1:MDRout(1) func: out:1e
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 89.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(1d) 1:MDRout(1) func: out:1e
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 1e
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 90.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(30) REGR1(18) OP0(30) OP1(18) MDRin(20) 
ALUS(1) ALUout(12) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(1e) 1:REGR1(12) func: out:c
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 90.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(1e) 1:REGR1(12) func: out:c
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- c
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 91.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 91.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 91.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 91.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 92.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 92.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 92.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(30) OP0(30) OP1(1) MDRin(2) 
ALUS(0) ALUout(31) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(1e) 1:MDRout(1) func: out:1f
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 92.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(1e) 1:MDRout(1) func: out:1f
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 1f
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 93.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(31) REGR1(18) OP0(31) OP1(18) MDRin(20) 
ALUS(1) ALUout(13) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(1f) 1:REGR1(12) func: out:d
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 93.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(1f) 1:REGR1(12) func: out:d
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- d
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 94.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 94.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 94.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 94.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 95.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 95.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 95.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(31) OP0(31) OP1(1) MDRin(2) 
ALUS(0) ALUout(32) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(1f) 1:MDRout(1) func: out:20
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 95.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(1f) 1:MDRout(1) func: out:20
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 20
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 96.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(32) REGR1(18) OP0(32) OP1(18) MDRin(20) 
ALUS(1) ALUout(14) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(20) 1:REGR1(12) func: out:e
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 96.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(20) 1:REGR1(12) func: out:e
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- e
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 97.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 97.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 97.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 97.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 98.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 98.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 98.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(32) OP0(32) OP1(1) MDRin(2) 
ALUS(0) ALUout(33) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(20) 1:MDRout(1) func: out:21
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 98.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(20) 1:MDRout(1) func: out:21
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 21
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 99.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(33) REGR1(18) OP0(33) OP1(18) MDRin(20) 
ALUS(1) ALUout(15) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(21) 1:REGR1(12) func: out:f
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 99.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(21) 1:REGR1(12) func: out:f
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- f
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 100.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 100.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 100.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 100.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 101.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 101.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 101.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(33) OP0(33) OP1(1) MDRin(2) 
ALUS(0) ALUout(34) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(21) 1:MDRout(1) func: out:22
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 101.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(21) 1:MDRout(1) func: out:22
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 22
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 102.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(34) REGR1(18) OP0(34) OP1(18) MDRin(20) 
ALUS(1) ALUout(16) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(22) 1:REGR1(12) func: out:10
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 102.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(22) 1:REGR1(12) func: out:10
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 10
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 103.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 103.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 103.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 103.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 104.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 104.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 104.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(34) OP0(34) OP1(1) MDRin(2) 
ALUS(0) ALUout(35) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(22) 1:MDRout(1) func: out:23
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 104.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(22) 1:MDRout(1) func: out:23
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 23
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 105.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(35) REGR1(18) OP0(35) OP1(18) MDRin(20) 
ALUS(1) ALUout(17) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(23) 1:REGR1(12) func: out:11
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 105.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(23) 1:REGR1(12) func: out:11
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 11
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 106.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 106.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 106.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 106.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 107.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 107.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 107.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(35) OP0(35) OP1(1) MDRin(2) 
ALUS(0) ALUout(36) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(23) 1:MDRout(1) func: out:24
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 107.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(23) 1:MDRout(1) func: out:24
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 24
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 108.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(36) REGR1(18) OP0(36) OP1(18) MDRin(20) 
ALUS(1) ALUout(18) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(24) 1:REGR1(12) func: out:12
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 108.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(24) 1:REGR1(12) func: out:12
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 12
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 109.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 109.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 109.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 109.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 110.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 110.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 110.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(36) OP0(36) OP1(1) MDRin(2) 
ALUS(0) ALUout(37) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(24) 1:MDRout(1) func: out:25
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 110.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(24) 1:MDRout(1) func: out:25
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 25
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 111.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(37) REGR1(18) OP0(37) OP1(18) MDRin(20) 
ALUS(1) ALUout(19) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(25) 1:REGR1(12) func: out:13
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 111.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(25) 1:REGR1(12) func: out:13
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 13
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 112.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 112.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 112.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 112.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 113.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 113.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 113.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(37) OP0(37) OP1(1) MDRin(2) 
ALUS(0) ALUout(38) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(25) 1:MDRout(1) func: out:26
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 113.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(25) 1:MDRout(1) func: out:26
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 26
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 114.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(38) REGR1(18) OP0(38) OP1(18) MDRin(20) 
ALUS(1) ALUout(20) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(26) 1:REGR1(12) func: out:14
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 114.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(26) 1:REGR1(12) func: out:14
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 14
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 115.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 115.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 115.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 115.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 116.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 116.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 116.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(38) OP0(38) OP1(1) MDRin(2) 
ALUS(0) ALUout(39) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(26) 1:MDRout(1) func: out:27
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 116.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(26) 1:MDRout(1) func: out:27
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 27
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 117.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(39) REGR1(18) OP0(39) OP1(18) MDRin(20) 
ALUS(1) ALUout(21) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(27) 1:REGR1(12) func: out:15
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 117.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(27) 1:REGR1(12) func: out:15
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 15
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 118.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 118.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 118.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 118.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 119.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 119.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 119.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(39) OP0(39) OP1(1) MDRin(2) 
ALUS(0) ALUout(40) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(27) 1:MDRout(1) func: out:28
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 119.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(27) 1:MDRout(1) func: out:28
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 28
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 120.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(40) REGR1(18) OP0(40) OP1(18) MDRin(20) 
ALUS(1) ALUout(22) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(28) 1:REGR1(12) func: out:16
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 120.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(28) 1:REGR1(12) func: out:16
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 16
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 121.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 121.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 121.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 121.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 122.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 122.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 122.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(40) OP0(40) OP1(1) MDRin(2) 
ALUS(0) ALUout(41) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(28) 1:MDRout(1) func: out:29
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 122.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(28) 1:MDRout(1) func: out:29
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 29
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 123.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(41) REGR1(18) OP0(41) OP1(18) MDRin(20) 
ALUS(1) ALUout(23) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(29) 1:REGR1(12) func: out:17
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 123.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(29) 1:REGR1(12) func: out:17
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 17
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 124.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 124.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 124.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 124.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 125.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 125.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 125.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(41) OP0(41) OP1(1) MDRin(2) 
ALUS(0) ALUout(42) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(29) 1:MDRout(1) func: out:2a
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 125.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(29) 1:MDRout(1) func: out:2a
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 2a
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 126.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(42) REGR1(18) OP0(42) OP1(18) MDRin(20) 
ALUS(1) ALUout(24) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(2a) 1:REGR1(12) func: out:18
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 126.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(2a) 1:REGR1(12) func: out:18
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 18
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 127.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 127.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 127.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 127.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 128.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 128.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 128.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(42) OP0(42) OP1(1) MDRin(2) 
ALUS(0) ALUout(43) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(2a) 1:MDRout(1) func: out:2b
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 128.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(2a) 1:MDRout(1) func: out:2b
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 2b
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 129.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(43) REGR1(18) OP0(43) OP1(18) MDRin(20) 
ALUS(1) ALUout(25) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(2b) 1:REGR1(12) func: out:19
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 129.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(2b) 1:REGR1(12) func: out:19
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 19
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 130.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 130.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 130.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 130.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 131.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 131.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 131.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(43) OP0(43) OP1(1) MDRin(2) 
ALUS(0) ALUout(44) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(2b) 1:MDRout(1) func: out:2c
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 131.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(2b) 1:MDRout(1) func: out:2c
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 2c
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 132.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(44) REGR1(18) OP0(44) OP1(18) MDRin(20) 
ALUS(1) ALUout(26) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(2c) 1:REGR1(12) func: out:1a
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 132.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(2c) 1:REGR1(12) func: out:1a
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 1a
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 133.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 133.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 133.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 133.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 134.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 134.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 134.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(44) OP0(44) OP1(1) MDRin(2) 
ALUS(0) ALUout(45) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(2c) 1:MDRout(1) func: out:2d
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 134.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(2c) 1:MDRout(1) func: out:2d
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 2d
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 135.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(45) REGR1(18) OP0(45) OP1(18) MDRin(20) 
ALUS(1) ALUout(27) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(2d) 1:REGR1(12) func: out:1b
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 135.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(2d) 1:REGR1(12) func: out:1b
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 1b
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 136.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 136.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 136.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 136.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 137.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 137.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 137.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(45) OP0(45) OP1(1) MDRin(2) 
ALUS(0) ALUout(46) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(2d) 1:MDRout(1) func: out:2e
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 137.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(2d) 1:MDRout(1) func: out:2e
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 2e
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 138.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(46) REGR1(18) OP0(46) OP1(18) MDRin(20) 
ALUS(1) ALUout(28) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(2e) 1:REGR1(12) func: out:1c
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 138.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(2e) 1:REGR1(12) func: out:1c
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 1c
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 139.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 139.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 139.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 139.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 140.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 140.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 140.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(46) OP0(46) OP1(1) MDRin(2) 
ALUS(0) ALUout(47) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(2e) 1:MDRout(1) func: out:2f
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 140.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(2e) 1:MDRout(1) func: out:2f
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 2f
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 141.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(47) REGR1(18) OP0(47) OP1(18) MDRin(20) 
ALUS(1) ALUout(29) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(2f) 1:REGR1(12) func: out:1d
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 141.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(2f) 1:REGR1(12) func: out:1d
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 1d
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 142.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 142.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 142.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 142.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 143.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 143.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 143.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(47) OP0(47) OP1(1) MDRin(2) 
ALUS(0) ALUout(48) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(2f) 1:MDRout(1) func: out:30
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 143.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(2f) 1:MDRout(1) func: out:30
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 30
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 144.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(48) REGR1(18) OP0(48) OP1(18) MDRin(20) 
ALUS(1) ALUout(30) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(30) 1:REGR1(12) func: out:1e
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 144.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(30) 1:REGR1(12) func: out:1e
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 1e
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 145.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 145.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 145.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 145.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 146.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 146.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 146.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(48) OP0(48) OP1(1) MDRin(2) 
ALUS(0) ALUout(49) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(30) 1:MDRout(1) func: out:31
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 146.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(30) 1:MDRout(1) func: out:31
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 31
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 147.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(49) REGR1(18) OP0(49) OP1(18) MDRin(20) 
ALUS(1) ALUout(31) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(31) 1:REGR1(12) func: out:1f
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 147.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(31) 1:REGR1(12) func: out:1f
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 1f
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 148.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 148.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 148.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 148.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 149.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 149.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 149.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(49) OP0(49) OP1(1) MDRin(2) 
ALUS(0) ALUout(50) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(31) 1:MDRout(1) func: out:32
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 149.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(31) 1:MDRout(1) func: out:32
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 32
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 150.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(50) REGR1(18) OP0(50) OP1(18) MDRin(20) 
ALUS(1) ALUout(32) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(32) 1:REGR1(12) func: out:20
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 150.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(32) 1:REGR1(12) func: out:20
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 20
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 151.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 151.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 151.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 151.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 152.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 152.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 152.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(50) OP0(50) OP1(1) MDRin(2) 
ALUS(0) ALUout(51) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(32) 1:MDRout(1) func: out:33
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 152.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(32) 1:MDRout(1) func: out:33
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 33
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 153.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(51) REGR1(18) OP0(51) OP1(18) MDRin(20) 
ALUS(1) ALUout(33) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(33) 1:REGR1(12) func: out:21
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 153.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(33) 1:REGR1(12) func: out:21
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 21
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 154.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 154.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 154.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 154.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 155.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 155.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 155.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(51) OP0(51) OP1(1) MDRin(2) 
ALUS(0) ALUout(52) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(33) 1:MDRout(1) func: out:34
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 155.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(33) 1:MDRout(1) func: out:34
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 34
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 156.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(52) REGR1(18) OP0(52) OP1(18) MDRin(20) 
ALUS(1) ALUout(34) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(34) 1:REGR1(12) func: out:22
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 156.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(34) 1:REGR1(12) func: out:22
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 22
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 157.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 157.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 157.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 157.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 158.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 158.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 158.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(52) OP0(52) OP1(1) MDRin(2) 
ALUS(0) ALUout(53) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(34) 1:MDRout(1) func: out:35
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 158.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(34) 1:MDRout(1) func: out:35
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 35
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 159.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(53) REGR1(18) OP0(53) OP1(18) MDRin(20) 
ALUS(1) ALUout(35) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(35) 1:REGR1(12) func: out:23
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 159.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(35) 1:REGR1(12) func: out:23
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 23
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 160.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 160.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 160.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 160.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 161.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 161.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 161.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(53) OP0(53) OP1(1) MDRin(2) 
ALUS(0) ALUout(54) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(35) 1:MDRout(1) func: out:36
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 161.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(35) 1:MDRout(1) func: out:36
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 36
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 162.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(54) REGR1(18) OP0(54) OP1(18) MDRin(20) 
ALUS(1) ALUout(36) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(36) 1:REGR1(12) func: out:24
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 162.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(36) 1:REGR1(12) func: out:24
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 24
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 163.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 163.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 163.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 163.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 164.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 164.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 164.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(54) OP0(54) OP1(1) MDRin(2) 
ALUS(0) ALUout(55) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(36) 1:MDRout(1) func: out:37
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 164.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(36) 1:MDRout(1) func: out:37
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 37
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 165.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(55) REGR1(18) OP0(55) OP1(18) MDRin(20) 
ALUS(1) ALUout(37) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(37) 1:REGR1(12) func: out:25
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 165.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(37) 1:REGR1(12) func: out:25
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 25
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 166.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 166.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 166.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 166.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 167.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 167.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 167.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(55) OP0(55) OP1(1) MDRin(2) 
ALUS(0) ALUout(56) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(37) 1:MDRout(1) func: out:38
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 167.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(37) 1:MDRout(1) func: out:38
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 38
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 168.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(56) REGR1(18) OP0(56) OP1(18) MDRin(20) 
ALUS(1) ALUout(38) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(38) 1:REGR1(12) func: out:26
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 168.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(38) 1:REGR1(12) func: out:26
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 26
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 169.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 169.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 169.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 169.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 170.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 170.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 170.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(56) OP0(56) OP1(1) MDRin(2) 
ALUS(0) ALUout(57) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(38) 1:MDRout(1) func: out:39
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 170.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(38) 1:MDRout(1) func: out:39
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 39
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 171.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(57) REGR1(18) OP0(57) OP1(18) MDRin(20) 
ALUS(1) ALUout(39) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(39) 1:REGR1(12) func: out:27
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 171.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(39) 1:REGR1(12) func: out:27
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 27
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 172.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 172.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 172.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 172.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 173.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 173.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 173.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(57) OP0(57) OP1(1) MDRin(2) 
ALUS(0) ALUout(58) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(39) 1:MDRout(1) func: out:3a
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 173.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(39) 1:MDRout(1) func: out:3a
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 3a
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 174.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(58) REGR1(18) OP0(58) OP1(18) MDRin(20) 
ALUS(1) ALUout(40) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(3a) 1:REGR1(12) func: out:28
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 174.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(3a) 1:REGR1(12) func: out:28
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 28
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 175.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 175.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 175.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 175.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 176.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 176.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 176.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(58) OP0(58) OP1(1) MDRin(2) 
ALUS(0) ALUout(59) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(3a) 1:MDRout(1) func: out:3b
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 176.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(3a) 1:MDRout(1) func: out:3b
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 3b
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 177.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(59) REGR1(18) OP0(59) OP1(18) MDRin(20) 
ALUS(1) ALUout(41) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(3b) 1:REGR1(12) func: out:29
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 177.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(3b) 1:REGR1(12) func: out:29
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 29
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 178.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 178.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 178.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 178.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 179.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 179.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 179.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(59) OP0(59) OP1(1) MDRin(2) 
ALUS(0) ALUout(60) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(3b) 1:MDRout(1) func: out:3c
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 179.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(3b) 1:MDRout(1) func: out:3c
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 3c
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 180.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(60) REGR1(18) OP0(60) OP1(18) MDRin(20) 
ALUS(1) ALUout(42) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(3c) 1:REGR1(12) func: out:2a
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 180.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(3c) 1:REGR1(12) func: out:2a
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 2a
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 181.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 181.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 181.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 181.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 182.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 182.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 182.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(60) OP0(60) OP1(1) MDRin(2) 
ALUS(0) ALUout(61) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(3c) 1:MDRout(1) func: out:3d
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 182.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(3c) 1:MDRout(1) func: out:3d
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 3d
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 183.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(61) REGR1(18) OP0(61) OP1(18) MDRin(20) 
ALUS(1) ALUout(43) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(3d) 1:REGR1(12) func: out:2b
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 183.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(3d) 1:REGR1(12) func: out:2b
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 2b
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 184.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 184.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 184.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 184.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 185.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 185.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 185.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(61) OP0(61) OP1(1) MDRin(2) 
ALUS(0) ALUout(62) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(3d) 1:MDRout(1) func: out:3e
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 185.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(3d) 1:MDRout(1) func: out:3e
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 3e
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 186.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(62) REGR1(18) OP0(62) OP1(18) MDRin(20) 
ALUS(1) ALUout(44) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(3e) 1:REGR1(12) func: out:2c
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 186.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(3e) 1:REGR1(12) func: out:2c
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 2c
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 187.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 187.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 187.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 187.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 188.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 188.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 188.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(62) OP0(62) OP1(1) MDRin(2) 
ALUS(0) ALUout(63) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(3e) 1:MDRout(1) func: out:3f
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 188.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(3e) 1:MDRout(1) func: out:3f
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 3f
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 189.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(63) REGR1(18) OP0(63) OP1(18) MDRin(20) 
ALUS(1) ALUout(45) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(3f) 1:REGR1(12) func: out:2d
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 189.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(3f) 1:REGR1(12) func: out:2d
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 2d
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 190.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 190.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 190.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 190.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 191.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 191.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 191.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(63) OP0(63) OP1(1) MDRin(2) 
ALUS(0) ALUout(64) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(3f) 1:MDRout(1) func: out:40
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 191.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(3f) 1:MDRout(1) func: out:40
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 40
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 192.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(64) REGR1(18) OP0(64) OP1(18) MDRin(20) 
ALUS(1) ALUout(46) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(40) 1:REGR1(12) func: out:2e
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 192.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(40) 1:REGR1(12) func: out:2e
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 2e
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 193.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 193.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 193.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 193.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 194.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 194.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 194.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(64) OP0(64) OP1(1) MDRin(2) 
ALUS(0) ALUout(65) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(40) 1:MDRout(1) func: out:41
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 194.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(40) 1:MDRout(1) func: out:41
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 41
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 195.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(65) REGR1(18) OP0(65) OP1(18) MDRin(20) 
ALUS(1) ALUout(47) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(41) 1:REGR1(12) func: out:2f
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 195.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(41) 1:REGR1(12) func: out:2f
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 2f
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 196.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 196.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 196.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 196.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 197.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 197.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 197.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(65) OP0(65) OP1(1) MDRin(2) 
ALUS(0) ALUout(66) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(41) 1:MDRout(1) func: out:42
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 197.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(41) 1:MDRout(1) func: out:42
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 42
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 198.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(66) REGR1(18) OP0(66) OP1(18) MDRin(20) 
ALUS(1) ALUout(48) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(42) 1:REGR1(12) func: out:30
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 198.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(42) 1:REGR1(12) func: out:30
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 30
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 199.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 199.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 199.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 199.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 200.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 200.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 200.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(66) OP0(66) OP1(1) MDRin(2) 
ALUS(0) ALUout(67) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(42) 1:MDRout(1) func: out:43
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 200.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(42) 1:MDRout(1) func: out:43
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 43
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 201.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(67) REGR1(18) OP0(67) OP1(18) MDRin(20) 
ALUS(1) ALUout(49) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(43) 1:REGR1(12) func: out:31
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 201.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(43) 1:REGR1(12) func: out:31
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 31
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 202.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 202.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 202.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 202.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 203.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 203.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 203.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(67) OP0(67) OP1(1) MDRin(2) 
ALUS(0) ALUout(68) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(43) 1:MDRout(1) func: out:44
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 203.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(43) 1:MDRout(1) func: out:44
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 44
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 204.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(68) REGR1(18) OP0(68) OP1(18) MDRin(20) 
ALUS(1) ALUout(50) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(44) 1:REGR1(12) func: out:32
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 204.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(44) 1:REGR1(12) func: out:32
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 32
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 205.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 205.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 205.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 205.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 206.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 206.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 206.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(68) OP0(68) OP1(1) MDRin(2) 
ALUS(0) ALUout(69) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(44) 1:MDRout(1) func: out:45
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 206.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(44) 1:MDRout(1) func: out:45
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 45
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 207.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(69) REGR1(18) OP0(69) OP1(18) MDRin(20) 
ALUS(1) ALUout(51) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(45) 1:REGR1(12) func: out:33
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 207.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(45) 1:REGR1(12) func: out:33
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 33
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 208.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 208.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 208.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 208.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 209.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 209.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 209.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(69) OP0(69) OP1(1) MDRin(2) 
ALUS(0) ALUout(70) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(45) 1:MDRout(1) func: out:46
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 209.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(45) 1:MDRout(1) func: out:46
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 46
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 210.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(70) REGR1(18) OP0(70) OP1(18) MDRin(20) 
ALUS(1) ALUout(52) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(46) 1:REGR1(12) func: out:34
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 210.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(46) 1:REGR1(12) func: out:34
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 34
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 211.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 211.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 211.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 211.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 212.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 212.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 212.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(70) OP0(70) OP1(1) MDRin(2) 
ALUS(0) ALUout(71) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(46) 1:MDRout(1) func: out:47
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 212.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(46) 1:MDRout(1) func: out:47
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 47
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 213.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(71) REGR1(18) OP0(71) OP1(18) MDRin(20) 
ALUS(1) ALUout(53) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(47) 1:REGR1(12) func: out:35
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 213.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(47) 1:REGR1(12) func: out:35
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 35
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 214.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 214.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 214.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 214.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 215.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 215.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 215.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(71) OP0(71) OP1(1) MDRin(2) 
ALUS(0) ALUout(72) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(47) 1:MDRout(1) func: out:48
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 215.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(47) 1:MDRout(1) func: out:48
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 48
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 216.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(72) REGR1(18) OP0(72) OP1(18) MDRin(20) 
ALUS(1) ALUout(54) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(48) 1:REGR1(12) func: out:36
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 216.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(48) 1:REGR1(12) func: out:36
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 36
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 217.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 217.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 217.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 217.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 218.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 218.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 218.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(72) OP0(72) OP1(1) MDRin(2) 
ALUS(0) ALUout(73) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(48) 1:MDRout(1) func: out:49
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 218.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(48) 1:MDRout(1) func: out:49
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 49
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 219.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(73) REGR1(18) OP0(73) OP1(18) MDRin(20) 
ALUS(1) ALUout(55) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(49) 1:REGR1(12) func: out:37
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 219.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(49) 1:REGR1(12) func: out:37
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 37
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 220.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 220.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 220.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 220.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 221.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 221.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 221.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(73) OP0(73) OP1(1) MDRin(2) 
ALUS(0) ALUout(74) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(49) 1:MDRout(1) func: out:4a
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 221.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(49) 1:MDRout(1) func: out:4a
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 4a
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 222.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(74) REGR1(18) OP0(74) OP1(18) MDRin(20) 
ALUS(1) ALUout(56) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(4a) 1:REGR1(12) func: out:38
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 222.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(4a) 1:REGR1(12) func: out:38
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 38
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 223.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 223.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 223.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 223.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 224.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 224.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 224.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(74) OP0(74) OP1(1) MDRin(2) 
ALUS(0) ALUout(75) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(4a) 1:MDRout(1) func: out:4b
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 224.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(4a) 1:MDRout(1) func: out:4b
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 4b
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 225.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(75) REGR1(18) OP0(75) OP1(18) MDRin(20) 
ALUS(1) ALUout(57) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(4b) 1:REGR1(12) func: out:39
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 225.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(4b) 1:REGR1(12) func: out:39
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 39
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 226.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 226.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 226.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 226.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 227.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 227.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 227.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(75) OP0(75) OP1(1) MDRin(2) 
ALUS(0) ALUout(76) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(4b) 1:MDRout(1) func: out:4c
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 227.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(4b) 1:MDRout(1) func: out:4c
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 4c
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 228.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(76) REGR1(18) OP0(76) OP1(18) MDRin(20) 
ALUS(1) ALUout(58) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(4c) 1:REGR1(12) func: out:3a
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 228.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(4c) 1:REGR1(12) func: out:3a
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 3a
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 229.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 229.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 229.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 229.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 230.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 230.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 230.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(76) OP0(76) OP1(1) MDRin(2) 
ALUS(0) ALUout(77) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(4c) 1:MDRout(1) func: out:4d
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 230.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(4c) 1:MDRout(1) func: out:4d
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 4d
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 231.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(77) REGR1(18) OP0(77) OP1(18) MDRin(20) 
ALUS(1) ALUout(59) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(4d) 1:REGR1(12) func: out:3b
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 231.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(4d) 1:REGR1(12) func: out:3b
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 3b
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 232.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 232.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 232.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 232.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 233.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 233.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 233.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(77) OP0(77) OP1(1) MDRin(2) 
ALUS(0) ALUout(78) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(4d) 1:MDRout(1) func: out:4e
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 233.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(4d) 1:MDRout(1) func: out:4e
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 4e
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 234.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(78) REGR1(18) OP0(78) OP1(18) MDRin(20) 
ALUS(1) ALUout(60) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(4e) 1:REGR1(12) func: out:3c
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 234.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(4e) 1:REGR1(12) func: out:3c
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 3c
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 235.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 235.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 235.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 235.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 236.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 236.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 236.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(78) OP0(78) OP1(1) MDRin(2) 
ALUS(0) ALUout(79) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(4e) 1:MDRout(1) func: out:4f
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 236.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(4e) 1:MDRout(1) func: out:4f
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 4f
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 237.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(79) REGR1(18) OP0(79) OP1(18) MDRin(20) 
ALUS(1) ALUout(61) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(4f) 1:REGR1(12) func: out:3d
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 237.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(4f) 1:REGR1(12) func: out:3d
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 3d
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 238.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 238.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 238.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 238.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 239.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 239.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 239.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(79) OP0(79) OP1(1) MDRin(2) 
ALUS(0) ALUout(80) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(4f) 1:MDRout(1) func: out:50
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 239.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(4f) 1:MDRout(1) func: out:50
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 50
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 240.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(80) REGR1(18) OP0(80) OP1(18) MDRin(20) 
ALUS(1) ALUout(62) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(50) 1:REGR1(12) func: out:3e
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 240.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(50) 1:REGR1(12) func: out:3e
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 3e
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 241.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 241.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 241.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 241.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 242.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 242.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 242.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(80) OP0(80) OP1(1) MDRin(2) 
ALUS(0) ALUout(81) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(50) 1:MDRout(1) func: out:51
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 242.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(50) 1:MDRout(1) func: out:51
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 51
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 243.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(81) REGR1(18) OP0(81) OP1(18) MDRin(20) 
ALUS(1) ALUout(63) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(51) 1:REGR1(12) func: out:3f
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 243.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(51) 1:REGR1(12) func: out:3f
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 3f
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 244.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 244.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 244.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 244.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 245.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 245.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 245.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(81) OP0(81) OP1(1) MDRin(2) 
ALUS(0) ALUout(82) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(51) 1:MDRout(1) func: out:52
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 245.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(51) 1:MDRout(1) func: out:52
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 52
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 246.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(82) REGR1(18) OP0(82) OP1(18) MDRin(20) 
ALUS(1) ALUout(64) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(52) 1:REGR1(12) func: out:40
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 246.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(52) 1:REGR1(12) func: out:40
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 40
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 247.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 247.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 247.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 247.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
MAR <- 6
PC++
IR <- a209
------------------------------------------------------
cycle: 248.DECODE(3), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: DECODING (a209) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 248.DECODE(3), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: fffa
IR: addi (a209) - (1010001000001001), Micro(17): 001000000000000000000001100000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 248.EXECUTE(7), phase: 0, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(2) ALUS(0) REGR1(82) OP0(82) OP1(1) MDRin(2) 
ALUS(0) ALUout(83) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(52) 1:MDRout(1) func: out:53
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 248.EXECUTE(7), phase: 1, PC: 8, SP: 0, MAR: 6(a209), MDR: 1
IR: addi (a209) - (1010001000001001), Micro(145): 000100000000100110100000001100000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:REGR1(52) 1:MDRout(1) func: out:53
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 53
MAR <- 8
PC++
IR <- 9e53
------------------------------------------------------
cycle: 249.DECODE(3), phase: 0, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: DECODING (9e53) Micro(15): 000100001000100110100000000010010011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) SKIP ALUS(1) REGR0(83) REGR1(18) OP0(83) OP1(18) MDRin(20) 
ALUS(1) ALUout(65) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(53) 1:REGR1(12) func: out:41
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 249.DECODE(3), phase: 1, PC: a, SP: 0, MAR: 8(9e53), MDR: 1
IR: addskp.z (9e53) - (1001111001010011), Micro(15): 000100001000100110100000000010010011000000000000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(53) 1:REGR1(12) func: out:41
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 41
MAR <- a
PC++
IR <- 3ffa
------------------------------------------------------
cycle: 250.DECODE(3), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: DECODING (3ffa) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65530) ALUS(0) REGR1(0) OP0(0) MDRin(65530) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 250.DECODE(3), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: 1
IR: br (3ffa) - (0011111111111010), Micro(1): 001000000000000000000001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- fffa
------------------------------------------------------
cycle: 250.EXECUTE(7), phase: 0, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65534) ALUS(0) REGR0(12) OP0(65530) OP1(12) MDRin(65534) 
ALUS(0) ALUout(6) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 250.EXECUTE(7), phase: 1, PC: c, SP: 0, MAR: a(3ffa), MDR: fffa
IR: br (3ffa) - (0011111111111010), Micro(129): 000100000111000001110000010000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:7, tgt:2
ALU: 0:MDRout(fffa) 1:REGR0(c) func: out:6
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 6
-------RAM---------DATA--------
0x064: 00         0x000: 9401
0x062: 00         0x002: 09
0x060: 00         0x004: 82
0x05e: 00         0x006: a209
0x05c: 00         0x008: 9e53
0x05a: 00         0x00a: 3ffa
0x058: 00         0x00c: ca00
0x056: 00         0x00e: 92
0x054: 00         0x010: a209
0x052: 00         0x012: 9e53
0x050: 00         0x014: 3ff0
0x04e: 00         0x016: fe00
0x04c: 00         0x018: 00
0x04a: 00         0x01a: 00
0x048: 00         0x01c: 00
0x046: 00         0x01e: 00
0x044: 00         0x020: 00
0x042: 00         0x022: 00
0x040: 00         0x024: 00
0x03e: 00         0x026: 00
0x03c: 00         0x028: 00
0x03a: 00         0x02a: 00
0x038: 00         0x02c: 00
0x036: 00         0x02e: 00
0x034: 00         0x030: 00
0x032: 00         0x032: 00
----------------------------REGISTERS-----------------------
R0: 0000
R1: 0053
R2: 0012
R3: 0041
R4: 0000
R5: 0000
R6: 0000
R7: 0006
----------------------------SYSREGS-----------------------
MAR: 000a
MDR: fffa
IR: 3ffa
