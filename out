opt: 97
opt: 116
Found colon - skip: 0Found colon - skip: 0Found colon - skip: 0Found colon - skip: 0Found colon - skip: 0Found colon - skip: 0Found colon - skip: 0Found colon - skip: 0Found colon - skip: 0Init done..
MAR <- 0
PC++
IR <- 1
-------------------------------------------------------------------------
cycle: 0.DECODE(3).0, PC: 2, SP: 0, BP: 0 MAR: 0(1), MDR: 0 CR: 00001000
IR: DECODING (1) Micro(0): 001000000000000000000000110000000000100000000000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) 

Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:MDRout(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 0.DECODE(3).1, PC: 2, SP: 0, BP: 0 MAR: 0(1), MDR: 0 CR: 00001000
IR: ldi (1) - (0000000000000001), Micro(0): 001000000000000000000000110000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:MDRout(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0000
-------------------------------------------------------------------------
cycle: 0.EXECUTE(7).0, PC: 2, SP: 0, BP: 0 MAR: 0(1), MDR: 0 CR: 00001000
IR: ldi (1) - (0000000000000001), Micro(128): 000100000000000010100000010000000000000000000000
REGWS(TGT) OP0S(MDRout) 

Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:1
ALU: 0:MDRout(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 0.EXECUTE(7).1, PC: 2, SP: 0, BP: 0 MAR: 0(1), MDR: 0 CR: 00001000
IR: ldi (1) - (0000000000000001), Micro(128): 000100000000000010100000010000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:1
ALU: 0:MDRout(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
REG1 <- 0
MAR <- 2
PC++
IR <- bc40
-------------------------------------------------------------------------
cycle: 1.DECODE(3).0, PC: 4, SP: 0, BP: 0 MAR: 2(bc40), MDR: 0 CR: 00001000
IR: DECODING (bc40) Micro(30): 001000000000000000000010000000000000100000000000
MDR_LOAD IMMS(IMM7u) IRimm(16) REGR1(0) OP0(0) MDRin(16) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:1, 1:0, tgt:0
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 1.DECODE(3).1, PC: 4, SP: 0, BP: 0 MAR: 2(bc40), MDR: 0 CR: 00001000
IR: addhi (bc40) - (1011110001000000), Micro(30): 001000000000000000000010000000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:1, 1:0, tgt:0
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0010
-------------------------------------------------------------------------
cycle: 1.EXECUTE(7).0, PC: 4, SP: 0, BP: 0 MAR: 2(bc40), MDR: 10 CR: 00001000
IR: addhi (bc40) - (1011110001000000), Micro(158): 000100000000101110110000010010001100000000000000
REGR1S(TGT2) REGWS(TGT2) OP0S(MDRout) OP1S(REGR1) ALUS(LT) OP0(16) 
ALUout(8192) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:TGT2, w:TGT2
args: 0:1, 1:0, tgt:0
ALU: 0:MDRout(10) 1:REGR1(0) func: out:2000
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 1.EXECUTE(7).1, PC: 4, SP: 0, BP: 0 MAR: 2(bc40), MDR: 10 CR: 00001000
IR: addhi (bc40) - (1011110001000000), Micro(158): 000100000000101110110000010010001100000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:TGT2, w:TGT2
args: 0:1, 1:0, tgt:0
ALU: 0:MDRout(10) 1:REGR1(0) func: out:2000
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
REG1 <- 2000
MAR <- 4
PC++
IR <- 9446
-------------------------------------------------------------------------
cycle: 2.DECODE(3).0, PC: 6, SP: 0, BP: 0 MAR: 4(9446), MDR: 10 CR: 00001000
IR: DECODING (9446) Micro(10): 000100001000100110100000000010000001000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) IRimm(17) REGR0(8192) REGR1(0) OP0(8192) MDRin(17) 
ALUout(8192) 

Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:0, tgt:6
ALU: 0:REGR0(2000) 1:REGR1(0) func: out:2000
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 2.DECODE(3).1, PC: 6, SP: 0, BP: 0 MAR: 4(9446), MDR: 10 CR: 00001000
IR: add (9446) - (1001010001000110), Micro(10): 000100001000100110100000000010000001000000000000

Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:0, tgt:6
ALU: 0:REGR0(2000) 1:REGR1(0) func: out:2000
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
SP <- 2000
MAR <- 6
PC++
IR <- a279
-------------------------------------------------------------------------
cycle: 3.DECODE(3).0, PC: 8, SP: 2000, BP: 0 MAR: 6(a279), MDR: 10 CR: 00001000
IR: DECODING (a279) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(2) REGR1(0) OP0(0) MDRin(2) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:1, 1:7, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 3.DECODE(3).1, PC: 8, SP: 2000, BP: 0 MAR: 6(a279), MDR: 10 CR: 00001000
IR: addi (a279) - (1010001001111001), Micro(17): 001000000000000000000001100000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:1, 1:7, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0002
-------------------------------------------------------------------------
cycle: 3.EXECUTE(7).0, PC: 8, SP: 2000, BP: 0 MAR: 6(a279), MDR: 2 CR: 00001000
IR: addi (a279) - (1010001001111001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(30) REGR1(8) OP0(8) OP1(2) MDRin(30) 
ALUout(10) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:1, 1:7, tgt:1
ALU: 0:REGR1(8) 1:MDRout(2) func: out:a
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 3.EXECUTE(7).1, PC: 8, SP: 2000, BP: 0 MAR: 6(a279), MDR: 2 CR: 00001000
IR: addi (a279) - (1010001001111001), Micro(145): 000100000000100110100000001100000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:1, 1:7, tgt:1
ALU: 0:REGR1(8) 1:MDRout(2) func: out:a
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
REG1 <- a
MAR <- 8
PC++
IR <- 2026
-------------------------------------------------------------------------
cycle: 4.DECODE(3).0, PC: a, SP: 2000, BP: 0 MAR: 8(2026), MDR: 2 CR: 00001000
IR: DECODING (2026) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(38) REGR1(0) OP0(0) MDRin(38) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:4, tgt:6
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 4.DECODE(3).1, PC: a, SP: 2000, BP: 0 MAR: 8(2026), MDR: 2 CR: 00001000
IR: br (2026) - (0010000000100110), Micro(1): 001000000000000000000001000000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:4, tgt:6
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0026
-------------------------------------------------------------------------
cycle: 4.EXECUTE(7).0, PC: a, SP: 2000, BP: 0 MAR: 8(2026), MDR: 26 CR: 00001000
IR: br (2026) - (0010000000100110), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(9) REGR0(10) OP0(38) OP1(10) MDRin(9) 
ALUout(48) 

Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:0, 1:4, tgt:6
ALU: 0:MDRout(26) 1:REGR0(a) func: out:30
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 4.EXECUTE(7).1, PC: a, SP: 2000, BP: 0 MAR: 8(2026), MDR: 26 CR: 00001000
IR: br (2026) - (0010000000100110), Micro(129): 000100000111000001110000010000000000000000000000

Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:0, 1:4, tgt:6
ALU: 0:MDRout(26) 1:REGR0(a) func: out:30
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
PC <- 30
MAR <- 30
PC++
IR <- be01
-------------------------------------------------------------------------
cycle: 5.DECODE(3).0, PC: 32, SP: 2000, BP: 0 MAR: 30(be01), MDR: 26 CR: 00001000
IR: DECODING (be01) Micro(31): 000000100000000000000000000000000000000000000000
IRimm(0) REGR1(0) OP0(0) MDRin(0) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 5.DECODE(3).1, PC: 32, SP: 2000, BP: 0 MAR: 30(be01), MDR: 26 CR: 00001000
IR: push (be01) - (1011111000000001), Micro(31): 000000100000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
SP--
-------------------------------------------------------------------------
cycle: 5.READ(5).0, PC: 32, SP: 1ffe, BP: 0 MAR: 30(be01), MDR: 26 CR: 00001000
IR: push (be01) - (1011111000000001), Micro(95): 100000000110000000000000000010000000000000000000
MAR_LOAD REGR0S(SP) OP1S(REGR1) REGR0(8190) OP0(8190) 
ALUout(8190) 

Stable after 3 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(1ffe) 1:REGR1(0) func: out:1ffe
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 5.READ(5).1, PC: 32, SP: 1ffe, BP: 0 MAR: 30(be01), MDR: 26 CR: 00001000
IR: push (be01) - (1011111000000001), Micro(95): 100000000110000000000000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(1ffe) 1:REGR1(0) func: out:1ffe
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ffe
-------------------------------------------------------------------------
cycle: 5.EXECUTE(7).0, PC: 32, SP: 1ffe, BP: 0 MAR: 1ffe(0), MDR: 26 CR: 00001000
IR: push (be01) - (1011111000000001), Micro(159): 001010001010000000001000000010000000000000000000
MDR_LOAD REGR0S(TGT) MDRS(ALUout) OP1S(REGR1) REGR0(10) OP0(10) MDRin(8190) 
ALUout(10) MDRin(10) 

Stable after 3 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(a) 1:REGR1(0) func: out:a
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 5.EXECUTE(7).1, PC: 32, SP: 1ffe, BP: 0 MAR: 1ffe(0), MDR: 26 CR: 00001000
IR: push (be01) - (1011111000000001), Micro(159): 001010001010000000001000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(a) 1:REGR1(0) func: out:a
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
MDR <- 000a
RAM[1ffe] <- a
MAR <- 32
PC++
IR <- be05
-------------------------------------------------------------------------
cycle: 6.DECODE(3).0, PC: 34, SP: 1ffe, BP: 0 MAR: 32(be05), MDR: a CR: 00001000
IR: DECODING (be05) Micro(31): 000000100000000000000000000000000000000000000000
IRimm(1) REGR1(0) OP0(0) MDRin(1) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 6.DECODE(3).1, PC: 34, SP: 1ffe, BP: 0 MAR: 32(be05), MDR: a CR: 00001000
IR: push (be05) - (1011111000000101), Micro(31): 000000100000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
SP--
-------------------------------------------------------------------------
cycle: 6.READ(5).0, PC: 34, SP: 1ffc, BP: 0 MAR: 32(be05), MDR: a CR: 00001000
IR: push (be05) - (1011111000000101), Micro(95): 100000000110000000000000000010000000000000000000
MAR_LOAD REGR0S(SP) OP1S(REGR1) REGR0(8188) OP0(8188) 
ALUout(8188) 

Stable after 3 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(1ffc) 1:REGR1(0) func: out:1ffc
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 6.READ(5).1, PC: 34, SP: 1ffc, BP: 0 MAR: 32(be05), MDR: a CR: 00001000
IR: push (be05) - (1011111000000101), Micro(95): 100000000110000000000000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(1ffc) 1:REGR1(0) func: out:1ffc
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ffc
-------------------------------------------------------------------------
cycle: 6.EXECUTE(7).0, PC: 34, SP: 1ffc, BP: 0 MAR: 1ffc(0), MDR: a CR: 00001000
IR: push (be05) - (1011111000000101), Micro(159): 001010001010000000001000000010000000000000000000
MDR_LOAD REGR0S(TGT) MDRS(ALUout) OP1S(REGR1) REGR0(0) OP0(0) MDRin(8188) 
ALUout(0) MDRin(0) 

Stable after 3 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(0) 1:REGR1(0) func: out:0
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 6.EXECUTE(7).1, PC: 34, SP: 1ffc, BP: 0 MAR: 1ffc(0), MDR: a CR: 00001000
IR: push (be05) - (1011111000000101), Micro(159): 001010001010000000001000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(0) 1:REGR1(0) func: out:0
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0000
RAM[1ffc] <- 0
MAR <- 34
PC++
IR <- 9585
-------------------------------------------------------------------------
cycle: 7.DECODE(3).0, PC: 36, SP: 1ffc, BP: 0 MAR: 34(9585), MDR: 0 CR: 00001000
IR: DECODING (9585) Micro(10): 000100001000100110100000000010000001000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) IRimm(65505) REGR0(8188) REGR1(0) OP0(8188) MDRin(65505) 
ALUout(8188) 

Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:6, 1:0, tgt:5
ALU: 0:REGR0(1ffc) 1:REGR1(0) func: out:1ffc
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 7.DECODE(3).1, PC: 36, SP: 1ffc, BP: 0 MAR: 34(9585), MDR: 0 CR: 00001000
IR: add (9585) - (1001010110000101), Micro(10): 000100001000100110100000000010000001000000000000

Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:6, 1:0, tgt:5
ALU: 0:REGR0(1ffc) 1:REGR1(0) func: out:1ffc
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
BP <- 1ffc
MAR <- 36
PC++
IR <- 14
-------------------------------------------------------------------------
cycle: 8.DECODE(3).0, PC: 38, SP: 1ffc, BP: 1ffc MAR: 36(14), MDR: 0 CR: 00001000
IR: DECODING (14) Micro(0): 001000000000000000000000110000000000100000000000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(2) REGR1(0) OP0(0) MDRin(2) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:4
ALU: 0:MDRout(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 8.DECODE(3).1, PC: 38, SP: 1ffc, BP: 1ffc MAR: 36(14), MDR: 0 CR: 00001000
IR: ldi (14) - (0000000000010100), Micro(0): 001000000000000000000000110000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:4
ALU: 0:MDRout(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0002
-------------------------------------------------------------------------
cycle: 8.EXECUTE(7).0, PC: 38, SP: 1ffc, BP: 1ffc MAR: 36(14), MDR: 2 CR: 00001000
IR: ldi (14) - (0000000000010100), Micro(128): 000100000000000010100000010000000000000000000000
REGWS(TGT) OP0S(MDRout) IRimm(5) MDRin(5) 

Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:2, tgt:4
ALU: 0:MDRout(2) 1:REGR0(0) func: out:2
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 8.EXECUTE(7).1, PC: 38, SP: 1ffc, BP: 1ffc MAR: 36(14), MDR: 2 CR: 00001000
IR: ldi (14) - (0000000000010100), Micro(128): 000100000000000010100000010000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:2, tgt:4
ALU: 0:MDRout(2) 1:REGR0(0) func: out:2
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
REG4 <- 2
MAR <- 38
PC++
IR <- be04
-------------------------------------------------------------------------
cycle: 9.DECODE(3).0, PC: 3a, SP: 1ffc, BP: 1ffc MAR: 38(be04), MDR: 2 CR: 00001000
IR: DECODING (be04) Micro(31): 000000100000000000000000000000000000000000000000
IRimm(1) REGR1(0) OP0(0) MDRin(1) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:4
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 9.DECODE(3).1, PC: 3a, SP: 1ffc, BP: 1ffc MAR: 38(be04), MDR: 2 CR: 00001000
IR: push (be04) - (1011111000000100), Micro(31): 000000100000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:4
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
SP--
-------------------------------------------------------------------------
cycle: 9.READ(5).0, PC: 3a, SP: 1ffa, BP: 1ffc MAR: 38(be04), MDR: 2 CR: 00001000
IR: push (be04) - (1011111000000100), Micro(95): 100000000110000000000000000010000000000000000000
MAR_LOAD REGR0S(SP) OP1S(REGR1) REGR0(8186) OP0(8186) 
ALUout(8186) 

Stable after 3 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:4
ALU: 0:REGR0(1ffa) 1:REGR1(0) func: out:1ffa
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 9.READ(5).1, PC: 3a, SP: 1ffa, BP: 1ffc MAR: 38(be04), MDR: 2 CR: 00001000
IR: push (be04) - (1011111000000100), Micro(95): 100000000110000000000000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:4
ALU: 0:REGR0(1ffa) 1:REGR1(0) func: out:1ffa
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ffa
-------------------------------------------------------------------------
cycle: 9.EXECUTE(7).0, PC: 3a, SP: 1ffa, BP: 1ffc MAR: 1ffa(0), MDR: 2 CR: 00001000
IR: push (be04) - (1011111000000100), Micro(159): 001010001010000000001000000010000000000000000000
MDR_LOAD REGR0S(TGT) MDRS(ALUout) OP1S(REGR1) REGR0(2) OP0(2) MDRin(8186) 
ALUout(2) MDRin(2) 

Stable after 3 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:4
ALU: 0:REGR0(2) 1:REGR1(0) func: out:2
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 9.EXECUTE(7).1, PC: 3a, SP: 1ffa, BP: 1ffc MAR: 1ffa(0), MDR: 2 CR: 00001000
IR: push (be04) - (1011111000000100), Micro(159): 001010001010000000001000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:4
ALU: 0:REGR0(2) 1:REGR1(0) func: out:2
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0002
RAM[1ffa] <- 2
MAR <- 3a
PC++
IR <- a279
-------------------------------------------------------------------------
cycle: 10.DECODE(3).0, PC: 3c, SP: 1ffa, BP: 1ffc MAR: 3a(a279), MDR: 2 CR: 00001000
IR: DECODING (a279) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(2) REGR1(0) OP0(0) MDRin(2) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:1, 1:7, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 10.DECODE(3).1, PC: 3c, SP: 1ffa, BP: 1ffc MAR: 3a(a279), MDR: 2 CR: 00001000
IR: addi (a279) - (1010001001111001), Micro(17): 001000000000000000000001100000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:1, 1:7, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0002
-------------------------------------------------------------------------
cycle: 10.EXECUTE(7).0, PC: 3c, SP: 1ffa, BP: 1ffc MAR: 3a(a279), MDR: 2 CR: 00001000
IR: addi (a279) - (1010001001111001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(30) REGR1(60) OP0(60) OP1(2) MDRin(30) 
ALUout(62) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:1, 1:7, tgt:1
ALU: 0:REGR1(3c) 1:MDRout(2) func: out:3e
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 10.EXECUTE(7).1, PC: 3c, SP: 1ffa, BP: 1ffc MAR: 3a(a279), MDR: 2 CR: 00001000
IR: addi (a279) - (1010001001111001), Micro(145): 000100000000100110100000001100000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:1, 1:7, tgt:1
ALU: 0:REGR1(3c) 1:MDRout(2) func: out:3e
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
REG1 <- 3e
MAR <- 3c
PC++
IR <- 3fce
-------------------------------------------------------------------------
cycle: 11.DECODE(3).0, PC: 3e, SP: 1ffa, BP: 1ffc MAR: 3c(3fce), MDR: 2 CR: 00001000
IR: DECODING (3fce) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65486) REGR1(0) OP0(0) MDRin(65486) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:1, tgt:6
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 11.DECODE(3).1, PC: 3e, SP: 1ffa, BP: 1ffc MAR: 3c(3fce), MDR: 2 CR: 00001000
IR: br (3fce) - (0011111111001110), Micro(1): 001000000000000000000001000000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:1, tgt:6
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
MDR <- ffce
-------------------------------------------------------------------------
cycle: 11.EXECUTE(7).0, PC: 3e, SP: 1ffa, BP: 1ffc MAR: 3c(3fce), MDR: ffce CR: 00001000
IR: br (3fce) - (0011111111001110), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65523) REGR0(62) OP0(65486) OP1(62) MDRin(65523) 
ALUout(12) 

Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:1, tgt:6
ALU: 0:MDRout(ffce) 1:REGR0(3e) func: out:c
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
CR <- a
-------------------------------------------------------------------------
cycle: 11.EXECUTE(7).1, PC: 3e, SP: 1ffa, BP: 1ffc MAR: 3c(3fce), MDR: ffce CR: 00001010
IR: br (3fce) - (0011111111001110), Micro(129): 000100000111000001110000010000000000000000000000

Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:1, tgt:6
ALU: 0:MDRout(ffce) 1:REGR0(3e) func: out:c
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
PC <- c
MAR <- c
PC++
IR <- be01
-------------------------------------------------------------------------
cycle: 12.DECODE(3).0, PC: e, SP: 1ffa, BP: 1ffc MAR: c(be01), MDR: ffce CR: 00001010
IR: DECODING (be01) Micro(31): 000000100000000000000000000000000000000000000000
IRimm(0) REGR1(0) OP0(0) MDRin(0) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 12.DECODE(3).1, PC: e, SP: 1ffa, BP: 1ffc MAR: c(be01), MDR: ffce CR: 00001010
IR: push (be01) - (1011111000000001), Micro(31): 000000100000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
SP--
-------------------------------------------------------------------------
cycle: 12.READ(5).0, PC: e, SP: 1ff8, BP: 1ffc MAR: c(be01), MDR: ffce CR: 00001010
IR: push (be01) - (1011111000000001), Micro(95): 100000000110000000000000000010000000000000000000
MAR_LOAD REGR0S(SP) OP1S(REGR1) REGR0(8184) OP0(8184) 
ALUout(8184) 

Stable after 3 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(1ff8) 1:REGR1(0) func: out:1ff8
STACK:
1ffe 1ffc 1ffa 1ff8*1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 12.READ(5).1, PC: e, SP: 1ff8, BP: 1ffc MAR: c(be01), MDR: ffce CR: 00001010
IR: push (be01) - (1011111000000001), Micro(95): 100000000110000000000000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(1ff8) 1:REGR1(0) func: out:1ff8
STACK:
1ffe 1ffc 1ffa 1ff8*1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ff8
-------------------------------------------------------------------------
cycle: 12.EXECUTE(7).0, PC: e, SP: 1ff8, BP: 1ffc MAR: 1ff8(0), MDR: ffce CR: 00001010
IR: push (be01) - (1011111000000001), Micro(159): 001010001010000000001000000010000000000000000000
MDR_LOAD REGR0S(TGT) MDRS(ALUout) OP1S(REGR1) REGR0(62) OP0(62) MDRin(8184) 
ALUout(62) MDRin(62) 

Stable after 3 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(3e) 1:REGR1(0) func: out:3e
STACK:
1ffe 1ffc 1ffa 1ff8*1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 12.EXECUTE(7).1, PC: e, SP: 1ff8, BP: 1ffc MAR: 1ff8(0), MDR: ffce CR: 00001000
IR: push (be01) - (1011111000000001), Micro(159): 001010001010000000001000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(3e) 1:REGR1(0) func: out:3e
STACK:
1ffe 1ffc 1ffa 1ff8*1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
MDR <- 003e
RAM[1ff8] <- 3e
MAR <- e
PC++
IR <- be05
-------------------------------------------------------------------------
cycle: 13.DECODE(3).0, PC: 10, SP: 1ff8, BP: 1ffc MAR: e(be05), MDR: 3e CR: 00001000
IR: DECODING (be05) Micro(31): 000000100000000000000000000000000000000000000000
IRimm(1) REGR1(0) OP0(0) MDRin(1) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8*1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 13.DECODE(3).1, PC: 10, SP: 1ff8, BP: 1ffc MAR: e(be05), MDR: 3e CR: 00001000
IR: push (be05) - (1011111000000101), Micro(31): 000000100000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8*1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
SP--
-------------------------------------------------------------------------
cycle: 13.READ(5).0, PC: 10, SP: 1ff6, BP: 1ffc MAR: e(be05), MDR: 3e CR: 00001000
IR: push (be05) - (1011111000000101), Micro(95): 100000000110000000000000000010000000000000000000
MAR_LOAD REGR0S(SP) OP1S(REGR1) REGR0(8182) OP0(8182) 
ALUout(8182) 

Stable after 3 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(1ff6) 1:REGR1(0) func: out:1ff6
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 13.READ(5).1, PC: 10, SP: 1ff6, BP: 1ffc MAR: e(be05), MDR: 3e CR: 00001000
IR: push (be05) - (1011111000000101), Micro(95): 100000000110000000000000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(1ff6) 1:REGR1(0) func: out:1ff6
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ff6
-------------------------------------------------------------------------
cycle: 13.EXECUTE(7).0, PC: 10, SP: 1ff6, BP: 1ffc MAR: 1ff6(0), MDR: 3e CR: 00001000
IR: push (be05) - (1011111000000101), Micro(159): 001010001010000000001000000010000000000000000000
MDR_LOAD REGR0S(TGT) MDRS(ALUout) OP1S(REGR1) REGR0(8188) OP0(8188) MDRin(8182) 
ALUout(8188) MDRin(8188) 

Stable after 3 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(1ffc) 1:REGR1(0) func: out:1ffc
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 13.EXECUTE(7).1, PC: 10, SP: 1ff6, BP: 1ffc MAR: 1ff6(0), MDR: 3e CR: 00001000
IR: push (be05) - (1011111000000101), Micro(159): 001010001010000000001000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(1ffc) 1:REGR1(0) func: out:1ffc
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
MDR <- 1ffc
RAM[1ff6] <- 1ffc
MAR <- 10
PC++
IR <- 9585
-------------------------------------------------------------------------
cycle: 14.DECODE(3).0, PC: 12, SP: 1ff6, BP: 1ffc MAR: 10(9585), MDR: 1ffc CR: 00001000
IR: DECODING (9585) Micro(10): 000100001000100110100000000010000001000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) IRimm(65505) REGR0(8182) REGR1(0) OP0(8182) MDRin(65505) 
ALUout(8182) 

Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:6, 1:0, tgt:5
ALU: 0:REGR0(1ff6) 1:REGR1(0) func: out:1ff6
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 14.DECODE(3).1, PC: 12, SP: 1ff6, BP: 1ffc MAR: 10(9585), MDR: 1ffc CR: 00001000
IR: add (9585) - (1001010110000101), Micro(10): 000100001000100110100000000010000001000000000000

Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:6, 1:0, tgt:5
ALU: 0:REGR0(1ff6) 1:REGR1(0) func: out:1ff6
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
BP <- 1ff6
MAR <- 12
PC++
IR <- 34
-------------------------------------------------------------------------
cycle: 15.DECODE(3).0, PC: 14, SP: 1ff6, BP: 1ff6 MAR: 12(34), MDR: 1ffc CR: 00001000
IR: DECODING (34) Micro(0): 001000000000000000000000110000000000100000000000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(6) REGR1(0) OP0(8188) MDRin(6) 
ALUout(8188) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:6, tgt:4
ALU: 0:MDRout(1ffc) 1:REGR0(0) func: out:1ffc
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 15.DECODE(3).1, PC: 14, SP: 1ff6, BP: 1ff6 MAR: 12(34), MDR: 1ffc CR: 00001000
IR: ldi (34) - (0000000000110100), Micro(0): 001000000000000000000000110000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:6, tgt:4
ALU: 0:MDRout(1ffc) 1:REGR0(0) func: out:1ffc
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0006
-------------------------------------------------------------------------
cycle: 15.EXECUTE(7).0, PC: 14, SP: 1ff6, BP: 1ff6 MAR: 12(34), MDR: 6 CR: 00001000
IR: ldi (34) - (0000000000110100), Micro(128): 000100000000000010100000010000000000000000000000
REGWS(TGT) OP0S(MDRout) IRimm(13) MDRin(13) 

Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:6, tgt:4
ALU: 0:MDRout(6) 1:REGR0(0) func: out:6
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 15.EXECUTE(7).1, PC: 14, SP: 1ff6, BP: 1ff6 MAR: 12(34), MDR: 6 CR: 00001000
IR: ldi (34) - (0000000000110100), Micro(128): 000100000000000010100000010000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:6, tgt:4
ALU: 0:MDRout(6) 1:REGR0(0) func: out:6
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
REG4 <- 6
MAR <- 14
PC++
IR <- 97a6
-------------------------------------------------------------------------
cycle: 16.DECODE(3).0, PC: 16, SP: 1ff6, BP: 1ff6 MAR: 14(97a6), MDR: 6 CR: 00001000
IR: DECODING (97a6) Micro(11): 000100001000100110100000000010000011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(65513) REGR0(8182) REGR1(6) OP0(8182) OP1(6) MDRin(65513) 
ALUout(8176) 

Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:6, 1:4, tgt:6
ALU: 0:REGR0(1ff6) 1:REGR1(6) func: out:1ff0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 16.DECODE(3).1, PC: 16, SP: 1ff6, BP: 1ff6 MAR: 14(97a6), MDR: 6 CR: 00001000
IR: sub (97a6) - (1001011110100110), Micro(11): 000100001000100110100000000010000011000000000000

Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:6, 1:4, tgt:6
ALU: 0:REGR0(1ff6) 1:REGR1(6) func: out:1ff0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
SP <- 1ff0
MAR <- 16
PC++
IR <- 54
-------------------------------------------------------------------------
cycle: 17.DECODE(3).0, PC: 18, SP: 1ff0, BP: 1ff6 MAR: 16(54), MDR: 6 CR: 00001000
IR: DECODING (54) Micro(0): 001000000000000000000000110000000000100000000000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(10) REGR1(0) OP0(6) MDRin(10) 
ALUout(6) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:1, 1:2, tgt:4
ALU: 0:MDRout(6) 1:REGR0(0) func: out:6
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 17.DECODE(3).1, PC: 18, SP: 1ff0, BP: 1ff6 MAR: 16(54), MDR: 6 CR: 00001000
IR: ldi (54) - (0000000001010100), Micro(0): 001000000000000000000000110000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:1, 1:2, tgt:4
ALU: 0:MDRout(6) 1:REGR0(0) func: out:6
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
MDR <- 000a
-------------------------------------------------------------------------
cycle: 17.EXECUTE(7).0, PC: 18, SP: 1ff0, BP: 1ff6 MAR: 16(54), MDR: a CR: 00001000
IR: ldi (54) - (0000000001010100), Micro(128): 000100000000000010100000010000000000000000000000
REGWS(TGT) OP0S(MDRout) IRimm(21) MDRin(21) 

Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:1, 1:2, tgt:4
ALU: 0:MDRout(a) 1:REGR0(0) func: out:a
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 17.EXECUTE(7).1, PC: 18, SP: 1ff0, BP: 1ff6 MAR: 16(54), MDR: a CR: 00001000
IR: ldi (54) - (0000000001010100), Micro(128): 000100000000000010100000010000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:1, 1:2, tgt:4
ALU: 0:MDRout(a) 1:REGR0(0) func: out:a
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
REG4 <- a
MAR <- 18
PC++
IR <- 8deb
-------------------------------------------------------------------------
cycle: 18.DECODE(3).0, PC: 1a, SP: 1ff0, BP: 1ff6 MAR: 18(8deb), MDR: a CR: 00001000
IR: DECODING (8deb) Micro(6): 001000000000000000000000000000000000000000000000
MDR_LOAD IRimm(65530) REGR1(0) OP0(0) MDRin(65530) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:5, tgt:3
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 18.DECODE(3).1, PC: 1a, SP: 1ff0, BP: 1ff6 MAR: 18(8deb), MDR: a CR: 00001000
IR: stw s7 (8deb) - (1000110111101011), Micro(6): 001000000000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:5, tgt:3
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
MDR <- fffa
-------------------------------------------------------------------------
cycle: 18.READ(5).0, PC: 1a, SP: 1ff0, BP: 1ff6 MAR: 18(8deb), MDR: fffa CR: 00001000
IR: stw s7 (8deb) - (1000110111101011), Micro(70): 100000000101000000000000010000000000000000000000
MAR_LOAD REGR0S(BP) OP0S(MDRout) REGR0(8182) OP0(65530) OP1(8182) 
ALUout(8176) 

Stable after 3 vcycles.
regfile: r0:BP, r1:REG0, w:REG0
args: 0:7, 1:5, tgt:3
ALU: 0:MDRout(fffa) 1:REGR0(1ff6) func: out:1ff0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 18.READ(5).1, PC: 1a, SP: 1ff0, BP: 1ff6 MAR: 18(8deb), MDR: fffa CR: 00001000
IR: stw s7 (8deb) - (1000110111101011), Micro(70): 100000000101000000000000010000000000000000000000

Stable after 1 vcycles.
regfile: r0:BP, r1:REG0, w:REG0
args: 0:7, 1:5, tgt:3
ALU: 0:MDRout(fffa) 1:REGR0(1ff6) func: out:1ff0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ff0
-------------------------------------------------------------------------
cycle: 18.EXECUTE(7).0, PC: 1a, SP: 1ff0, BP: 1ff6 MAR: 1ff0(0), MDR: fffa CR: 00001000
IR: stw s7 (8deb) - (1000110111101011), Micro(134): 001010001011000000001000000010000000000000000000
MDR_LOAD REGR0S(TGT2) MDRS(ALUout) OP1S(REGR1) REGR0(10) OP0(10) OP1(0) MDRin(8176) 
ALUout(10) MDRin(10) 

Stable after 3 vcycles.
regfile: r0:TGT2, r1:REG0, w:REG0
args: 0:7, 1:5, tgt:3
ALU: 0:REGR0(a) 1:REGR1(0) func: out:a
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 18.EXECUTE(7).1, PC: 1a, SP: 1ff0, BP: 1ff6 MAR: 1ff0(0), MDR: fffa CR: 00001000
IR: stw s7 (8deb) - (1000110111101011), Micro(134): 001010001011000000001000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:TGT2, r1:REG0, w:REG0
args: 0:7, 1:5, tgt:3
ALU: 0:REGR0(a) 1:REGR1(0) func: out:a
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 
MDR <- 000a
RAM[1ff0] <- a
MAR <- 1a
PC++
IR <- 91f0
-------------------------------------------------------------------------
cycle: 19.DECODE(3).0, PC: 1c, SP: 1ff0, BP: 1ff6 MAR: 1a(91f0), MDR: a CR: 00001000
IR: DECODING (91f0) Micro(8): 001000000000000000000000000000000000000000000000
MDR_LOAD IRimm(65532) REGR1(0) OP0(0) MDRin(65532) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:6, tgt:0
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 0000 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 19.DECODE(3).1, PC: 1c, SP: 1ff0, BP: 1ff6 MAR: 1a(91f0), MDR: a CR: 00001000
IR: stw0 s7 (91f0) - (1001000111110000), Micro(8): 001000000000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:6, tgt:0
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 0000 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- fffc
-------------------------------------------------------------------------
cycle: 19.READ(5).0, PC: 1c, SP: 1ff0, BP: 1ff6 MAR: 1a(91f0), MDR: fffc CR: 00001000
IR: stw0 s7 (91f0) - (1001000111110000), Micro(72): 100000000101000000000000010000000000000000000000
MAR_LOAD REGR0S(BP) OP0S(MDRout) REGR0(8182) OP0(65532) OP1(8182) 
ALUout(8178) 

Stable after 3 vcycles.
regfile: r0:BP, r1:REG0, w:REG0
args: 0:7, 1:6, tgt:0
ALU: 0:MDRout(fffc) 1:REGR0(1ff6) func: out:1ff2
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 0000 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 19.READ(5).1, PC: 1c, SP: 1ff0, BP: 1ff6 MAR: 1a(91f0), MDR: fffc CR: 00001000
IR: stw0 s7 (91f0) - (1001000111110000), Micro(72): 100000000101000000000000010000000000000000000000

Stable after 1 vcycles.
regfile: r0:BP, r1:REG0, w:REG0
args: 0:7, 1:6, tgt:0
ALU: 0:MDRout(fffc) 1:REGR0(1ff6) func: out:1ff2
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 0000 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ff2
-------------------------------------------------------------------------
cycle: 19.EXECUTE(7).0, PC: 1c, SP: 1ff0, BP: 1ff6 MAR: 1ff2(0), MDR: fffc CR: 00001000
IR: stw0 s7 (91f0) - (1001000111110000), Micro(136): 001010000000000000001000000010000000000000000000
MDR_LOAD MDRS(ALUout) OP1S(REGR1) REGR0(0) OP0(0) OP1(0) MDRin(8178) 
ALUout(0) MDRin(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:6, tgt:0
ALU: 0:REGR0(0) 1:REGR1(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 0000 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 19.EXECUTE(7).1, PC: 1c, SP: 1ff0, BP: 1ff6 MAR: 1ff2(0), MDR: fffc CR: 00001000
IR: stw0 s7 (91f0) - (1001000111110000), Micro(136): 001010000000000000001000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:6, tgt:0
ALU: 0:REGR0(0) 1:REGR1(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 0000 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0000
RAM[1ff2] <- 0
MAR <- 1c
PC++
IR <- 64
-------------------------------------------------------------------------
cycle: 20.DECODE(3).0, PC: 1e, SP: 1ff0, BP: 1ff6 MAR: 1c(64), MDR: 0 CR: 00001000
IR: DECODING (64) Micro(0): 001000000000000000000000110000000000100000000000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(12) REGR1(0) OP0(0) MDRin(12) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:1, 1:4, tgt:4
ALU: 0:MDRout(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 0000 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 20.DECODE(3).1, PC: 1e, SP: 1ff0, BP: 1ff6 MAR: 1c(64), MDR: 0 CR: 00001000
IR: ldi (64) - (0000000001100100), Micro(0): 001000000000000000000000110000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:1, 1:4, tgt:4
ALU: 0:MDRout(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 0000 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 000c
-------------------------------------------------------------------------
cycle: 20.EXECUTE(7).0, PC: 1e, SP: 1ff0, BP: 1ff6 MAR: 1c(64), MDR: c CR: 00001000
IR: ldi (64) - (0000000001100100), Micro(128): 000100000000000010100000010000000000000000000000
REGWS(TGT) OP0S(MDRout) IRimm(25) MDRin(25) 

Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:1, 1:4, tgt:4
ALU: 0:MDRout(c) 1:REGR0(0) func: out:c
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 0000 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 20.EXECUTE(7).1, PC: 1e, SP: 1ff0, BP: 1ff6 MAR: 1c(64), MDR: c CR: 00001000
IR: ldi (64) - (0000000001100100), Micro(128): 000100000000000010100000010000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:1, 1:4, tgt:4
ALU: 0:MDRout(c) 1:REGR0(0) func: out:c
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 0000 0000 000a 0000 0000 0000 0000 0000 0000 0000 
REG4 <- c
MAR <- 1e
PC++
IR <- 8dfb
-------------------------------------------------------------------------
cycle: 21.DECODE(3).0, PC: 20, SP: 1ff0, BP: 1ff6 MAR: 1e(8dfb), MDR: c CR: 00001000
IR: DECODING (8dfb) Micro(6): 001000000000000000000000000000000000000000000000
MDR_LOAD IRimm(65534) REGR1(0) OP0(0) MDRin(65534) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:3
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 0000 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 21.DECODE(3).1, PC: 20, SP: 1ff0, BP: 1ff6 MAR: 1e(8dfb), MDR: c CR: 00001000
IR: stw s7 (8dfb) - (1000110111111011), Micro(6): 001000000000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:3
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 0000 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- fffe
-------------------------------------------------------------------------
cycle: 21.READ(5).0, PC: 20, SP: 1ff0, BP: 1ff6 MAR: 1e(8dfb), MDR: fffe CR: 00001000
IR: stw s7 (8dfb) - (1000110111111011), Micro(70): 100000000101000000000000010000000000000000000000
MAR_LOAD REGR0S(BP) OP0S(MDRout) REGR0(8182) OP0(65534) OP1(8182) 
ALUout(8180) 

Stable after 3 vcycles.
regfile: r0:BP, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:3
ALU: 0:MDRout(fffe) 1:REGR0(1ff6) func: out:1ff4
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 0000 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 21.READ(5).1, PC: 20, SP: 1ff0, BP: 1ff6 MAR: 1e(8dfb), MDR: fffe CR: 00001000
IR: stw s7 (8dfb) - (1000110111111011), Micro(70): 100000000101000000000000010000000000000000000000

Stable after 1 vcycles.
regfile: r0:BP, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:3
ALU: 0:MDRout(fffe) 1:REGR0(1ff6) func: out:1ff4
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 0000 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ff4
-------------------------------------------------------------------------
cycle: 21.EXECUTE(7).0, PC: 20, SP: 1ff0, BP: 1ff6 MAR: 1ff4(0), MDR: fffe CR: 00001000
IR: stw s7 (8dfb) - (1000110111111011), Micro(134): 001010001011000000001000000010000000000000000000
MDR_LOAD REGR0S(TGT2) MDRS(ALUout) OP1S(REGR1) REGR0(12) OP0(12) OP1(0) MDRin(8180) 
ALUout(12) MDRin(12) 

Stable after 3 vcycles.
regfile: r0:TGT2, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:3
ALU: 0:REGR0(c) 1:REGR1(0) func: out:c
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 0000 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 21.EXECUTE(7).1, PC: 20, SP: 1ff0, BP: 1ff6 MAR: 1ff4(0), MDR: fffe CR: 00001000
IR: stw s7 (8dfb) - (1000110111111011), Micro(134): 001010001011000000001000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:TGT2, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:3
ALU: 0:REGR0(c) 1:REGR1(0) func: out:c
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 0000 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 000c
RAM[1ff4] <- c
MAR <- 20
PC++
IR <- 8813
-------------------------------------------------------------------------
cycle: 22.DECODE(3).0, PC: 22, SP: 1ff0, BP: 1ff6 MAR: 20(8813), MDR: c CR: 00001000
IR: DECODING (8813) Micro(4): 001000000000000000000000000000000000000000000000
MDR_LOAD IRimm(4) REGR1(0) OP0(0) MDRin(4) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:3
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 22.DECODE(3).1, PC: 22, SP: 1ff0, BP: 1ff6 MAR: 20(8813), MDR: c CR: 00001000
IR: ldw s7 (8813) - (1000100000010011), Micro(4): 001000000000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:3
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0004
-------------------------------------------------------------------------
cycle: 22.READ(5).0, PC: 22, SP: 1ff0, BP: 1ff6 MAR: 20(8813), MDR: 4 CR: 00001000
IR: ldw s7 (8813) - (1000100000010011), Micro(68): 100000000101000000000000010000000000000000000000
MAR_LOAD REGR0S(BP) OP0S(MDRout) REGR0(8182) OP0(4) OP1(8182) 
ALUout(8186) 

Stable after 3 vcycles.
regfile: r0:BP, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:3
ALU: 0:MDRout(4) 1:REGR0(1ff6) func: out:1ffa
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 22.READ(5).1, PC: 22, SP: 1ff0, BP: 1ff6 MAR: 20(8813), MDR: 4 CR: 00001000
IR: ldw s7 (8813) - (1000100000010011), Micro(68): 100000000101000000000000010000000000000000000000

Stable after 1 vcycles.
regfile: r0:BP, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:3
ALU: 0:MDRout(4) 1:REGR0(1ff6) func: out:1ffa
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ffa
-------------------------------------------------------------------------
cycle: 22.EXECUTE(7).0, PC: 22, SP: 1ff0, BP: 1ff6 MAR: 1ffa(2), MDR: 4 CR: 00001000
IR: ldw s7 (8813) - (1000100000010011), Micro(132): 001100000000000010110100010000000000000000000000
MDR_LOAD REGWS(TGT2) MDRS(RAMout) OP0S(MDRout) REGR0(0) OP1(0) MDRin(2) 
ALUout(4) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT2
args: 0:0, 1:2, tgt:3
ALU: 0:MDRout(4) 1:REGR0(0) func: out:4
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 22.EXECUTE(7).1, PC: 22, SP: 1ff0, BP: 1ff6 MAR: 1ffa(2), MDR: 4 CR: 00001000
IR: ldw s7 (8813) - (1000100000010011), Micro(132): 001100000000000010110100010000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT2
args: 0:0, 1:2, tgt:3
ALU: 0:MDRout(4) 1:REGR0(0) func: out:4
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0002
REG4 <- 2
MAR <- 22
PC++
IR <- b813
-------------------------------------------------------------------------
cycle: 23.DECODE(3).0, PC: 24, SP: 1ff0, BP: 1ff6 MAR: 22(b813), MDR: 2 CR: 00001000
IR: DECODING (b813) Micro(28): 001000000000000000000010100000000000000000000000
MDR_LOAD IMMS(IMM4) IRimm(0) REGR1(0) OP0(0) MDRin(0) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:3
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 23.DECODE(3).1, PC: 24, SP: 1ff0, BP: 1ff6 MAR: 22(b813), MDR: 2 CR: 00001000
IR: shl (b813) - (1011100000010011), Micro(28): 001000000000000000000010100000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:3
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0000
-------------------------------------------------------------------------
cycle: 23.READ(5).0, PC: 24, SP: 1ff0, BP: 1ff6 MAR: 22(b813), MDR: 0 CR: 00001000
IR: shl (b813) - (1011100000010011), Micro(92): 000000000000000000000000000000000000000000000000
IRimm(4) MDRin(4) 

Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:3
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 23.READ(5).1, PC: 24, SP: 1ff0, BP: 1ff6 MAR: 22(b813), MDR: 0 CR: 00001000
IR: shl (b813) - (1011100000010011), Micro(92): 000000000000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:3
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 23.EXECUTE(7).0, PC: 24, SP: 1ff0, BP: 1ff6 MAR: 22(b813), MDR: 0 CR: 00001000
IR: shl (b813) - (1011100000010011), Micro(156): 000100001100000010110000000100001000000000000000
REGR0S(ARG2) REGWS(TGT2) OP1S(MDRout) ALUS(EQ) REGR0(2) OP0(2) 
ALUout(4) 

Stable after 3 vcycles.
regfile: r0:ARG2, r1:REG0, w:TGT2
args: 0:0, 1:2, tgt:3
ALU: 0:REGR0(2) 1:MDRout(0) func: out:4
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 23.EXECUTE(7).1, PC: 24, SP: 1ff0, BP: 1ff6 MAR: 22(b813), MDR: 0 CR: 00001000
IR: shl (b813) - (1011100000010011), Micro(156): 000100001100000010110000000100001000000000000000

Stable after 1 vcycles.
regfile: r0:ARG2, r1:REG0, w:TGT2
args: 0:0, 1:2, tgt:3
ALU: 0:REGR0(2) 1:MDRout(0) func: out:4
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
REG4 <- 4
MAR <- 24
PC++
IR <- 1fd3
-------------------------------------------------------------------------
cycle: 24.DECODE(3).0, PC: 26, SP: 1ff0, BP: 1ff6 MAR: 24(1fd3), MDR: 0 CR: 00001000
IR: DECODING (1fd3) Micro(0): 001000000000000000000000110000000000100000000000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(65530) REGR1(0) OP0(0) MDRin(65530) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:2, tgt:3
ALU: 0:MDRout(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 24.DECODE(3).1, PC: 26, SP: 1ff0, BP: 1ff6 MAR: 24(1fd3), MDR: 0 CR: 00001000
IR: ldi (1fd3) - (0001111111010011), Micro(0): 001000000000000000000000110000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:2, tgt:3
ALU: 0:MDRout(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- fffa
-------------------------------------------------------------------------
cycle: 24.EXECUTE(7).0, PC: 26, SP: 1ff0, BP: 1ff6 MAR: 24(1fd3), MDR: fffa CR: 00001000
IR: ldi (1fd3) - (0001111111010011), Micro(128): 000100000000000010100000010000000000000000000000
REGWS(TGT) OP0S(MDRout) IRimm(65524) MDRin(65524) 

Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:7, 1:2, tgt:3
ALU: 0:MDRout(fffa) 1:REGR0(0) func: out:fffa
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 24.EXECUTE(7).1, PC: 26, SP: 1ff0, BP: 1ff6 MAR: 24(1fd3), MDR: fffa CR: 00001000
IR: ldi (1fd3) - (0001111111010011), Micro(128): 000100000000000010100000010000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:7, 1:2, tgt:3
ALU: 0:MDRout(fffa) 1:REGR0(0) func: out:fffa
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
REG3 <- fffa
MAR <- 26
PC++
IR <- 94eb
-------------------------------------------------------------------------
cycle: 25.DECODE(3).0, PC: 28, SP: 1ff0, BP: 1ff6 MAR: 26(94eb), MDR: fffa CR: 00001000
IR: DECODING (94eb) Micro(10): 000100001000100110100000000010000001000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) IRimm(58) REGR0(65530) REGR1(8182) OP0(65530) OP1(8182) MDRin(58) 
ALUout(8176) 

Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:3, 1:5, tgt:3
ALU: 0:REGR0(fffa) 1:REGR1(1ff6) func: out:1ff0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 25.DECODE(3).1, PC: 28, SP: 1ff0, BP: 1ff6 MAR: 26(94eb), MDR: fffa CR: 00001000
IR: add (94eb) - (1001010011101011), Micro(10): 000100001000100110100000000010000001000000000000

Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:3, 1:5, tgt:3
ALU: 0:REGR0(fffa) 1:REGR1(1ff6) func: out:1ff0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
REG3 <- 1ff0
MAR <- 28
PC++
IR <- b119
-------------------------------------------------------------------------
cycle: 26.DECODE(3).0, PC: 2a, SP: 1ff0, BP: 1ff6 MAR: 28(b119), MDR: fffa CR: 00001000
IR: DECODING (b119) Micro(24): 000000000000000000000000000000000000000000000000
IRimm(65478) REGR1(0) OP0(0) MDRin(65478) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:4, 1:3, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 26.DECODE(3).1, PC: 2a, SP: 1ff0, BP: 1ff6 MAR: 28(b119), MDR: fffa CR: 00001000
IR: ldw.b (b119) - (1011000100011001), Micro(24): 000000000000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:4, 1:3, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 26.READ(5).0, PC: 2a, SP: 1ff0, BP: 1ff6 MAR: 28(b119), MDR: fffa CR: 00001000
IR: ldw.b (b119) - (1011000100011001), Micro(88): 100000001000100100000000000010000000000000000000
MAR_LOAD REGR0S(ARG0) REGR1S(ARG1) OP1S(REGR1) REGR0(4) REGR1(8176) OP0(4) OP1(8176) 
ALUout(8180) 

Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:REG0
args: 0:4, 1:3, tgt:1
ALU: 0:REGR0(4) 1:REGR1(1ff0) func: out:1ff4
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 26.READ(5).1, PC: 2a, SP: 1ff0, BP: 1ff6 MAR: 28(b119), MDR: fffa CR: 00001000
IR: ldw.b (b119) - (1011000100011001), Micro(88): 100000001000100100000000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:REG0
args: 0:4, 1:3, tgt:1
ALU: 0:REGR0(4) 1:REGR1(1ff0) func: out:1ff4
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ff4
-------------------------------------------------------------------------
cycle: 26.EXECUTE(7).0, PC: 2a, SP: 1ff0, BP: 1ff6 MAR: 1ff4(c), MDR: fffa CR: 00001000
IR: ldw.b (b119) - (1011000100011001), Micro(152): 001100000000000010100100010000000000000000000000
MDR_LOAD REGWS(TGT) MDRS(RAMout) OP0S(MDRout) REGR0(0) REGR1(0) OP0(65530) OP1(0) MDRin(12) 
ALUout(65530) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:4, 1:3, tgt:1
ALU: 0:MDRout(fffa) 1:REGR0(0) func: out:fffa
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 26.EXECUTE(7).1, PC: 2a, SP: 1ff0, BP: 1ff6 MAR: 1ff4(c), MDR: fffa CR: 00001000
IR: ldw.b (b119) - (1011000100011001), Micro(152): 001100000000000010100100010000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:4, 1:3, tgt:1
ALU: 0:MDRout(fffa) 1:REGR0(0) func: out:fffa
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 000c
REG1 <- c
MAR <- 2a
PC++
IR <- 9546
-------------------------------------------------------------------------
cycle: 27.DECODE(3).0, PC: 2c, SP: 1ff0, BP: 1ff6 MAR: 2a(9546), MDR: c CR: 00001000
IR: DECODING (9546) Micro(10): 000100001000100110100000000010000001000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) IRimm(65489) REGR0(8182) REGR1(0) OP0(8182) MDRin(65489) 
ALUout(8182) 

Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:5, 1:0, tgt:6
ALU: 0:REGR0(1ff6) 1:REGR1(0) func: out:1ff6
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 27.DECODE(3).1, PC: 2c, SP: 1ff0, BP: 1ff6 MAR: 2a(9546), MDR: c CR: 00001000
IR: add (9546) - (1001010101000110), Micro(10): 000100001000100110100000000010000001000000000000

Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:5, 1:0, tgt:6
ALU: 0:REGR0(1ff6) 1:REGR1(0) func: out:1ff6
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
SP <- 1ff6
MAR <- 2c
PC++
IR <- c005
-------------------------------------------------------------------------
cycle: 28.DECODE(3).0, PC: 2e, SP: 1ff6, BP: 1ff6 MAR: 2c(c005), MDR: c CR: 00001000
IR: DECODING (c005) Micro(32): 000000000000000000000000000000000000000000000000
IRimm(1) REGR1(0) OP0(0) MDRin(1) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 28.DECODE(3).1, PC: 2e, SP: 1ff6, BP: 1ff6 MAR: 2c(c005), MDR: c CR: 00001000
IR: pop (c005) - (1100000000000101), Micro(32): 000000000000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 28.READ(5).0, PC: 2e, SP: 1ff6, BP: 1ff6 MAR: 2c(c005), MDR: c CR: 00001000
IR: pop (c005) - (1100000000000101), Micro(96): 100000000110000000000000000010000000000000000000
MAR_LOAD REGR0S(SP) OP1S(REGR1) REGR0(8182) OP0(8182) 
ALUout(8182) 

Stable after 3 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(1ff6) 1:REGR1(0) func: out:1ff6
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 28.READ(5).1, PC: 2e, SP: 1ff6, BP: 1ff6 MAR: 2c(c005), MDR: c CR: 00001000
IR: pop (c005) - (1100000000000101), Micro(96): 100000000110000000000000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(1ff6) 1:REGR1(0) func: out:1ff6
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ff6
-------------------------------------------------------------------------
cycle: 28.EXECUTE(7).0, PC: 2e, SP: 1ff6, BP: 1ff6 MAR: 1ff6(1ffc), MDR: c CR: 00001000
IR: pop (c005) - (1100000000000101), Micro(160): 001100000000000010100100010000000000010000000000
MDR_LOAD REGWS(TGT) MDRS(RAMout) OP0S(MDRout) REGR0(0) OP0(12) MDRin(8188) 
ALUout(12) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:5
ALU: 0:MDRout(c) 1:REGR0(0) func: out:c
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 28.EXECUTE(7).1, PC: 2e, SP: 1ff6, BP: 1ff6 MAR: 1ff6(1ffc), MDR: c CR: 00001000
IR: pop (c005) - (1100000000000101), Micro(160): 001100000000000010100100010000000000010000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:5
ALU: 0:MDRout(c) 1:REGR0(0) func: out:c
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 1ffc
BP <- 1ffc
SP++
MAR <- 2e
PC++
IR <- c007
-------------------------------------------------------------------------
cycle: 29.DECODE(3).0, PC: 30, SP: 1ff8, BP: 1ffc MAR: 2e(c007), MDR: 1ffc CR: 00001000
IR: DECODING (c007) Micro(32): 000000000000000000000000000000000000000000000000
REGR1(0) OP0(0) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:7
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8*1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 29.DECODE(3).1, PC: 30, SP: 1ff8, BP: 1ffc MAR: 2e(c007), MDR: 1ffc CR: 00001000
IR: pop (c007) - (1100000000000111), Micro(32): 000000000000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:7
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8*1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 29.READ(5).0, PC: 30, SP: 1ff8, BP: 1ffc MAR: 2e(c007), MDR: 1ffc CR: 00001000
IR: pop (c007) - (1100000000000111), Micro(96): 100000000110000000000000000010000000000000000000
MAR_LOAD REGR0S(SP) OP1S(REGR1) REGR0(8184) OP0(8184) 
ALUout(8184) 

Stable after 3 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:7
ALU: 0:REGR0(1ff8) 1:REGR1(0) func: out:1ff8
STACK:
1ffe 1ffc 1ffa 1ff8*1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 29.READ(5).1, PC: 30, SP: 1ff8, BP: 1ffc MAR: 2e(c007), MDR: 1ffc CR: 00001000
IR: pop (c007) - (1100000000000111), Micro(96): 100000000110000000000000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:7
ALU: 0:REGR0(1ff8) 1:REGR1(0) func: out:1ff8
STACK:
1ffe 1ffc 1ffa 1ff8*1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ff8
-------------------------------------------------------------------------
cycle: 29.EXECUTE(7).0, PC: 30, SP: 1ff8, BP: 1ffc MAR: 1ff8(3e), MDR: 1ffc CR: 00001000
IR: pop (c007) - (1100000000000111), Micro(160): 001100000000000010100100010000000000010000000000
MDR_LOAD REGWS(TGT) MDRS(RAMout) OP0S(MDRout) REGR0(0) OP0(8188) MDRin(62) 
ALUout(8188) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:7
ALU: 0:MDRout(1ffc) 1:REGR0(0) func: out:1ffc
STACK:
1ffe 1ffc 1ffa 1ff8*1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 29.EXECUTE(7).1, PC: 30, SP: 1ff8, BP: 1ffc MAR: 1ff8(3e), MDR: 1ffc CR: 00001000
IR: pop (c007) - (1100000000000111), Micro(160): 001100000000000010100100010000000000010000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:7
ALU: 0:MDRout(1ffc) 1:REGR0(0) func: out:1ffc
STACK:
1ffe 1ffc 1ffa 1ff8*1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 003e
PC <- 3e
SP++
MAR <- 3e
PC++
IR <- 3
-------------------------------------------------------------------------
cycle: 30.DECODE(3).0, PC: 40, SP: 1ffa, BP: 1ffc MAR: 3e(3), MDR: 3e CR: 00001000
IR: DECODING (3) Micro(0): 001000000000000000000000110000000000100000000000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(0) REGR1(0) MDRin(0) 

Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:3
ALU: 0:MDRout(3e) 1:REGR0(0) func: out:3e
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 30.DECODE(3).1, PC: 40, SP: 1ffa, BP: 1ffc MAR: 3e(3), MDR: 3e CR: 00001000
IR: ldi (3) - (0000000000000011), Micro(0): 001000000000000000000000110000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:3
ALU: 0:MDRout(3e) 1:REGR0(0) func: out:3e
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0000
-------------------------------------------------------------------------
cycle: 30.EXECUTE(7).0, PC: 40, SP: 1ffa, BP: 1ffc MAR: 3e(3), MDR: 0 CR: 00001000
IR: ldi (3) - (0000000000000011), Micro(128): 000100000000000010100000010000000000000000000000
REGWS(TGT) OP0S(MDRout) 

Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:3
ALU: 0:MDRout(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 30.EXECUTE(7).1, PC: 40, SP: 1ffa, BP: 1ffc MAR: 3e(3), MDR: 0 CR: 00001000
IR: ldi (3) - (0000000000000011), Micro(128): 000100000000000010100000010000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:3
ALU: 0:MDRout(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
REG3 <- 0
MAR <- 40
PC++
IR <- bc22
-------------------------------------------------------------------------
cycle: 31.DECODE(3).0, PC: 42, SP: 1ffa, BP: 1ffc MAR: 40(bc22), MDR: 0 CR: 00001000
IR: DECODING (bc22) Micro(30): 001000000000000000000010000000000000100000000000
MDR_LOAD IMMS(IMM7u) IRimm(8) REGR1(0) OP0(0) MDRin(8) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:4, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 31.DECODE(3).1, PC: 42, SP: 1ffa, BP: 1ffc MAR: 40(bc22), MDR: 0 CR: 00001000
IR: addhi (bc22) - (1011110000100010), Micro(30): 001000000000000000000010000000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:4, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0008
-------------------------------------------------------------------------
cycle: 31.EXECUTE(7).0, PC: 42, SP: 1ffa, BP: 1ffc MAR: 40(bc22), MDR: 8 CR: 00001000
IR: addhi (bc22) - (1011110000100010), Micro(158): 000100000000101110110000010010001100000000000000
REGR1S(TGT2) REGWS(TGT2) OP0S(MDRout) OP1S(REGR1) ALUS(LT) OP0(8) 
ALUout(4096) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:TGT2, w:TGT2
args: 0:0, 1:4, tgt:2
ALU: 0:MDRout(8) 1:REGR1(0) func: out:1000
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 31.EXECUTE(7).1, PC: 42, SP: 1ffa, BP: 1ffc MAR: 40(bc22), MDR: 8 CR: 00001000
IR: addhi (bc22) - (1011110000100010), Micro(158): 000100000000101110110000010010001100000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:TGT2, w:TGT2
args: 0:0, 1:4, tgt:2
ALU: 0:MDRout(8) 1:REGR1(0) func: out:1000
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
REG3 <- 1000
MAR <- 42
PC++
IR <- b419
-------------------------------------------------------------------------
cycle: 32.DECODE(3).0, PC: 44, SP: 1ffa, BP: 1ffc MAR: 42(b419), MDR: 8 CR: 00001000
IR: DECODING (b419) Micro(26): 000000000000000000000000000000000000000000000000
IRimm(6) REGR1(0) OP0(0) MDRin(6) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:3, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 32.DECODE(3).1, PC: 44, SP: 1ffa, BP: 1ffc MAR: 42(b419), MDR: 8 CR: 00001000
IR: stw.b (b419) - (1011010000011001), Micro(26): 000000000000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:3, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 32.READ(5).0, PC: 44, SP: 1ffa, BP: 1ffc MAR: 42(b419), MDR: 8 CR: 00001000
IR: stw.b (b419) - (1011010000011001), Micro(90): 100000001000100100000000000010000000000000000000
MAR_LOAD REGR0S(ARG0) REGR1S(ARG1) OP1S(REGR1) REGR1(4096) OP1(4096) 
ALUout(4096) 

Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:REG0
args: 0:0, 1:3, tgt:1
ALU: 0:REGR0(0) 1:REGR1(1000) func: out:1000
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 32.READ(5).1, PC: 44, SP: 1ffa, BP: 1ffc MAR: 42(b419), MDR: 8 CR: 00001000
IR: stw.b (b419) - (1011010000011001), Micro(90): 100000001000100100000000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:REG0
args: 0:0, 1:3, tgt:1
ALU: 0:REGR0(0) 1:REGR1(1000) func: out:1000
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1000
-------------------------------------------------------------------------
cycle: 32.EXECUTE(7).0, PC: 44, SP: 1ffa, BP: 1ffc MAR: 1000(5), MDR: 8 CR: 00001000
IR: stw.b (b419) - (1011010000011001), Micro(154): 001010001010000000001000000010000000000000000000
MDR_LOAD REGR0S(TGT) MDRS(ALUout) OP1S(REGR1) REGR0(12) REGR1(0) OP0(12) OP1(0) MDRin(4096) 
ALUout(12) MDRin(12) 

Stable after 3 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:3, tgt:1
ALU: 0:REGR0(c) 1:REGR1(0) func: out:c
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 32.EXECUTE(7).1, PC: 44, SP: 1ffa, BP: 1ffc MAR: 1000(5), MDR: 8 CR: 00001000
IR: stw.b (b419) - (1011010000011001), Micro(154): 001010001010000000001000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:3, tgt:1
ALU: 0:REGR0(c) 1:REGR1(0) func: out:c
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 000c
RAM[1000] <- c
MAR <- 44
PC++
IR <- 9401
-------------------------------------------------------------------------
cycle: 33.DECODE(3).0, PC: 46, SP: 1ffa, BP: 1ffc MAR: 44(9401), MDR: c CR: 00001000
IR: DECODING (9401) Micro(10): 000100001000100110100000000010000001000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) IRimm(0) REGR1(0) OP0(0) MDRin(0) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(0) 1:REGR1(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 33.DECODE(3).1, PC: 46, SP: 1ffa, BP: 1ffc MAR: 44(9401), MDR: c CR: 00001000
IR: add (9401) - (1001010000000001), Micro(10): 000100001000100110100000000010000001000000000000

Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(0) 1:REGR1(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
REG1 <- 0
MAR <- 46
PC++
IR <- c005
-------------------------------------------------------------------------
cycle: 34.DECODE(3).0, PC: 48, SP: 1ffa, BP: 1ffc MAR: 46(c005), MDR: c CR: 00001000
IR: DECODING (c005) Micro(32): 000000000000000000000000000000000000000000000000
IRimm(1) REGR1(0) OP0(0) MDRin(1) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 34.DECODE(3).1, PC: 48, SP: 1ffa, BP: 1ffc MAR: 46(c005), MDR: c CR: 00001000
IR: pop (c005) - (1100000000000101), Micro(32): 000000000000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 34.READ(5).0, PC: 48, SP: 1ffa, BP: 1ffc MAR: 46(c005), MDR: c CR: 00001000
IR: pop (c005) - (1100000000000101), Micro(96): 100000000110000000000000000010000000000000000000
MAR_LOAD REGR0S(SP) OP1S(REGR1) REGR0(8186) OP0(8186) 
ALUout(8186) 

Stable after 3 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(1ffa) 1:REGR1(0) func: out:1ffa
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 34.READ(5).1, PC: 48, SP: 1ffa, BP: 1ffc MAR: 46(c005), MDR: c CR: 00001000
IR: pop (c005) - (1100000000000101), Micro(96): 100000000110000000000000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(1ffa) 1:REGR1(0) func: out:1ffa
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ffa
-------------------------------------------------------------------------
cycle: 34.EXECUTE(7).0, PC: 48, SP: 1ffa, BP: 1ffc MAR: 1ffa(2), MDR: c CR: 00001000
IR: pop (c005) - (1100000000000101), Micro(160): 001100000000000010100100010000000000010000000000
MDR_LOAD REGWS(TGT) MDRS(RAMout) OP0S(MDRout) REGR0(0) OP0(12) MDRin(2) 
ALUout(12) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:5
ALU: 0:MDRout(c) 1:REGR0(0) func: out:c
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 34.EXECUTE(7).1, PC: 48, SP: 1ffa, BP: 1ffc MAR: 1ffa(2), MDR: c CR: 00001000
IR: pop (c005) - (1100000000000101), Micro(160): 001100000000000010100100010000000000010000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:5
ALU: 0:MDRout(c) 1:REGR0(0) func: out:c
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0002
BP <- 2
SP++
MAR <- 48
PC++
IR <- c007
-------------------------------------------------------------------------
cycle: 35.DECODE(3).0, PC: 4a, SP: 1ffc, BP: 2 MAR: 48(c007), MDR: 2 CR: 00001000
IR: DECODING (c007) Micro(32): 000000000000000000000000000000000000000000000000
REGR1(0) OP0(0) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:7
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 35.DECODE(3).1, PC: 4a, SP: 1ffc, BP: 2 MAR: 48(c007), MDR: 2 CR: 00001000
IR: pop (c007) - (1100000000000111), Micro(32): 000000000000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:7
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 35.READ(5).0, PC: 4a, SP: 1ffc, BP: 2 MAR: 48(c007), MDR: 2 CR: 00001000
IR: pop (c007) - (1100000000000111), Micro(96): 100000000110000000000000000010000000000000000000
MAR_LOAD REGR0S(SP) OP1S(REGR1) REGR0(8188) OP0(8188) 
ALUout(8188) 

Stable after 3 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:7
ALU: 0:REGR0(1ffc) 1:REGR1(0) func: out:1ffc
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 35.READ(5).1, PC: 4a, SP: 1ffc, BP: 2 MAR: 48(c007), MDR: 2 CR: 00001000
IR: pop (c007) - (1100000000000111), Micro(96): 100000000110000000000000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:7
ALU: 0:REGR0(1ffc) 1:REGR1(0) func: out:1ffc
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ffc
-------------------------------------------------------------------------
cycle: 35.EXECUTE(7).0, PC: 4a, SP: 1ffc, BP: 2 MAR: 1ffc(0), MDR: 2 CR: 00001000
IR: pop (c007) - (1100000000000111), Micro(160): 001100000000000010100100010000000000010000000000
MDR_LOAD REGWS(TGT) MDRS(RAMout) OP0S(MDRout) REGR0(0) OP0(2) MDRin(0) 
ALUout(2) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:7
ALU: 0:MDRout(2) 1:REGR0(0) func: out:2
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 35.EXECUTE(7).1, PC: 4a, SP: 1ffc, BP: 2 MAR: 1ffc(0), MDR: 2 CR: 00001000
IR: pop (c007) - (1100000000000111), Micro(160): 001100000000000010100100010000000000010000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:7
ALU: 0:MDRout(2) 1:REGR0(0) func: out:2
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0000
PC <- 0
SP++
MAR <- 0
PC++
IR <- 1
-------------------------------------------------------------------------
cycle: 36.DECODE(3).0, PC: 2, SP: 1ffe, BP: 2 MAR: 0(1), MDR: 0 CR: 00001000
IR: DECODING (1) Micro(0): 001000000000000000000000110000000000100000000000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(0) MDRin(0) 

Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:MDRout(0) 1:REGR0(0) func: out:0
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 36.DECODE(3).1, PC: 2, SP: 1ffe, BP: 2 MAR: 0(1), MDR: 0 CR: 00001000
IR: ldi (1) - (0000000000000001), Micro(0): 001000000000000000000000110000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:MDRout(0) 1:REGR0(0) func: out:0
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0000
-------------------------------------------------------------------------
cycle: 36.EXECUTE(7).0, PC: 2, SP: 1ffe, BP: 2 MAR: 0(1), MDR: 0 CR: 00001000
IR: ldi (1) - (0000000000000001), Micro(128): 000100000000000010100000010000000000000000000000
REGWS(TGT) OP0S(MDRout) 

Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:1
ALU: 0:MDRout(0) 1:REGR0(0) func: out:0
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 36.EXECUTE(7).1, PC: 2, SP: 1ffe, BP: 2 MAR: 0(1), MDR: 0 CR: 00001000
IR: ldi (1) - (0000000000000001), Micro(128): 000100000000000010100000010000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:1
ALU: 0:MDRout(0) 1:REGR0(0) func: out:0
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
REG1 <- 0
MAR <- 2
PC++
IR <- bc40
-------------------------------------------------------------------------
cycle: 37.DECODE(3).0, PC: 4, SP: 1ffe, BP: 2 MAR: 2(bc40), MDR: 0 CR: 00001000
IR: DECODING (bc40) Micro(30): 001000000000000000000010000000000000100000000000
MDR_LOAD IMMS(IMM7u) IRimm(16) REGR1(0) OP0(0) MDRin(16) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:1, 1:0, tgt:0
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 37.DECODE(3).1, PC: 4, SP: 1ffe, BP: 2 MAR: 2(bc40), MDR: 0 CR: 00001000
IR: addhi (bc40) - (1011110001000000), Micro(30): 001000000000000000000010000000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:1, 1:0, tgt:0
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0010
-------------------------------------------------------------------------
cycle: 37.EXECUTE(7).0, PC: 4, SP: 1ffe, BP: 2 MAR: 2(bc40), MDR: 10 CR: 00001000
IR: addhi (bc40) - (1011110001000000), Micro(158): 000100000000101110110000010010001100000000000000
REGR1S(TGT2) REGWS(TGT2) OP0S(MDRout) OP1S(REGR1) ALUS(LT) OP0(16) 
ALUout(8192) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:TGT2, w:TGT2
args: 0:1, 1:0, tgt:0
ALU: 0:MDRout(10) 1:REGR1(0) func: out:2000
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 37.EXECUTE(7).1, PC: 4, SP: 1ffe, BP: 2 MAR: 2(bc40), MDR: 10 CR: 00001000
IR: addhi (bc40) - (1011110001000000), Micro(158): 000100000000101110110000010010001100000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:TGT2, w:TGT2
args: 0:1, 1:0, tgt:0
ALU: 0:MDRout(10) 1:REGR1(0) func: out:2000
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
REG1 <- 2000
MAR <- 4
PC++
IR <- 9446
-------------------------------------------------------------------------
cycle: 38.DECODE(3).0, PC: 6, SP: 1ffe, BP: 2 MAR: 4(9446), MDR: 10 CR: 00001000
IR: DECODING (9446) Micro(10): 000100001000100110100000000010000001000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) IRimm(17) REGR0(8192) REGR1(0) OP0(8192) MDRin(17) 
ALUout(8192) 

Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:0, tgt:6
ALU: 0:REGR0(2000) 1:REGR1(0) func: out:2000
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 38.DECODE(3).1, PC: 6, SP: 1ffe, BP: 2 MAR: 4(9446), MDR: 10 CR: 00001000
IR: add (9446) - (1001010001000110), Micro(10): 000100001000100110100000000010000001000000000000

Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:0, tgt:6
ALU: 0:REGR0(2000) 1:REGR1(0) func: out:2000
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
SP <- 2000
MAR <- 6
PC++
IR <- a279
-------------------------------------------------------------------------
cycle: 39.DECODE(3).0, PC: 8, SP: 2000, BP: 2 MAR: 6(a279), MDR: 10 CR: 00001000
IR: DECODING (a279) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(2) REGR1(0) OP0(0) MDRin(2) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:1, 1:7, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 39.DECODE(3).1, PC: 8, SP: 2000, BP: 2 MAR: 6(a279), MDR: 10 CR: 00001000
IR: addi (a279) - (1010001001111001), Micro(17): 001000000000000000000001100000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:1, 1:7, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0002
-------------------------------------------------------------------------
cycle: 39.EXECUTE(7).0, PC: 8, SP: 2000, BP: 2 MAR: 6(a279), MDR: 2 CR: 00001000
IR: addi (a279) - (1010001001111001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(30) REGR1(8) OP0(8) OP1(2) MDRin(30) 
ALUout(10) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:1, 1:7, tgt:1
ALU: 0:REGR1(8) 1:MDRout(2) func: out:a
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 39.EXECUTE(7).1, PC: 8, SP: 2000, BP: 2 MAR: 6(a279), MDR: 2 CR: 00001000
IR: addi (a279) - (1010001001111001), Micro(145): 000100000000100110100000001100000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:1, 1:7, tgt:1
ALU: 0:REGR1(8) 1:MDRout(2) func: out:a
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
REG1 <- a
MAR <- 8
PC++
IR <- 2026
-------------------------------------------------------------------------
cycle: 40.DECODE(3).0, PC: a, SP: 2000, BP: 2 MAR: 8(2026), MDR: 2 CR: 00001000
IR: DECODING (2026) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(38) REGR1(0) OP0(0) MDRin(38) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:4, tgt:6
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 40.DECODE(3).1, PC: a, SP: 2000, BP: 2 MAR: 8(2026), MDR: 2 CR: 00001000
IR: br (2026) - (0010000000100110), Micro(1): 001000000000000000000001000000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:4, tgt:6
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0026
-------------------------------------------------------------------------
cycle: 40.EXECUTE(7).0, PC: a, SP: 2000, BP: 2 MAR: 8(2026), MDR: 26 CR: 00001000
IR: br (2026) - (0010000000100110), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(9) REGR0(10) OP0(38) OP1(10) MDRin(9) 
ALUout(48) 

Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:0, 1:4, tgt:6
ALU: 0:MDRout(26) 1:REGR0(a) func: out:30
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 40.EXECUTE(7).1, PC: a, SP: 2000, BP: 2 MAR: 8(2026), MDR: 26 CR: 00001000
IR: br (2026) - (0010000000100110), Micro(129): 000100000111000001110000010000000000000000000000

Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:0, 1:4, tgt:6
ALU: 0:MDRout(26) 1:REGR0(a) func: out:30
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
PC <- 30
MAR <- 30
PC++
IR <- be01
-------------------------------------------------------------------------
cycle: 41.DECODE(3).0, PC: 32, SP: 2000, BP: 2 MAR: 30(be01), MDR: 26 CR: 00001000
IR: DECODING (be01) Micro(31): 000000100000000000000000000000000000000000000000
IRimm(0) REGR1(0) OP0(0) MDRin(0) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 41.DECODE(3).1, PC: 32, SP: 2000, BP: 2 MAR: 30(be01), MDR: 26 CR: 00001000
IR: push (be01) - (1011111000000001), Micro(31): 000000100000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
SP--
-------------------------------------------------------------------------
cycle: 41.READ(5).0, PC: 32, SP: 1ffe, BP: 2 MAR: 30(be01), MDR: 26 CR: 00001000
IR: push (be01) - (1011111000000001), Micro(95): 100000000110000000000000000010000000000000000000
MAR_LOAD REGR0S(SP) OP1S(REGR1) REGR0(8190) OP0(8190) 
ALUout(8190) 

Stable after 3 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(1ffe) 1:REGR1(0) func: out:1ffe
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 41.READ(5).1, PC: 32, SP: 1ffe, BP: 2 MAR: 30(be01), MDR: 26 CR: 00001000
IR: push (be01) - (1011111000000001), Micro(95): 100000000110000000000000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(1ffe) 1:REGR1(0) func: out:1ffe
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ffe
-------------------------------------------------------------------------
cycle: 41.EXECUTE(7).0, PC: 32, SP: 1ffe, BP: 2 MAR: 1ffe(a), MDR: 26 CR: 00001000
IR: push (be01) - (1011111000000001), Micro(159): 001010001010000000001000000010000000000000000000
MDR_LOAD REGR0S(TGT) MDRS(ALUout) OP1S(REGR1) REGR0(10) OP0(10) MDRin(8190) 
ALUout(10) MDRin(10) 

Stable after 3 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(a) 1:REGR1(0) func: out:a
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 41.EXECUTE(7).1, PC: 32, SP: 1ffe, BP: 2 MAR: 1ffe(a), MDR: 26 CR: 00001000
IR: push (be01) - (1011111000000001), Micro(159): 001010001010000000001000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(a) 1:REGR1(0) func: out:a
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 000a
RAM[1ffe] <- a
MAR <- 32
PC++
IR <- be05
-------------------------------------------------------------------------
cycle: 42.DECODE(3).0, PC: 34, SP: 1ffe, BP: 2 MAR: 32(be05), MDR: a CR: 00001000
IR: DECODING (be05) Micro(31): 000000100000000000000000000000000000000000000000
IRimm(1) REGR1(0) OP0(0) MDRin(1) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 42.DECODE(3).1, PC: 34, SP: 1ffe, BP: 2 MAR: 32(be05), MDR: a CR: 00001000
IR: push (be05) - (1011111000000101), Micro(31): 000000100000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
SP--
-------------------------------------------------------------------------
cycle: 42.READ(5).0, PC: 34, SP: 1ffc, BP: 2 MAR: 32(be05), MDR: a CR: 00001000
IR: push (be05) - (1011111000000101), Micro(95): 100000000110000000000000000010000000000000000000
MAR_LOAD REGR0S(SP) OP1S(REGR1) REGR0(8188) OP0(8188) 
ALUout(8188) 

Stable after 3 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(1ffc) 1:REGR1(0) func: out:1ffc
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 42.READ(5).1, PC: 34, SP: 1ffc, BP: 2 MAR: 32(be05), MDR: a CR: 00001000
IR: push (be05) - (1011111000000101), Micro(95): 100000000110000000000000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(1ffc) 1:REGR1(0) func: out:1ffc
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ffc
-------------------------------------------------------------------------
cycle: 42.EXECUTE(7).0, PC: 34, SP: 1ffc, BP: 2 MAR: 1ffc(0), MDR: a CR: 00001000
IR: push (be05) - (1011111000000101), Micro(159): 001010001010000000001000000010000000000000000000
MDR_LOAD REGR0S(TGT) MDRS(ALUout) OP1S(REGR1) REGR0(2) OP0(2) MDRin(8188) 
ALUout(2) MDRin(2) 

Stable after 3 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(2) 1:REGR1(0) func: out:2
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 42.EXECUTE(7).1, PC: 34, SP: 1ffc, BP: 2 MAR: 1ffc(0), MDR: a CR: 00001000
IR: push (be05) - (1011111000000101), Micro(159): 001010001010000000001000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(2) 1:REGR1(0) func: out:2
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0000 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0002
RAM[1ffc] <- 2
MAR <- 34
PC++
IR <- 9585
-------------------------------------------------------------------------
cycle: 43.DECODE(3).0, PC: 36, SP: 1ffc, BP: 2 MAR: 34(9585), MDR: 2 CR: 00001000
IR: DECODING (9585) Micro(10): 000100001000100110100000000010000001000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) IRimm(65505) REGR0(8188) REGR1(0) OP0(8188) MDRin(65505) 
ALUout(8188) 

Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:6, 1:0, tgt:5
ALU: 0:REGR0(1ffc) 1:REGR1(0) func: out:1ffc
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 43.DECODE(3).1, PC: 36, SP: 1ffc, BP: 2 MAR: 34(9585), MDR: 2 CR: 00001000
IR: add (9585) - (1001010110000101), Micro(10): 000100001000100110100000000010000001000000000000

Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:6, 1:0, tgt:5
ALU: 0:REGR0(1ffc) 1:REGR1(0) func: out:1ffc
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
BP <- 1ffc
MAR <- 36
PC++
IR <- 14
-------------------------------------------------------------------------
cycle: 44.DECODE(3).0, PC: 38, SP: 1ffc, BP: 1ffc MAR: 36(14), MDR: 2 CR: 00001000
IR: DECODING (14) Micro(0): 001000000000000000000000110000000000100000000000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(2) REGR1(0) OP0(2) MDRin(2) 
ALUout(2) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:4
ALU: 0:MDRout(2) 1:REGR0(0) func: out:2
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 44.DECODE(3).1, PC: 38, SP: 1ffc, BP: 1ffc MAR: 36(14), MDR: 2 CR: 00001000
IR: ldi (14) - (0000000000010100), Micro(0): 001000000000000000000000110000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:4
ALU: 0:MDRout(2) 1:REGR0(0) func: out:2
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0002
-------------------------------------------------------------------------
cycle: 44.EXECUTE(7).0, PC: 38, SP: 1ffc, BP: 1ffc MAR: 36(14), MDR: 2 CR: 00001000
IR: ldi (14) - (0000000000010100), Micro(128): 000100000000000010100000010000000000000000000000
REGWS(TGT) OP0S(MDRout) IRimm(5) MDRin(5) 

Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:2, tgt:4
ALU: 0:MDRout(2) 1:REGR0(0) func: out:2
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 44.EXECUTE(7).1, PC: 38, SP: 1ffc, BP: 1ffc MAR: 36(14), MDR: 2 CR: 00001000
IR: ldi (14) - (0000000000010100), Micro(128): 000100000000000010100000010000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:2, tgt:4
ALU: 0:MDRout(2) 1:REGR0(0) func: out:2
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
REG4 <- 2
MAR <- 38
PC++
IR <- be04
-------------------------------------------------------------------------
cycle: 45.DECODE(3).0, PC: 3a, SP: 1ffc, BP: 1ffc MAR: 38(be04), MDR: 2 CR: 00001000
IR: DECODING (be04) Micro(31): 000000100000000000000000000000000000000000000000
IRimm(1) REGR1(0) OP0(0) MDRin(1) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:4
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 45.DECODE(3).1, PC: 3a, SP: 1ffc, BP: 1ffc MAR: 38(be04), MDR: 2 CR: 00001000
IR: push (be04) - (1011111000000100), Micro(31): 000000100000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:4
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
SP--
-------------------------------------------------------------------------
cycle: 45.READ(5).0, PC: 3a, SP: 1ffa, BP: 1ffc MAR: 38(be04), MDR: 2 CR: 00001000
IR: push (be04) - (1011111000000100), Micro(95): 100000000110000000000000000010000000000000000000
MAR_LOAD REGR0S(SP) OP1S(REGR1) REGR0(8186) OP0(8186) 
ALUout(8186) 

Stable after 3 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:4
ALU: 0:REGR0(1ffa) 1:REGR1(0) func: out:1ffa
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 45.READ(5).1, PC: 3a, SP: 1ffa, BP: 1ffc MAR: 38(be04), MDR: 2 CR: 00001000
IR: push (be04) - (1011111000000100), Micro(95): 100000000110000000000000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:4
ALU: 0:REGR0(1ffa) 1:REGR1(0) func: out:1ffa
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ffa
-------------------------------------------------------------------------
cycle: 45.EXECUTE(7).0, PC: 3a, SP: 1ffa, BP: 1ffc MAR: 1ffa(2), MDR: 2 CR: 00001000
IR: push (be04) - (1011111000000100), Micro(159): 001010001010000000001000000010000000000000000000
MDR_LOAD REGR0S(TGT) MDRS(ALUout) OP1S(REGR1) REGR0(2) OP0(2) MDRin(8186) 
ALUout(2) MDRin(2) 

Stable after 3 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:4
ALU: 0:REGR0(2) 1:REGR1(0) func: out:2
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 45.EXECUTE(7).1, PC: 3a, SP: 1ffa, BP: 1ffc MAR: 1ffa(2), MDR: 2 CR: 00001000
IR: push (be04) - (1011111000000100), Micro(159): 001010001010000000001000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:4
ALU: 0:REGR0(2) 1:REGR1(0) func: out:2
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0002
RAM[1ffa] <- 2
MAR <- 3a
PC++
IR <- a279
-------------------------------------------------------------------------
cycle: 46.DECODE(3).0, PC: 3c, SP: 1ffa, BP: 1ffc MAR: 3a(a279), MDR: 2 CR: 00001000
IR: DECODING (a279) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(2) REGR1(0) OP0(0) MDRin(2) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:1, 1:7, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 46.DECODE(3).1, PC: 3c, SP: 1ffa, BP: 1ffc MAR: 3a(a279), MDR: 2 CR: 00001000
IR: addi (a279) - (1010001001111001), Micro(17): 001000000000000000000001100000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:1, 1:7, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0002
-------------------------------------------------------------------------
cycle: 46.EXECUTE(7).0, PC: 3c, SP: 1ffa, BP: 1ffc MAR: 3a(a279), MDR: 2 CR: 00001000
IR: addi (a279) - (1010001001111001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(30) REGR1(60) OP0(60) OP1(2) MDRin(30) 
ALUout(62) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:1, 1:7, tgt:1
ALU: 0:REGR1(3c) 1:MDRout(2) func: out:3e
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 46.EXECUTE(7).1, PC: 3c, SP: 1ffa, BP: 1ffc MAR: 3a(a279), MDR: 2 CR: 00001000
IR: addi (a279) - (1010001001111001), Micro(145): 000100000000100110100000001100000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:1, 1:7, tgt:1
ALU: 0:REGR1(3c) 1:MDRout(2) func: out:3e
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
REG1 <- 3e
MAR <- 3c
PC++
IR <- 3fce
-------------------------------------------------------------------------
cycle: 47.DECODE(3).0, PC: 3e, SP: 1ffa, BP: 1ffc MAR: 3c(3fce), MDR: 2 CR: 00001000
IR: DECODING (3fce) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65486) REGR1(0) OP0(0) MDRin(65486) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:1, tgt:6
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 47.DECODE(3).1, PC: 3e, SP: 1ffa, BP: 1ffc MAR: 3c(3fce), MDR: 2 CR: 00001000
IR: br (3fce) - (0011111111001110), Micro(1): 001000000000000000000001000000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:1, tgt:6
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- ffce
-------------------------------------------------------------------------
cycle: 47.EXECUTE(7).0, PC: 3e, SP: 1ffa, BP: 1ffc MAR: 3c(3fce), MDR: ffce CR: 00001000
IR: br (3fce) - (0011111111001110), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65523) REGR0(62) OP0(65486) OP1(62) MDRin(65523) 
ALUout(12) 

Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:1, tgt:6
ALU: 0:MDRout(ffce) 1:REGR0(3e) func: out:c
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
CR <- a
-------------------------------------------------------------------------
cycle: 47.EXECUTE(7).1, PC: 3e, SP: 1ffa, BP: 1ffc MAR: 3c(3fce), MDR: ffce CR: 00001010
IR: br (3fce) - (0011111111001110), Micro(129): 000100000111000001110000010000000000000000000000

Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:1, tgt:6
ALU: 0:MDRout(ffce) 1:REGR0(3e) func: out:c
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
PC <- c
MAR <- c
PC++
IR <- be01
-------------------------------------------------------------------------
cycle: 48.DECODE(3).0, PC: e, SP: 1ffa, BP: 1ffc MAR: c(be01), MDR: ffce CR: 00001010
IR: DECODING (be01) Micro(31): 000000100000000000000000000000000000000000000000
IRimm(0) REGR1(0) OP0(0) MDRin(0) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 48.DECODE(3).1, PC: e, SP: 1ffa, BP: 1ffc MAR: c(be01), MDR: ffce CR: 00001010
IR: push (be01) - (1011111000000001), Micro(31): 000000100000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
SP--
-------------------------------------------------------------------------
cycle: 48.READ(5).0, PC: e, SP: 1ff8, BP: 1ffc MAR: c(be01), MDR: ffce CR: 00001010
IR: push (be01) - (1011111000000001), Micro(95): 100000000110000000000000000010000000000000000000
MAR_LOAD REGR0S(SP) OP1S(REGR1) REGR0(8184) OP0(8184) 
ALUout(8184) 

Stable after 3 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(1ff8) 1:REGR1(0) func: out:1ff8
STACK:
1ffe 1ffc 1ffa 1ff8*1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 48.READ(5).1, PC: e, SP: 1ff8, BP: 1ffc MAR: c(be01), MDR: ffce CR: 00001010
IR: push (be01) - (1011111000000001), Micro(95): 100000000110000000000000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(1ff8) 1:REGR1(0) func: out:1ff8
STACK:
1ffe 1ffc 1ffa 1ff8*1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ff8
-------------------------------------------------------------------------
cycle: 48.EXECUTE(7).0, PC: e, SP: 1ff8, BP: 1ffc MAR: 1ff8(3e), MDR: ffce CR: 00001010
IR: push (be01) - (1011111000000001), Micro(159): 001010001010000000001000000010000000000000000000
MDR_LOAD REGR0S(TGT) MDRS(ALUout) OP1S(REGR1) REGR0(62) OP0(62) MDRin(8184) 
ALUout(62) MDRin(62) 

Stable after 3 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(3e) 1:REGR1(0) func: out:3e
STACK:
1ffe 1ffc 1ffa 1ff8*1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 48.EXECUTE(7).1, PC: e, SP: 1ff8, BP: 1ffc MAR: 1ff8(3e), MDR: ffce CR: 00001000
IR: push (be01) - (1011111000000001), Micro(159): 001010001010000000001000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(3e) 1:REGR1(0) func: out:3e
STACK:
1ffe 1ffc 1ffa 1ff8*1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 003e
RAM[1ff8] <- 3e
MAR <- e
PC++
IR <- be05
-------------------------------------------------------------------------
cycle: 49.DECODE(3).0, PC: 10, SP: 1ff8, BP: 1ffc MAR: e(be05), MDR: 3e CR: 00001000
IR: DECODING (be05) Micro(31): 000000100000000000000000000000000000000000000000
IRimm(1) REGR1(0) OP0(0) MDRin(1) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8*1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 49.DECODE(3).1, PC: 10, SP: 1ff8, BP: 1ffc MAR: e(be05), MDR: 3e CR: 00001000
IR: push (be05) - (1011111000000101), Micro(31): 000000100000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8*1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
SP--
-------------------------------------------------------------------------
cycle: 49.READ(5).0, PC: 10, SP: 1ff6, BP: 1ffc MAR: e(be05), MDR: 3e CR: 00001000
IR: push (be05) - (1011111000000101), Micro(95): 100000000110000000000000000010000000000000000000
MAR_LOAD REGR0S(SP) OP1S(REGR1) REGR0(8182) OP0(8182) 
ALUout(8182) 

Stable after 3 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(1ff6) 1:REGR1(0) func: out:1ff6
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 49.READ(5).1, PC: 10, SP: 1ff6, BP: 1ffc MAR: e(be05), MDR: 3e CR: 00001000
IR: push (be05) - (1011111000000101), Micro(95): 100000000110000000000000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(1ff6) 1:REGR1(0) func: out:1ff6
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ff6
-------------------------------------------------------------------------
cycle: 49.EXECUTE(7).0, PC: 10, SP: 1ff6, BP: 1ffc MAR: 1ff6(1ffc), MDR: 3e CR: 00001000
IR: push (be05) - (1011111000000101), Micro(159): 001010001010000000001000000010000000000000000000
MDR_LOAD REGR0S(TGT) MDRS(ALUout) OP1S(REGR1) REGR0(8188) OP0(8188) MDRin(8182) 
ALUout(8188) MDRin(8188) 

Stable after 3 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(1ffc) 1:REGR1(0) func: out:1ffc
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 49.EXECUTE(7).1, PC: 10, SP: 1ff6, BP: 1ffc MAR: 1ff6(1ffc), MDR: 3e CR: 00001000
IR: push (be05) - (1011111000000101), Micro(159): 001010001010000000001000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(1ffc) 1:REGR1(0) func: out:1ffc
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 1ffc
RAM[1ff6] <- 1ffc
MAR <- 10
PC++
IR <- 9585
-------------------------------------------------------------------------
cycle: 50.DECODE(3).0, PC: 12, SP: 1ff6, BP: 1ffc MAR: 10(9585), MDR: 1ffc CR: 00001000
IR: DECODING (9585) Micro(10): 000100001000100110100000000010000001000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) IRimm(65505) REGR0(8182) REGR1(0) OP0(8182) MDRin(65505) 
ALUout(8182) 

Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:6, 1:0, tgt:5
ALU: 0:REGR0(1ff6) 1:REGR1(0) func: out:1ff6
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 50.DECODE(3).1, PC: 12, SP: 1ff6, BP: 1ffc MAR: 10(9585), MDR: 1ffc CR: 00001000
IR: add (9585) - (1001010110000101), Micro(10): 000100001000100110100000000010000001000000000000

Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:6, 1:0, tgt:5
ALU: 0:REGR0(1ff6) 1:REGR1(0) func: out:1ff6
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
BP <- 1ff6
MAR <- 12
PC++
IR <- 34
-------------------------------------------------------------------------
cycle: 51.DECODE(3).0, PC: 14, SP: 1ff6, BP: 1ff6 MAR: 12(34), MDR: 1ffc CR: 00001000
IR: DECODING (34) Micro(0): 001000000000000000000000110000000000100000000000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(6) REGR1(0) OP0(8188) MDRin(6) 
ALUout(8188) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:6, tgt:4
ALU: 0:MDRout(1ffc) 1:REGR0(0) func: out:1ffc
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 51.DECODE(3).1, PC: 14, SP: 1ff6, BP: 1ff6 MAR: 12(34), MDR: 1ffc CR: 00001000
IR: ldi (34) - (0000000000110100), Micro(0): 001000000000000000000000110000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:6, tgt:4
ALU: 0:MDRout(1ffc) 1:REGR0(0) func: out:1ffc
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0006
-------------------------------------------------------------------------
cycle: 51.EXECUTE(7).0, PC: 14, SP: 1ff6, BP: 1ff6 MAR: 12(34), MDR: 6 CR: 00001000
IR: ldi (34) - (0000000000110100), Micro(128): 000100000000000010100000010000000000000000000000
REGWS(TGT) OP0S(MDRout) IRimm(13) MDRin(13) 

Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:6, tgt:4
ALU: 0:MDRout(6) 1:REGR0(0) func: out:6
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 51.EXECUTE(7).1, PC: 14, SP: 1ff6, BP: 1ff6 MAR: 12(34), MDR: 6 CR: 00001000
IR: ldi (34) - (0000000000110100), Micro(128): 000100000000000010100000010000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:6, tgt:4
ALU: 0:MDRout(6) 1:REGR0(0) func: out:6
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
REG4 <- 6
MAR <- 14
PC++
IR <- 97a6
-------------------------------------------------------------------------
cycle: 52.DECODE(3).0, PC: 16, SP: 1ff6, BP: 1ff6 MAR: 14(97a6), MDR: 6 CR: 00001000
IR: DECODING (97a6) Micro(11): 000100001000100110100000000010000011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(65513) REGR0(8182) REGR1(6) OP0(8182) OP1(6) MDRin(65513) 
ALUout(8176) 

Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:6, 1:4, tgt:6
ALU: 0:REGR0(1ff6) 1:REGR1(6) func: out:1ff0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 52.DECODE(3).1, PC: 16, SP: 1ff6, BP: 1ff6 MAR: 14(97a6), MDR: 6 CR: 00001000
IR: sub (97a6) - (1001011110100110), Micro(11): 000100001000100110100000000010000011000000000000

Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:6, 1:4, tgt:6
ALU: 0:REGR0(1ff6) 1:REGR1(6) func: out:1ff0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
SP <- 1ff0
MAR <- 16
PC++
IR <- 54
-------------------------------------------------------------------------
cycle: 53.DECODE(3).0, PC: 18, SP: 1ff0, BP: 1ff6 MAR: 16(54), MDR: 6 CR: 00001000
IR: DECODING (54) Micro(0): 001000000000000000000000110000000000100000000000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(10) REGR1(0) OP0(6) MDRin(10) 
ALUout(6) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:1, 1:2, tgt:4
ALU: 0:MDRout(6) 1:REGR0(0) func: out:6
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 53.DECODE(3).1, PC: 18, SP: 1ff0, BP: 1ff6 MAR: 16(54), MDR: 6 CR: 00001000
IR: ldi (54) - (0000000001010100), Micro(0): 001000000000000000000000110000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:1, 1:2, tgt:4
ALU: 0:MDRout(6) 1:REGR0(0) func: out:6
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 000a
-------------------------------------------------------------------------
cycle: 53.EXECUTE(7).0, PC: 18, SP: 1ff0, BP: 1ff6 MAR: 16(54), MDR: a CR: 00001000
IR: ldi (54) - (0000000001010100), Micro(128): 000100000000000010100000010000000000000000000000
REGWS(TGT) OP0S(MDRout) IRimm(21) MDRin(21) 

Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:1, 1:2, tgt:4
ALU: 0:MDRout(a) 1:REGR0(0) func: out:a
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 53.EXECUTE(7).1, PC: 18, SP: 1ff0, BP: 1ff6 MAR: 16(54), MDR: a CR: 00001000
IR: ldi (54) - (0000000001010100), Micro(128): 000100000000000010100000010000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:1, 1:2, tgt:4
ALU: 0:MDRout(a) 1:REGR0(0) func: out:a
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
REG4 <- a
MAR <- 18
PC++
IR <- 8deb
-------------------------------------------------------------------------
cycle: 54.DECODE(3).0, PC: 1a, SP: 1ff0, BP: 1ff6 MAR: 18(8deb), MDR: a CR: 00001000
IR: DECODING (8deb) Micro(6): 001000000000000000000000000000000000000000000000
MDR_LOAD IRimm(65530) REGR1(0) OP0(0) MDRin(65530) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:5, tgt:3
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 54.DECODE(3).1, PC: 1a, SP: 1ff0, BP: 1ff6 MAR: 18(8deb), MDR: a CR: 00001000
IR: stw s7 (8deb) - (1000110111101011), Micro(6): 001000000000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:5, tgt:3
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- fffa
-------------------------------------------------------------------------
cycle: 54.READ(5).0, PC: 1a, SP: 1ff0, BP: 1ff6 MAR: 18(8deb), MDR: fffa CR: 00001000
IR: stw s7 (8deb) - (1000110111101011), Micro(70): 100000000101000000000000010000000000000000000000
MAR_LOAD REGR0S(BP) OP0S(MDRout) REGR0(8182) OP0(65530) OP1(8182) 
ALUout(8176) 

Stable after 3 vcycles.
regfile: r0:BP, r1:REG0, w:REG0
args: 0:7, 1:5, tgt:3
ALU: 0:MDRout(fffa) 1:REGR0(1ff6) func: out:1ff0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 54.READ(5).1, PC: 1a, SP: 1ff0, BP: 1ff6 MAR: 18(8deb), MDR: fffa CR: 00001000
IR: stw s7 (8deb) - (1000110111101011), Micro(70): 100000000101000000000000010000000000000000000000

Stable after 1 vcycles.
regfile: r0:BP, r1:REG0, w:REG0
args: 0:7, 1:5, tgt:3
ALU: 0:MDRout(fffa) 1:REGR0(1ff6) func: out:1ff0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ff0
-------------------------------------------------------------------------
cycle: 54.EXECUTE(7).0, PC: 1a, SP: 1ff0, BP: 1ff6 MAR: 1ff0(a), MDR: fffa CR: 00001000
IR: stw s7 (8deb) - (1000110111101011), Micro(134): 001010001011000000001000000010000000000000000000
MDR_LOAD REGR0S(TGT2) MDRS(ALUout) OP1S(REGR1) REGR0(10) OP0(10) OP1(0) MDRin(8176) 
ALUout(10) MDRin(10) 

Stable after 3 vcycles.
regfile: r0:TGT2, r1:REG0, w:REG0
args: 0:7, 1:5, tgt:3
ALU: 0:REGR0(a) 1:REGR1(0) func: out:a
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 54.EXECUTE(7).1, PC: 1a, SP: 1ff0, BP: 1ff6 MAR: 1ff0(a), MDR: fffa CR: 00001000
IR: stw s7 (8deb) - (1000110111101011), Micro(134): 001010001011000000001000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:TGT2, r1:REG0, w:REG0
args: 0:7, 1:5, tgt:3
ALU: 0:REGR0(a) 1:REGR1(0) func: out:a
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 000a
RAM[1ff0] <- a
MAR <- 1a
PC++
IR <- 91f0
-------------------------------------------------------------------------
cycle: 55.DECODE(3).0, PC: 1c, SP: 1ff0, BP: 1ff6 MAR: 1a(91f0), MDR: a CR: 00001000
IR: DECODING (91f0) Micro(8): 001000000000000000000000000000000000000000000000
MDR_LOAD IRimm(65532) REGR1(0) OP0(0) MDRin(65532) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:6, tgt:0
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 55.DECODE(3).1, PC: 1c, SP: 1ff0, BP: 1ff6 MAR: 1a(91f0), MDR: a CR: 00001000
IR: stw0 s7 (91f0) - (1001000111110000), Micro(8): 001000000000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:6, tgt:0
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- fffc
-------------------------------------------------------------------------
cycle: 55.READ(5).0, PC: 1c, SP: 1ff0, BP: 1ff6 MAR: 1a(91f0), MDR: fffc CR: 00001000
IR: stw0 s7 (91f0) - (1001000111110000), Micro(72): 100000000101000000000000010000000000000000000000
MAR_LOAD REGR0S(BP) OP0S(MDRout) REGR0(8182) OP0(65532) OP1(8182) 
ALUout(8178) 

Stable after 3 vcycles.
regfile: r0:BP, r1:REG0, w:REG0
args: 0:7, 1:6, tgt:0
ALU: 0:MDRout(fffc) 1:REGR0(1ff6) func: out:1ff2
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 55.READ(5).1, PC: 1c, SP: 1ff0, BP: 1ff6 MAR: 1a(91f0), MDR: fffc CR: 00001000
IR: stw0 s7 (91f0) - (1001000111110000), Micro(72): 100000000101000000000000010000000000000000000000

Stable after 1 vcycles.
regfile: r0:BP, r1:REG0, w:REG0
args: 0:7, 1:6, tgt:0
ALU: 0:MDRout(fffc) 1:REGR0(1ff6) func: out:1ff2
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ff2
-------------------------------------------------------------------------
cycle: 55.EXECUTE(7).0, PC: 1c, SP: 1ff0, BP: 1ff6 MAR: 1ff2(0), MDR: fffc CR: 00001000
IR: stw0 s7 (91f0) - (1001000111110000), Micro(136): 001010000000000000001000000010000000000000000000
MDR_LOAD MDRS(ALUout) OP1S(REGR1) REGR0(0) OP0(0) OP1(0) MDRin(8178) 
ALUout(0) MDRin(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:6, tgt:0
ALU: 0:REGR0(0) 1:REGR1(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 55.EXECUTE(7).1, PC: 1c, SP: 1ff0, BP: 1ff6 MAR: 1ff2(0), MDR: fffc CR: 00001000
IR: stw0 s7 (91f0) - (1001000111110000), Micro(136): 001010000000000000001000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:6, tgt:0
ALU: 0:REGR0(0) 1:REGR1(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0000
RAM[1ff2] <- 0
MAR <- 1c
PC++
IR <- 64
-------------------------------------------------------------------------
cycle: 56.DECODE(3).0, PC: 1e, SP: 1ff0, BP: 1ff6 MAR: 1c(64), MDR: 0 CR: 00001000
IR: DECODING (64) Micro(0): 001000000000000000000000110000000000100000000000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(12) REGR1(0) OP0(0) MDRin(12) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:1, 1:4, tgt:4
ALU: 0:MDRout(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 56.DECODE(3).1, PC: 1e, SP: 1ff0, BP: 1ff6 MAR: 1c(64), MDR: 0 CR: 00001000
IR: ldi (64) - (0000000001100100), Micro(0): 001000000000000000000000110000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:1, 1:4, tgt:4
ALU: 0:MDRout(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 000c
-------------------------------------------------------------------------
cycle: 56.EXECUTE(7).0, PC: 1e, SP: 1ff0, BP: 1ff6 MAR: 1c(64), MDR: c CR: 00001000
IR: ldi (64) - (0000000001100100), Micro(128): 000100000000000010100000010000000000000000000000
REGWS(TGT) OP0S(MDRout) IRimm(25) MDRin(25) 

Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:1, 1:4, tgt:4
ALU: 0:MDRout(c) 1:REGR0(0) func: out:c
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 56.EXECUTE(7).1, PC: 1e, SP: 1ff0, BP: 1ff6 MAR: 1c(64), MDR: c CR: 00001000
IR: ldi (64) - (0000000001100100), Micro(128): 000100000000000010100000010000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:1, 1:4, tgt:4
ALU: 0:MDRout(c) 1:REGR0(0) func: out:c
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
REG4 <- c
MAR <- 1e
PC++
IR <- 8dfb
-------------------------------------------------------------------------
cycle: 57.DECODE(3).0, PC: 20, SP: 1ff0, BP: 1ff6 MAR: 1e(8dfb), MDR: c CR: 00001000
IR: DECODING (8dfb) Micro(6): 001000000000000000000000000000000000000000000000
MDR_LOAD IRimm(65534) REGR1(0) OP0(0) MDRin(65534) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:3
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 57.DECODE(3).1, PC: 20, SP: 1ff0, BP: 1ff6 MAR: 1e(8dfb), MDR: c CR: 00001000
IR: stw s7 (8dfb) - (1000110111111011), Micro(6): 001000000000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:3
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- fffe
-------------------------------------------------------------------------
cycle: 57.READ(5).0, PC: 20, SP: 1ff0, BP: 1ff6 MAR: 1e(8dfb), MDR: fffe CR: 00001000
IR: stw s7 (8dfb) - (1000110111111011), Micro(70): 100000000101000000000000010000000000000000000000
MAR_LOAD REGR0S(BP) OP0S(MDRout) REGR0(8182) OP0(65534) OP1(8182) 
ALUout(8180) 

Stable after 3 vcycles.
regfile: r0:BP, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:3
ALU: 0:MDRout(fffe) 1:REGR0(1ff6) func: out:1ff4
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 57.READ(5).1, PC: 20, SP: 1ff0, BP: 1ff6 MAR: 1e(8dfb), MDR: fffe CR: 00001000
IR: stw s7 (8dfb) - (1000110111111011), Micro(70): 100000000101000000000000010000000000000000000000

Stable after 1 vcycles.
regfile: r0:BP, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:3
ALU: 0:MDRout(fffe) 1:REGR0(1ff6) func: out:1ff4
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ff4
-------------------------------------------------------------------------
cycle: 57.EXECUTE(7).0, PC: 20, SP: 1ff0, BP: 1ff6 MAR: 1ff4(c), MDR: fffe CR: 00001000
IR: stw s7 (8dfb) - (1000110111111011), Micro(134): 001010001011000000001000000010000000000000000000
MDR_LOAD REGR0S(TGT2) MDRS(ALUout) OP1S(REGR1) REGR0(12) OP0(12) OP1(0) MDRin(8180) 
ALUout(12) MDRin(12) 

Stable after 3 vcycles.
regfile: r0:TGT2, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:3
ALU: 0:REGR0(c) 1:REGR1(0) func: out:c
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 57.EXECUTE(7).1, PC: 20, SP: 1ff0, BP: 1ff6 MAR: 1ff4(c), MDR: fffe CR: 00001000
IR: stw s7 (8dfb) - (1000110111111011), Micro(134): 001010001011000000001000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:TGT2, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:3
ALU: 0:REGR0(c) 1:REGR1(0) func: out:c
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 000c
RAM[1ff4] <- c
MAR <- 20
PC++
IR <- 8813
-------------------------------------------------------------------------
cycle: 58.DECODE(3).0, PC: 22, SP: 1ff0, BP: 1ff6 MAR: 20(8813), MDR: c CR: 00001000
IR: DECODING (8813) Micro(4): 001000000000000000000000000000000000000000000000
MDR_LOAD IRimm(4) REGR1(0) OP0(0) MDRin(4) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:3
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 58.DECODE(3).1, PC: 22, SP: 1ff0, BP: 1ff6 MAR: 20(8813), MDR: c CR: 00001000
IR: ldw s7 (8813) - (1000100000010011), Micro(4): 001000000000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:3
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0004
-------------------------------------------------------------------------
cycle: 58.READ(5).0, PC: 22, SP: 1ff0, BP: 1ff6 MAR: 20(8813), MDR: 4 CR: 00001000
IR: ldw s7 (8813) - (1000100000010011), Micro(68): 100000000101000000000000010000000000000000000000
MAR_LOAD REGR0S(BP) OP0S(MDRout) REGR0(8182) OP0(4) OP1(8182) 
ALUout(8186) 

Stable after 3 vcycles.
regfile: r0:BP, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:3
ALU: 0:MDRout(4) 1:REGR0(1ff6) func: out:1ffa
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 58.READ(5).1, PC: 22, SP: 1ff0, BP: 1ff6 MAR: 20(8813), MDR: 4 CR: 00001000
IR: ldw s7 (8813) - (1000100000010011), Micro(68): 100000000101000000000000010000000000000000000000

Stable after 1 vcycles.
regfile: r0:BP, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:3
ALU: 0:MDRout(4) 1:REGR0(1ff6) func: out:1ffa
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ffa
-------------------------------------------------------------------------
cycle: 58.EXECUTE(7).0, PC: 22, SP: 1ff0, BP: 1ff6 MAR: 1ffa(2), MDR: 4 CR: 00001000
IR: ldw s7 (8813) - (1000100000010011), Micro(132): 001100000000000010110100010000000000000000000000
MDR_LOAD REGWS(TGT2) MDRS(RAMout) OP0S(MDRout) REGR0(0) OP1(0) MDRin(2) 
ALUout(4) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT2
args: 0:0, 1:2, tgt:3
ALU: 0:MDRout(4) 1:REGR0(0) func: out:4
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 58.EXECUTE(7).1, PC: 22, SP: 1ff0, BP: 1ff6 MAR: 1ffa(2), MDR: 4 CR: 00001000
IR: ldw s7 (8813) - (1000100000010011), Micro(132): 001100000000000010110100010000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT2
args: 0:0, 1:2, tgt:3
ALU: 0:MDRout(4) 1:REGR0(0) func: out:4
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0002
REG4 <- 2
MAR <- 22
PC++
IR <- b813
-------------------------------------------------------------------------
cycle: 59.DECODE(3).0, PC: 24, SP: 1ff0, BP: 1ff6 MAR: 22(b813), MDR: 2 CR: 00001000
IR: DECODING (b813) Micro(28): 001000000000000000000010100000000000000000000000
MDR_LOAD IMMS(IMM4) IRimm(0) REGR1(0) OP0(0) MDRin(0) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:3
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 59.DECODE(3).1, PC: 24, SP: 1ff0, BP: 1ff6 MAR: 22(b813), MDR: 2 CR: 00001000
IR: shl (b813) - (1011100000010011), Micro(28): 001000000000000000000010100000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:3
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0000
-------------------------------------------------------------------------
cycle: 59.READ(5).0, PC: 24, SP: 1ff0, BP: 1ff6 MAR: 22(b813), MDR: 0 CR: 00001000
IR: shl (b813) - (1011100000010011), Micro(92): 000000000000000000000000000000000000000000000000
IRimm(4) MDRin(4) 

Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:3
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 59.READ(5).1, PC: 24, SP: 1ff0, BP: 1ff6 MAR: 22(b813), MDR: 0 CR: 00001000
IR: shl (b813) - (1011100000010011), Micro(92): 000000000000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:3
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 59.EXECUTE(7).0, PC: 24, SP: 1ff0, BP: 1ff6 MAR: 22(b813), MDR: 0 CR: 00001000
IR: shl (b813) - (1011100000010011), Micro(156): 000100001100000010110000000100001000000000000000
REGR0S(ARG2) REGWS(TGT2) OP1S(MDRout) ALUS(EQ) REGR0(2) OP0(2) 
ALUout(4) 

Stable after 3 vcycles.
regfile: r0:ARG2, r1:REG0, w:TGT2
args: 0:0, 1:2, tgt:3
ALU: 0:REGR0(2) 1:MDRout(0) func: out:4
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 59.EXECUTE(7).1, PC: 24, SP: 1ff0, BP: 1ff6 MAR: 22(b813), MDR: 0 CR: 00001000
IR: shl (b813) - (1011100000010011), Micro(156): 000100001100000010110000000100001000000000000000

Stable after 1 vcycles.
regfile: r0:ARG2, r1:REG0, w:TGT2
args: 0:0, 1:2, tgt:3
ALU: 0:REGR0(2) 1:MDRout(0) func: out:4
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
REG4 <- 4
MAR <- 24
PC++
IR <- 1fd3
-------------------------------------------------------------------------
cycle: 60.DECODE(3).0, PC: 26, SP: 1ff0, BP: 1ff6 MAR: 24(1fd3), MDR: 0 CR: 00001000
IR: DECODING (1fd3) Micro(0): 001000000000000000000000110000000000100000000000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(65530) REGR1(0) OP0(0) MDRin(65530) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:2, tgt:3
ALU: 0:MDRout(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 60.DECODE(3).1, PC: 26, SP: 1ff0, BP: 1ff6 MAR: 24(1fd3), MDR: 0 CR: 00001000
IR: ldi (1fd3) - (0001111111010011), Micro(0): 001000000000000000000000110000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:2, tgt:3
ALU: 0:MDRout(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- fffa
-------------------------------------------------------------------------
cycle: 60.EXECUTE(7).0, PC: 26, SP: 1ff0, BP: 1ff6 MAR: 24(1fd3), MDR: fffa CR: 00001000
IR: ldi (1fd3) - (0001111111010011), Micro(128): 000100000000000010100000010000000000000000000000
REGWS(TGT) OP0S(MDRout) IRimm(65524) MDRin(65524) 

Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:7, 1:2, tgt:3
ALU: 0:MDRout(fffa) 1:REGR0(0) func: out:fffa
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 60.EXECUTE(7).1, PC: 26, SP: 1ff0, BP: 1ff6 MAR: 24(1fd3), MDR: fffa CR: 00001000
IR: ldi (1fd3) - (0001111111010011), Micro(128): 000100000000000010100000010000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:7, 1:2, tgt:3
ALU: 0:MDRout(fffa) 1:REGR0(0) func: out:fffa
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
REG3 <- fffa
MAR <- 26
PC++
IR <- 94eb
-------------------------------------------------------------------------
cycle: 61.DECODE(3).0, PC: 28, SP: 1ff0, BP: 1ff6 MAR: 26(94eb), MDR: fffa CR: 00001000
IR: DECODING (94eb) Micro(10): 000100001000100110100000000010000001000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) IRimm(58) REGR0(65530) REGR1(8182) OP0(65530) OP1(8182) MDRin(58) 
ALUout(8176) 

Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:3, 1:5, tgt:3
ALU: 0:REGR0(fffa) 1:REGR1(1ff6) func: out:1ff0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 61.DECODE(3).1, PC: 28, SP: 1ff0, BP: 1ff6 MAR: 26(94eb), MDR: fffa CR: 00001000
IR: add (94eb) - (1001010011101011), Micro(10): 000100001000100110100000000010000001000000000000

Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:3, 1:5, tgt:3
ALU: 0:REGR0(fffa) 1:REGR1(1ff6) func: out:1ff0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
REG3 <- 1ff0
MAR <- 28
PC++
IR <- b119
-------------------------------------------------------------------------
cycle: 62.DECODE(3).0, PC: 2a, SP: 1ff0, BP: 1ff6 MAR: 28(b119), MDR: fffa CR: 00001000
IR: DECODING (b119) Micro(24): 000000000000000000000000000000000000000000000000
IRimm(65478) REGR1(0) OP0(0) MDRin(65478) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:4, 1:3, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 62.DECODE(3).1, PC: 2a, SP: 1ff0, BP: 1ff6 MAR: 28(b119), MDR: fffa CR: 00001000
IR: ldw.b (b119) - (1011000100011001), Micro(24): 000000000000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:4, 1:3, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 62.READ(5).0, PC: 2a, SP: 1ff0, BP: 1ff6 MAR: 28(b119), MDR: fffa CR: 00001000
IR: ldw.b (b119) - (1011000100011001), Micro(88): 100000001000100100000000000010000000000000000000
MAR_LOAD REGR0S(ARG0) REGR1S(ARG1) OP1S(REGR1) REGR0(4) REGR1(8176) OP0(4) OP1(8176) 
ALUout(8180) 

Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:REG0
args: 0:4, 1:3, tgt:1
ALU: 0:REGR0(4) 1:REGR1(1ff0) func: out:1ff4
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 62.READ(5).1, PC: 2a, SP: 1ff0, BP: 1ff6 MAR: 28(b119), MDR: fffa CR: 00001000
IR: ldw.b (b119) - (1011000100011001), Micro(88): 100000001000100100000000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:REG0
args: 0:4, 1:3, tgt:1
ALU: 0:REGR0(4) 1:REGR1(1ff0) func: out:1ff4
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ff4
-------------------------------------------------------------------------
cycle: 62.EXECUTE(7).0, PC: 2a, SP: 1ff0, BP: 1ff6 MAR: 1ff4(c), MDR: fffa CR: 00001000
IR: ldw.b (b119) - (1011000100011001), Micro(152): 001100000000000010100100010000000000000000000000
MDR_LOAD REGWS(TGT) MDRS(RAMout) OP0S(MDRout) REGR0(0) REGR1(0) OP0(65530) OP1(0) MDRin(12) 
ALUout(65530) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:4, 1:3, tgt:1
ALU: 0:MDRout(fffa) 1:REGR0(0) func: out:fffa
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 62.EXECUTE(7).1, PC: 2a, SP: 1ff0, BP: 1ff6 MAR: 1ff4(c), MDR: fffa CR: 00001000
IR: ldw.b (b119) - (1011000100011001), Micro(152): 001100000000000010100100010000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:4, 1:3, tgt:1
ALU: 0:MDRout(fffa) 1:REGR0(0) func: out:fffa
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 000c
REG1 <- c
MAR <- 2a
PC++
IR <- 9546
-------------------------------------------------------------------------
cycle: 63.DECODE(3).0, PC: 2c, SP: 1ff0, BP: 1ff6 MAR: 2a(9546), MDR: c CR: 00001000
IR: DECODING (9546) Micro(10): 000100001000100110100000000010000001000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) IRimm(65489) REGR0(8182) REGR1(0) OP0(8182) MDRin(65489) 
ALUout(8182) 

Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:5, 1:0, tgt:6
ALU: 0:REGR0(1ff6) 1:REGR1(0) func: out:1ff6
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 63.DECODE(3).1, PC: 2c, SP: 1ff0, BP: 1ff6 MAR: 2a(9546), MDR: c CR: 00001000
IR: add (9546) - (1001010101000110), Micro(10): 000100001000100110100000000010000001000000000000

Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:5, 1:0, tgt:6
ALU: 0:REGR0(1ff6) 1:REGR1(0) func: out:1ff6
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
SP <- 1ff6
MAR <- 2c
PC++
IR <- c005
-------------------------------------------------------------------------
cycle: 64.DECODE(3).0, PC: 2e, SP: 1ff6, BP: 1ff6 MAR: 2c(c005), MDR: c CR: 00001000
IR: DECODING (c005) Micro(32): 000000000000000000000000000000000000000000000000
IRimm(1) REGR1(0) OP0(0) MDRin(1) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 64.DECODE(3).1, PC: 2e, SP: 1ff6, BP: 1ff6 MAR: 2c(c005), MDR: c CR: 00001000
IR: pop (c005) - (1100000000000101), Micro(32): 000000000000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 64.READ(5).0, PC: 2e, SP: 1ff6, BP: 1ff6 MAR: 2c(c005), MDR: c CR: 00001000
IR: pop (c005) - (1100000000000101), Micro(96): 100000000110000000000000000010000000000000000000
MAR_LOAD REGR0S(SP) OP1S(REGR1) REGR0(8182) OP0(8182) 
ALUout(8182) 

Stable after 3 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(1ff6) 1:REGR1(0) func: out:1ff6
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 64.READ(5).1, PC: 2e, SP: 1ff6, BP: 1ff6 MAR: 2c(c005), MDR: c CR: 00001000
IR: pop (c005) - (1100000000000101), Micro(96): 100000000110000000000000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(1ff6) 1:REGR1(0) func: out:1ff6
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ff6
-------------------------------------------------------------------------
cycle: 64.EXECUTE(7).0, PC: 2e, SP: 1ff6, BP: 1ff6 MAR: 1ff6(1ffc), MDR: c CR: 00001000
IR: pop (c005) - (1100000000000101), Micro(160): 001100000000000010100100010000000000010000000000
MDR_LOAD REGWS(TGT) MDRS(RAMout) OP0S(MDRout) REGR0(0) OP0(12) MDRin(8188) 
ALUout(12) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:5
ALU: 0:MDRout(c) 1:REGR0(0) func: out:c
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 64.EXECUTE(7).1, PC: 2e, SP: 1ff6, BP: 1ff6 MAR: 1ff6(1ffc), MDR: c CR: 00001000
IR: pop (c005) - (1100000000000101), Micro(160): 001100000000000010100100010000000000010000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:5
ALU: 0:MDRout(c) 1:REGR0(0) func: out:c
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 1ffc
BP <- 1ffc
SP++
MAR <- 2e
PC++
IR <- c007
-------------------------------------------------------------------------
cycle: 65.DECODE(3).0, PC: 30, SP: 1ff8, BP: 1ffc MAR: 2e(c007), MDR: 1ffc CR: 00001000
IR: DECODING (c007) Micro(32): 000000000000000000000000000000000000000000000000
REGR1(0) OP0(0) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:7
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8*1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 65.DECODE(3).1, PC: 30, SP: 1ff8, BP: 1ffc MAR: 2e(c007), MDR: 1ffc CR: 00001000
IR: pop (c007) - (1100000000000111), Micro(32): 000000000000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:7
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8*1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 65.READ(5).0, PC: 30, SP: 1ff8, BP: 1ffc MAR: 2e(c007), MDR: 1ffc CR: 00001000
IR: pop (c007) - (1100000000000111), Micro(96): 100000000110000000000000000010000000000000000000
MAR_LOAD REGR0S(SP) OP1S(REGR1) REGR0(8184) OP0(8184) 
ALUout(8184) 

Stable after 3 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:7
ALU: 0:REGR0(1ff8) 1:REGR1(0) func: out:1ff8
STACK:
1ffe 1ffc 1ffa 1ff8*1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 65.READ(5).1, PC: 30, SP: 1ff8, BP: 1ffc MAR: 2e(c007), MDR: 1ffc CR: 00001000
IR: pop (c007) - (1100000000000111), Micro(96): 100000000110000000000000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:7
ALU: 0:REGR0(1ff8) 1:REGR1(0) func: out:1ff8
STACK:
1ffe 1ffc 1ffa 1ff8*1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ff8
-------------------------------------------------------------------------
cycle: 65.EXECUTE(7).0, PC: 30, SP: 1ff8, BP: 1ffc MAR: 1ff8(3e), MDR: 1ffc CR: 00001000
IR: pop (c007) - (1100000000000111), Micro(160): 001100000000000010100100010000000000010000000000
MDR_LOAD REGWS(TGT) MDRS(RAMout) OP0S(MDRout) REGR0(0) OP0(8188) MDRin(62) 
ALUout(8188) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:7
ALU: 0:MDRout(1ffc) 1:REGR0(0) func: out:1ffc
STACK:
1ffe 1ffc 1ffa 1ff8*1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 65.EXECUTE(7).1, PC: 30, SP: 1ff8, BP: 1ffc MAR: 1ff8(3e), MDR: 1ffc CR: 00001000
IR: pop (c007) - (1100000000000111), Micro(160): 001100000000000010100100010000000000010000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:7
ALU: 0:MDRout(1ffc) 1:REGR0(0) func: out:1ffc
STACK:
1ffe 1ffc 1ffa 1ff8*1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 003e
PC <- 3e
SP++
MAR <- 3e
PC++
IR <- 3
-------------------------------------------------------------------------
cycle: 66.DECODE(3).0, PC: 40, SP: 1ffa, BP: 1ffc MAR: 3e(3), MDR: 3e CR: 00001000
IR: DECODING (3) Micro(0): 001000000000000000000000110000000000100000000000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(0) REGR1(0) MDRin(0) 

Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:3
ALU: 0:MDRout(3e) 1:REGR0(0) func: out:3e
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 66.DECODE(3).1, PC: 40, SP: 1ffa, BP: 1ffc MAR: 3e(3), MDR: 3e CR: 00001000
IR: ldi (3) - (0000000000000011), Micro(0): 001000000000000000000000110000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:3
ALU: 0:MDRout(3e) 1:REGR0(0) func: out:3e
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0000
-------------------------------------------------------------------------
cycle: 66.EXECUTE(7).0, PC: 40, SP: 1ffa, BP: 1ffc MAR: 3e(3), MDR: 0 CR: 00001000
IR: ldi (3) - (0000000000000011), Micro(128): 000100000000000010100000010000000000000000000000
REGWS(TGT) OP0S(MDRout) 

Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:3
ALU: 0:MDRout(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 66.EXECUTE(7).1, PC: 40, SP: 1ffa, BP: 1ffc MAR: 3e(3), MDR: 0 CR: 00001000
IR: ldi (3) - (0000000000000011), Micro(128): 000100000000000010100000010000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:3
ALU: 0:MDRout(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
REG3 <- 0
MAR <- 40
PC++
IR <- bc22
-------------------------------------------------------------------------
cycle: 67.DECODE(3).0, PC: 42, SP: 1ffa, BP: 1ffc MAR: 40(bc22), MDR: 0 CR: 00001000
IR: DECODING (bc22) Micro(30): 001000000000000000000010000000000000100000000000
MDR_LOAD IMMS(IMM7u) IRimm(8) REGR1(0) OP0(0) MDRin(8) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:4, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 67.DECODE(3).1, PC: 42, SP: 1ffa, BP: 1ffc MAR: 40(bc22), MDR: 0 CR: 00001000
IR: addhi (bc22) - (1011110000100010), Micro(30): 001000000000000000000010000000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:4, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0008
-------------------------------------------------------------------------
cycle: 67.EXECUTE(7).0, PC: 42, SP: 1ffa, BP: 1ffc MAR: 40(bc22), MDR: 8 CR: 00001000
IR: addhi (bc22) - (1011110000100010), Micro(158): 000100000000101110110000010010001100000000000000
REGR1S(TGT2) REGWS(TGT2) OP0S(MDRout) OP1S(REGR1) ALUS(LT) OP0(8) 
ALUout(4096) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:TGT2, w:TGT2
args: 0:0, 1:4, tgt:2
ALU: 0:MDRout(8) 1:REGR1(0) func: out:1000
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 67.EXECUTE(7).1, PC: 42, SP: 1ffa, BP: 1ffc MAR: 40(bc22), MDR: 8 CR: 00001000
IR: addhi (bc22) - (1011110000100010), Micro(158): 000100000000101110110000010010001100000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:TGT2, w:TGT2
args: 0:0, 1:4, tgt:2
ALU: 0:MDRout(8) 1:REGR1(0) func: out:1000
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
REG3 <- 1000
MAR <- 42
PC++
IR <- b419
-------------------------------------------------------------------------
cycle: 68.DECODE(3).0, PC: 44, SP: 1ffa, BP: 1ffc MAR: 42(b419), MDR: 8 CR: 00001000
IR: DECODING (b419) Micro(26): 000000000000000000000000000000000000000000000000
IRimm(6) REGR1(0) OP0(0) MDRin(6) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:3, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 68.DECODE(3).1, PC: 44, SP: 1ffa, BP: 1ffc MAR: 42(b419), MDR: 8 CR: 00001000
IR: stw.b (b419) - (1011010000011001), Micro(26): 000000000000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:3, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 68.READ(5).0, PC: 44, SP: 1ffa, BP: 1ffc MAR: 42(b419), MDR: 8 CR: 00001000
IR: stw.b (b419) - (1011010000011001), Micro(90): 100000001000100100000000000010000000000000000000
MAR_LOAD REGR0S(ARG0) REGR1S(ARG1) OP1S(REGR1) REGR1(4096) OP1(4096) 
ALUout(4096) 

Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:REG0
args: 0:0, 1:3, tgt:1
ALU: 0:REGR0(0) 1:REGR1(1000) func: out:1000
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 68.READ(5).1, PC: 44, SP: 1ffa, BP: 1ffc MAR: 42(b419), MDR: 8 CR: 00001000
IR: stw.b (b419) - (1011010000011001), Micro(90): 100000001000100100000000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:REG0
args: 0:0, 1:3, tgt:1
ALU: 0:REGR0(0) 1:REGR1(1000) func: out:1000
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1000
-------------------------------------------------------------------------
cycle: 68.EXECUTE(7).0, PC: 44, SP: 1ffa, BP: 1ffc MAR: 1000(c), MDR: 8 CR: 00001000
IR: stw.b (b419) - (1011010000011001), Micro(154): 001010001010000000001000000010000000000000000000
MDR_LOAD REGR0S(TGT) MDRS(ALUout) OP1S(REGR1) REGR0(12) REGR1(0) OP0(12) OP1(0) MDRin(4096) 
ALUout(12) MDRin(12) 

Stable after 3 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:3, tgt:1
ALU: 0:REGR0(c) 1:REGR1(0) func: out:c
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 68.EXECUTE(7).1, PC: 44, SP: 1ffa, BP: 1ffc MAR: 1000(c), MDR: 8 CR: 00001000
IR: stw.b (b419) - (1011010000011001), Micro(154): 001010001010000000001000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:3, tgt:1
ALU: 0:REGR0(c) 1:REGR1(0) func: out:c
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 000c
RAM[1000] <- c
MAR <- 44
PC++
IR <- 9401
-------------------------------------------------------------------------
cycle: 69.DECODE(3).0, PC: 46, SP: 1ffa, BP: 1ffc MAR: 44(9401), MDR: c CR: 00001000
IR: DECODING (9401) Micro(10): 000100001000100110100000000010000001000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) IRimm(0) REGR1(0) OP0(0) MDRin(0) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(0) 1:REGR1(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 69.DECODE(3).1, PC: 46, SP: 1ffa, BP: 1ffc MAR: 44(9401), MDR: c CR: 00001000
IR: add (9401) - (1001010000000001), Micro(10): 000100001000100110100000000010000001000000000000

Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(0) 1:REGR1(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
REG1 <- 0
MAR <- 46
PC++
IR <- c005
-------------------------------------------------------------------------
cycle: 70.DECODE(3).0, PC: 48, SP: 1ffa, BP: 1ffc MAR: 46(c005), MDR: c CR: 00001000
IR: DECODING (c005) Micro(32): 000000000000000000000000000000000000000000000000
IRimm(1) REGR1(0) OP0(0) MDRin(1) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 70.DECODE(3).1, PC: 48, SP: 1ffa, BP: 1ffc MAR: 46(c005), MDR: c CR: 00001000
IR: pop (c005) - (1100000000000101), Micro(32): 000000000000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 70.READ(5).0, PC: 48, SP: 1ffa, BP: 1ffc MAR: 46(c005), MDR: c CR: 00001000
IR: pop (c005) - (1100000000000101), Micro(96): 100000000110000000000000000010000000000000000000
MAR_LOAD REGR0S(SP) OP1S(REGR1) REGR0(8186) OP0(8186) 
ALUout(8186) 

Stable after 3 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(1ffa) 1:REGR1(0) func: out:1ffa
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 70.READ(5).1, PC: 48, SP: 1ffa, BP: 1ffc MAR: 46(c005), MDR: c CR: 00001000
IR: pop (c005) - (1100000000000101), Micro(96): 100000000110000000000000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(1ffa) 1:REGR1(0) func: out:1ffa
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ffa
-------------------------------------------------------------------------
cycle: 70.EXECUTE(7).0, PC: 48, SP: 1ffa, BP: 1ffc MAR: 1ffa(2), MDR: c CR: 00001000
IR: pop (c005) - (1100000000000101), Micro(160): 001100000000000010100100010000000000010000000000
MDR_LOAD REGWS(TGT) MDRS(RAMout) OP0S(MDRout) REGR0(0) OP0(12) MDRin(2) 
ALUout(12) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:5
ALU: 0:MDRout(c) 1:REGR0(0) func: out:c
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 70.EXECUTE(7).1, PC: 48, SP: 1ffa, BP: 1ffc MAR: 1ffa(2), MDR: c CR: 00001000
IR: pop (c005) - (1100000000000101), Micro(160): 001100000000000010100100010000000000010000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:5
ALU: 0:MDRout(c) 1:REGR0(0) func: out:c
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0002
BP <- 2
SP++
MAR <- 48
PC++
IR <- c007
-------------------------------------------------------------------------
cycle: 71.DECODE(3).0, PC: 4a, SP: 1ffc, BP: 2 MAR: 48(c007), MDR: 2 CR: 00001000
IR: DECODING (c007) Micro(32): 000000000000000000000000000000000000000000000000
REGR1(0) OP0(0) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:7
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 71.DECODE(3).1, PC: 4a, SP: 1ffc, BP: 2 MAR: 48(c007), MDR: 2 CR: 00001000
IR: pop (c007) - (1100000000000111), Micro(32): 000000000000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:7
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 71.READ(5).0, PC: 4a, SP: 1ffc, BP: 2 MAR: 48(c007), MDR: 2 CR: 00001000
IR: pop (c007) - (1100000000000111), Micro(96): 100000000110000000000000000010000000000000000000
MAR_LOAD REGR0S(SP) OP1S(REGR1) REGR0(8188) OP0(8188) 
ALUout(8188) 

Stable after 3 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:7
ALU: 0:REGR0(1ffc) 1:REGR1(0) func: out:1ffc
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 71.READ(5).1, PC: 4a, SP: 1ffc, BP: 2 MAR: 48(c007), MDR: 2 CR: 00001000
IR: pop (c007) - (1100000000000111), Micro(96): 100000000110000000000000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:7
ALU: 0:REGR0(1ffc) 1:REGR1(0) func: out:1ffc
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ffc
-------------------------------------------------------------------------
cycle: 71.EXECUTE(7).0, PC: 4a, SP: 1ffc, BP: 2 MAR: 1ffc(2), MDR: 2 CR: 00001000
IR: pop (c007) - (1100000000000111), Micro(160): 001100000000000010100100010000000000010000000000
MDR_LOAD REGWS(TGT) MDRS(RAMout) OP0S(MDRout) REGR0(0) OP0(2) MDRin(2) 
ALUout(2) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:7
ALU: 0:MDRout(2) 1:REGR0(0) func: out:2
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 71.EXECUTE(7).1, PC: 4a, SP: 1ffc, BP: 2 MAR: 1ffc(2), MDR: 2 CR: 00001000
IR: pop (c007) - (1100000000000111), Micro(160): 001100000000000010100100010000000000010000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:7
ALU: 0:MDRout(2) 1:REGR0(0) func: out:2
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0002
PC <- 2
SP++
MAR <- 2
PC++
IR <- bc40
-------------------------------------------------------------------------
cycle: 72.DECODE(3).0, PC: 4, SP: 1ffe, BP: 2 MAR: 2(bc40), MDR: 2 CR: 00001000
IR: DECODING (bc40) Micro(30): 001000000000000000000010000000000000100000000000
MDR_LOAD IMMS(IMM7u) IRimm(16) REGR1(0) OP0(0) MDRin(16) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:1, 1:0, tgt:0
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 72.DECODE(3).1, PC: 4, SP: 1ffe, BP: 2 MAR: 2(bc40), MDR: 2 CR: 00001000
IR: addhi (bc40) - (1011110001000000), Micro(30): 001000000000000000000010000000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:1, 1:0, tgt:0
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0010
-------------------------------------------------------------------------
cycle: 72.EXECUTE(7).0, PC: 4, SP: 1ffe, BP: 2 MAR: 2(bc40), MDR: 10 CR: 00001000
IR: addhi (bc40) - (1011110001000000), Micro(158): 000100000000101110110000010010001100000000000000
REGR1S(TGT2) REGWS(TGT2) OP0S(MDRout) OP1S(REGR1) ALUS(LT) OP0(16) 
ALUout(8192) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:TGT2, w:TGT2
args: 0:1, 1:0, tgt:0
ALU: 0:MDRout(10) 1:REGR1(0) func: out:2000
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 72.EXECUTE(7).1, PC: 4, SP: 1ffe, BP: 2 MAR: 2(bc40), MDR: 10 CR: 00001000
IR: addhi (bc40) - (1011110001000000), Micro(158): 000100000000101110110000010010001100000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:TGT2, w:TGT2
args: 0:1, 1:0, tgt:0
ALU: 0:MDRout(10) 1:REGR1(0) func: out:2000
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
REG1 <- 2000
MAR <- 4
PC++
IR <- 9446
-------------------------------------------------------------------------
cycle: 73.DECODE(3).0, PC: 6, SP: 1ffe, BP: 2 MAR: 4(9446), MDR: 10 CR: 00001000
IR: DECODING (9446) Micro(10): 000100001000100110100000000010000001000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) IRimm(17) REGR0(8192) REGR1(0) OP0(8192) MDRin(17) 
ALUout(8192) 

Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:0, tgt:6
ALU: 0:REGR0(2000) 1:REGR1(0) func: out:2000
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 73.DECODE(3).1, PC: 6, SP: 1ffe, BP: 2 MAR: 4(9446), MDR: 10 CR: 00001000
IR: add (9446) - (1001010001000110), Micro(10): 000100001000100110100000000010000001000000000000

Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:0, tgt:6
ALU: 0:REGR0(2000) 1:REGR1(0) func: out:2000
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
SP <- 2000
MAR <- 6
PC++
IR <- a279
-------------------------------------------------------------------------
cycle: 74.DECODE(3).0, PC: 8, SP: 2000, BP: 2 MAR: 6(a279), MDR: 10 CR: 00001000
IR: DECODING (a279) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(2) REGR1(0) OP0(0) MDRin(2) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:1, 1:7, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 74.DECODE(3).1, PC: 8, SP: 2000, BP: 2 MAR: 6(a279), MDR: 10 CR: 00001000
IR: addi (a279) - (1010001001111001), Micro(17): 001000000000000000000001100000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:1, 1:7, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0002
-------------------------------------------------------------------------
cycle: 74.EXECUTE(7).0, PC: 8, SP: 2000, BP: 2 MAR: 6(a279), MDR: 2 CR: 00001000
IR: addi (a279) - (1010001001111001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(30) REGR1(8) OP0(8) OP1(2) MDRin(30) 
ALUout(10) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:1, 1:7, tgt:1
ALU: 0:REGR1(8) 1:MDRout(2) func: out:a
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 74.EXECUTE(7).1, PC: 8, SP: 2000, BP: 2 MAR: 6(a279), MDR: 2 CR: 00001000
IR: addi (a279) - (1010001001111001), Micro(145): 000100000000100110100000001100000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:1, 1:7, tgt:1
ALU: 0:REGR1(8) 1:MDRout(2) func: out:a
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
REG1 <- a
MAR <- 8
PC++
IR <- 2026
-------------------------------------------------------------------------
cycle: 75.DECODE(3).0, PC: a, SP: 2000, BP: 2 MAR: 8(2026), MDR: 2 CR: 00001000
IR: DECODING (2026) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(38) REGR1(0) OP0(0) MDRin(38) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:4, tgt:6
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 75.DECODE(3).1, PC: a, SP: 2000, BP: 2 MAR: 8(2026), MDR: 2 CR: 00001000
IR: br (2026) - (0010000000100110), Micro(1): 001000000000000000000001000000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:4, tgt:6
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0026
-------------------------------------------------------------------------
cycle: 75.EXECUTE(7).0, PC: a, SP: 2000, BP: 2 MAR: 8(2026), MDR: 26 CR: 00001000
IR: br (2026) - (0010000000100110), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(9) REGR0(10) OP0(38) OP1(10) MDRin(9) 
ALUout(48) 

Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:0, 1:4, tgt:6
ALU: 0:MDRout(26) 1:REGR0(a) func: out:30
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 75.EXECUTE(7).1, PC: a, SP: 2000, BP: 2 MAR: 8(2026), MDR: 26 CR: 00001000
IR: br (2026) - (0010000000100110), Micro(129): 000100000111000001110000010000000000000000000000

Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:0, 1:4, tgt:6
ALU: 0:MDRout(26) 1:REGR0(a) func: out:30
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
PC <- 30
MAR <- 30
PC++
IR <- be01
-------------------------------------------------------------------------
cycle: 76.DECODE(3).0, PC: 32, SP: 2000, BP: 2 MAR: 30(be01), MDR: 26 CR: 00001000
IR: DECODING (be01) Micro(31): 000000100000000000000000000000000000000000000000
IRimm(0) REGR1(0) OP0(0) MDRin(0) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 76.DECODE(3).1, PC: 32, SP: 2000, BP: 2 MAR: 30(be01), MDR: 26 CR: 00001000
IR: push (be01) - (1011111000000001), Micro(31): 000000100000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
SP--
-------------------------------------------------------------------------
cycle: 76.READ(5).0, PC: 32, SP: 1ffe, BP: 2 MAR: 30(be01), MDR: 26 CR: 00001000
IR: push (be01) - (1011111000000001), Micro(95): 100000000110000000000000000010000000000000000000
MAR_LOAD REGR0S(SP) OP1S(REGR1) REGR0(8190) OP0(8190) 
ALUout(8190) 

Stable after 3 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(1ffe) 1:REGR1(0) func: out:1ffe
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 76.READ(5).1, PC: 32, SP: 1ffe, BP: 2 MAR: 30(be01), MDR: 26 CR: 00001000
IR: push (be01) - (1011111000000001), Micro(95): 100000000110000000000000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(1ffe) 1:REGR1(0) func: out:1ffe
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ffe
-------------------------------------------------------------------------
cycle: 76.EXECUTE(7).0, PC: 32, SP: 1ffe, BP: 2 MAR: 1ffe(a), MDR: 26 CR: 00001000
IR: push (be01) - (1011111000000001), Micro(159): 001010001010000000001000000010000000000000000000
MDR_LOAD REGR0S(TGT) MDRS(ALUout) OP1S(REGR1) REGR0(10) OP0(10) MDRin(8190) 
ALUout(10) MDRin(10) 

Stable after 3 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(a) 1:REGR1(0) func: out:a
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 76.EXECUTE(7).1, PC: 32, SP: 1ffe, BP: 2 MAR: 1ffe(a), MDR: 26 CR: 00001000
IR: push (be01) - (1011111000000001), Micro(159): 001010001010000000001000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(a) 1:REGR1(0) func: out:a
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 000a
RAM[1ffe] <- a
MAR <- 32
PC++
IR <- be05
-------------------------------------------------------------------------
cycle: 77.DECODE(3).0, PC: 34, SP: 1ffe, BP: 2 MAR: 32(be05), MDR: a CR: 00001000
IR: DECODING (be05) Micro(31): 000000100000000000000000000000000000000000000000
IRimm(1) REGR1(0) OP0(0) MDRin(1) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 77.DECODE(3).1, PC: 34, SP: 1ffe, BP: 2 MAR: 32(be05), MDR: a CR: 00001000
IR: push (be05) - (1011111000000101), Micro(31): 000000100000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
SP--
-------------------------------------------------------------------------
cycle: 77.READ(5).0, PC: 34, SP: 1ffc, BP: 2 MAR: 32(be05), MDR: a CR: 00001000
IR: push (be05) - (1011111000000101), Micro(95): 100000000110000000000000000010000000000000000000
MAR_LOAD REGR0S(SP) OP1S(REGR1) REGR0(8188) OP0(8188) 
ALUout(8188) 

Stable after 3 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(1ffc) 1:REGR1(0) func: out:1ffc
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 77.READ(5).1, PC: 34, SP: 1ffc, BP: 2 MAR: 32(be05), MDR: a CR: 00001000
IR: push (be05) - (1011111000000101), Micro(95): 100000000110000000000000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(1ffc) 1:REGR1(0) func: out:1ffc
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ffc
-------------------------------------------------------------------------
cycle: 77.EXECUTE(7).0, PC: 34, SP: 1ffc, BP: 2 MAR: 1ffc(2), MDR: a CR: 00001000
IR: push (be05) - (1011111000000101), Micro(159): 001010001010000000001000000010000000000000000000
MDR_LOAD REGR0S(TGT) MDRS(ALUout) OP1S(REGR1) REGR0(2) OP0(2) MDRin(8188) 
ALUout(2) MDRin(2) 

Stable after 3 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(2) 1:REGR1(0) func: out:2
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 77.EXECUTE(7).1, PC: 34, SP: 1ffc, BP: 2 MAR: 1ffc(2), MDR: a CR: 00001000
IR: push (be05) - (1011111000000101), Micro(159): 001010001010000000001000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(2) 1:REGR1(0) func: out:2
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0002
RAM[1ffc] <- 2
MAR <- 34
PC++
IR <- 9585
-------------------------------------------------------------------------
cycle: 78.DECODE(3).0, PC: 36, SP: 1ffc, BP: 2 MAR: 34(9585), MDR: 2 CR: 00001000
IR: DECODING (9585) Micro(10): 000100001000100110100000000010000001000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) IRimm(65505) REGR0(8188) REGR1(0) OP0(8188) MDRin(65505) 
ALUout(8188) 

Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:6, 1:0, tgt:5
ALU: 0:REGR0(1ffc) 1:REGR1(0) func: out:1ffc
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 78.DECODE(3).1, PC: 36, SP: 1ffc, BP: 2 MAR: 34(9585), MDR: 2 CR: 00001000
IR: add (9585) - (1001010110000101), Micro(10): 000100001000100110100000000010000001000000000000

Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:6, 1:0, tgt:5
ALU: 0:REGR0(1ffc) 1:REGR1(0) func: out:1ffc
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
BP <- 1ffc
MAR <- 36
PC++
IR <- 14
-------------------------------------------------------------------------
cycle: 79.DECODE(3).0, PC: 38, SP: 1ffc, BP: 1ffc MAR: 36(14), MDR: 2 CR: 00001000
IR: DECODING (14) Micro(0): 001000000000000000000000110000000000100000000000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(2) REGR1(0) OP0(2) MDRin(2) 
ALUout(2) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:4
ALU: 0:MDRout(2) 1:REGR0(0) func: out:2
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 79.DECODE(3).1, PC: 38, SP: 1ffc, BP: 1ffc MAR: 36(14), MDR: 2 CR: 00001000
IR: ldi (14) - (0000000000010100), Micro(0): 001000000000000000000000110000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:4
ALU: 0:MDRout(2) 1:REGR0(0) func: out:2
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0002
-------------------------------------------------------------------------
cycle: 79.EXECUTE(7).0, PC: 38, SP: 1ffc, BP: 1ffc MAR: 36(14), MDR: 2 CR: 00001000
IR: ldi (14) - (0000000000010100), Micro(128): 000100000000000010100000010000000000000000000000
REGWS(TGT) OP0S(MDRout) IRimm(5) MDRin(5) 

Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:2, tgt:4
ALU: 0:MDRout(2) 1:REGR0(0) func: out:2
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 79.EXECUTE(7).1, PC: 38, SP: 1ffc, BP: 1ffc MAR: 36(14), MDR: 2 CR: 00001000
IR: ldi (14) - (0000000000010100), Micro(128): 000100000000000010100000010000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:2, tgt:4
ALU: 0:MDRout(2) 1:REGR0(0) func: out:2
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
REG4 <- 2
MAR <- 38
PC++
IR <- be04
-------------------------------------------------------------------------
cycle: 80.DECODE(3).0, PC: 3a, SP: 1ffc, BP: 1ffc MAR: 38(be04), MDR: 2 CR: 00001000
IR: DECODING (be04) Micro(31): 000000100000000000000000000000000000000000000000
IRimm(1) REGR1(0) OP0(0) MDRin(1) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:4
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 80.DECODE(3).1, PC: 3a, SP: 1ffc, BP: 1ffc MAR: 38(be04), MDR: 2 CR: 00001000
IR: push (be04) - (1011111000000100), Micro(31): 000000100000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:4
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
SP--
-------------------------------------------------------------------------
cycle: 80.READ(5).0, PC: 3a, SP: 1ffa, BP: 1ffc MAR: 38(be04), MDR: 2 CR: 00001000
IR: push (be04) - (1011111000000100), Micro(95): 100000000110000000000000000010000000000000000000
MAR_LOAD REGR0S(SP) OP1S(REGR1) REGR0(8186) OP0(8186) 
ALUout(8186) 

Stable after 3 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:4
ALU: 0:REGR0(1ffa) 1:REGR1(0) func: out:1ffa
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 80.READ(5).1, PC: 3a, SP: 1ffa, BP: 1ffc MAR: 38(be04), MDR: 2 CR: 00001000
IR: push (be04) - (1011111000000100), Micro(95): 100000000110000000000000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:4
ALU: 0:REGR0(1ffa) 1:REGR1(0) func: out:1ffa
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ffa
-------------------------------------------------------------------------
cycle: 80.EXECUTE(7).0, PC: 3a, SP: 1ffa, BP: 1ffc MAR: 1ffa(2), MDR: 2 CR: 00001000
IR: push (be04) - (1011111000000100), Micro(159): 001010001010000000001000000010000000000000000000
MDR_LOAD REGR0S(TGT) MDRS(ALUout) OP1S(REGR1) REGR0(2) OP0(2) MDRin(8186) 
ALUout(2) MDRin(2) 

Stable after 3 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:4
ALU: 0:REGR0(2) 1:REGR1(0) func: out:2
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 80.EXECUTE(7).1, PC: 3a, SP: 1ffa, BP: 1ffc MAR: 1ffa(2), MDR: 2 CR: 00001000
IR: push (be04) - (1011111000000100), Micro(159): 001010001010000000001000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:4
ALU: 0:REGR0(2) 1:REGR1(0) func: out:2
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0002
RAM[1ffa] <- 2
MAR <- 3a
PC++
IR <- a279
-------------------------------------------------------------------------
cycle: 81.DECODE(3).0, PC: 3c, SP: 1ffa, BP: 1ffc MAR: 3a(a279), MDR: 2 CR: 00001000
IR: DECODING (a279) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(2) REGR1(0) OP0(0) MDRin(2) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:1, 1:7, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 81.DECODE(3).1, PC: 3c, SP: 1ffa, BP: 1ffc MAR: 3a(a279), MDR: 2 CR: 00001000
IR: addi (a279) - (1010001001111001), Micro(17): 001000000000000000000001100000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:1, 1:7, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0002
-------------------------------------------------------------------------
cycle: 81.EXECUTE(7).0, PC: 3c, SP: 1ffa, BP: 1ffc MAR: 3a(a279), MDR: 2 CR: 00001000
IR: addi (a279) - (1010001001111001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(30) REGR1(60) OP0(60) OP1(2) MDRin(30) 
ALUout(62) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:1, 1:7, tgt:1
ALU: 0:REGR1(3c) 1:MDRout(2) func: out:3e
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 81.EXECUTE(7).1, PC: 3c, SP: 1ffa, BP: 1ffc MAR: 3a(a279), MDR: 2 CR: 00001000
IR: addi (a279) - (1010001001111001), Micro(145): 000100000000100110100000001100000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:1, 1:7, tgt:1
ALU: 0:REGR1(3c) 1:MDRout(2) func: out:3e
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
REG1 <- 3e
MAR <- 3c
PC++
IR <- 3fce
-------------------------------------------------------------------------
cycle: 82.DECODE(3).0, PC: 3e, SP: 1ffa, BP: 1ffc MAR: 3c(3fce), MDR: 2 CR: 00001000
IR: DECODING (3fce) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65486) REGR1(0) OP0(0) MDRin(65486) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:1, tgt:6
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 82.DECODE(3).1, PC: 3e, SP: 1ffa, BP: 1ffc MAR: 3c(3fce), MDR: 2 CR: 00001000
IR: br (3fce) - (0011111111001110), Micro(1): 001000000000000000000001000000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:1, tgt:6
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- ffce
-------------------------------------------------------------------------
cycle: 82.EXECUTE(7).0, PC: 3e, SP: 1ffa, BP: 1ffc MAR: 3c(3fce), MDR: ffce CR: 00001000
IR: br (3fce) - (0011111111001110), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65523) REGR0(62) OP0(65486) OP1(62) MDRin(65523) 
ALUout(12) 

Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:1, tgt:6
ALU: 0:MDRout(ffce) 1:REGR0(3e) func: out:c
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
CR <- a
-------------------------------------------------------------------------
cycle: 82.EXECUTE(7).1, PC: 3e, SP: 1ffa, BP: 1ffc MAR: 3c(3fce), MDR: ffce CR: 00001010
IR: br (3fce) - (0011111111001110), Micro(129): 000100000111000001110000010000000000000000000000

Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:1, tgt:6
ALU: 0:MDRout(ffce) 1:REGR0(3e) func: out:c
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
PC <- c
MAR <- c
PC++
IR <- be01
-------------------------------------------------------------------------
cycle: 83.DECODE(3).0, PC: e, SP: 1ffa, BP: 1ffc MAR: c(be01), MDR: ffce CR: 00001010
IR: DECODING (be01) Micro(31): 000000100000000000000000000000000000000000000000
IRimm(0) REGR1(0) OP0(0) MDRin(0) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 83.DECODE(3).1, PC: e, SP: 1ffa, BP: 1ffc MAR: c(be01), MDR: ffce CR: 00001010
IR: push (be01) - (1011111000000001), Micro(31): 000000100000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
SP--
-------------------------------------------------------------------------
cycle: 83.READ(5).0, PC: e, SP: 1ff8, BP: 1ffc MAR: c(be01), MDR: ffce CR: 00001010
IR: push (be01) - (1011111000000001), Micro(95): 100000000110000000000000000010000000000000000000
MAR_LOAD REGR0S(SP) OP1S(REGR1) REGR0(8184) OP0(8184) 
ALUout(8184) 

Stable after 3 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(1ff8) 1:REGR1(0) func: out:1ff8
STACK:
1ffe 1ffc 1ffa 1ff8*1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 83.READ(5).1, PC: e, SP: 1ff8, BP: 1ffc MAR: c(be01), MDR: ffce CR: 00001010
IR: push (be01) - (1011111000000001), Micro(95): 100000000110000000000000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(1ff8) 1:REGR1(0) func: out:1ff8
STACK:
1ffe 1ffc 1ffa 1ff8*1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ff8
-------------------------------------------------------------------------
cycle: 83.EXECUTE(7).0, PC: e, SP: 1ff8, BP: 1ffc MAR: 1ff8(3e), MDR: ffce CR: 00001010
IR: push (be01) - (1011111000000001), Micro(159): 001010001010000000001000000010000000000000000000
MDR_LOAD REGR0S(TGT) MDRS(ALUout) OP1S(REGR1) REGR0(62) OP0(62) MDRin(8184) 
ALUout(62) MDRin(62) 

Stable after 3 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(3e) 1:REGR1(0) func: out:3e
STACK:
1ffe 1ffc 1ffa 1ff8*1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 83.EXECUTE(7).1, PC: e, SP: 1ff8, BP: 1ffc MAR: 1ff8(3e), MDR: ffce CR: 00001000
IR: push (be01) - (1011111000000001), Micro(159): 001010001010000000001000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(3e) 1:REGR1(0) func: out:3e
STACK:
1ffe 1ffc 1ffa 1ff8*1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 003e
RAM[1ff8] <- 3e
MAR <- e
PC++
IR <- be05
-------------------------------------------------------------------------
cycle: 84.DECODE(3).0, PC: 10, SP: 1ff8, BP: 1ffc MAR: e(be05), MDR: 3e CR: 00001000
IR: DECODING (be05) Micro(31): 000000100000000000000000000000000000000000000000
IRimm(1) REGR1(0) OP0(0) MDRin(1) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8*1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 84.DECODE(3).1, PC: 10, SP: 1ff8, BP: 1ffc MAR: e(be05), MDR: 3e CR: 00001000
IR: push (be05) - (1011111000000101), Micro(31): 000000100000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8*1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
SP--
-------------------------------------------------------------------------
cycle: 84.READ(5).0, PC: 10, SP: 1ff6, BP: 1ffc MAR: e(be05), MDR: 3e CR: 00001000
IR: push (be05) - (1011111000000101), Micro(95): 100000000110000000000000000010000000000000000000
MAR_LOAD REGR0S(SP) OP1S(REGR1) REGR0(8182) OP0(8182) 
ALUout(8182) 

Stable after 3 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(1ff6) 1:REGR1(0) func: out:1ff6
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 84.READ(5).1, PC: 10, SP: 1ff6, BP: 1ffc MAR: e(be05), MDR: 3e CR: 00001000
IR: push (be05) - (1011111000000101), Micro(95): 100000000110000000000000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(1ff6) 1:REGR1(0) func: out:1ff6
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ff6
-------------------------------------------------------------------------
cycle: 84.EXECUTE(7).0, PC: 10, SP: 1ff6, BP: 1ffc MAR: 1ff6(1ffc), MDR: 3e CR: 00001000
IR: push (be05) - (1011111000000101), Micro(159): 001010001010000000001000000010000000000000000000
MDR_LOAD REGR0S(TGT) MDRS(ALUout) OP1S(REGR1) REGR0(8188) OP0(8188) MDRin(8182) 
ALUout(8188) MDRin(8188) 

Stable after 3 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(1ffc) 1:REGR1(0) func: out:1ffc
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 84.EXECUTE(7).1, PC: 10, SP: 1ff6, BP: 1ffc MAR: 1ff6(1ffc), MDR: 3e CR: 00001000
IR: push (be05) - (1011111000000101), Micro(159): 001010001010000000001000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(1ffc) 1:REGR1(0) func: out:1ffc
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 1ffc
RAM[1ff6] <- 1ffc
MAR <- 10
PC++
IR <- 9585
-------------------------------------------------------------------------
cycle: 85.DECODE(3).0, PC: 12, SP: 1ff6, BP: 1ffc MAR: 10(9585), MDR: 1ffc CR: 00001000
IR: DECODING (9585) Micro(10): 000100001000100110100000000010000001000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) IRimm(65505) REGR0(8182) REGR1(0) OP0(8182) MDRin(65505) 
ALUout(8182) 

Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:6, 1:0, tgt:5
ALU: 0:REGR0(1ff6) 1:REGR1(0) func: out:1ff6
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 85.DECODE(3).1, PC: 12, SP: 1ff6, BP: 1ffc MAR: 10(9585), MDR: 1ffc CR: 00001000
IR: add (9585) - (1001010110000101), Micro(10): 000100001000100110100000000010000001000000000000

Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:6, 1:0, tgt:5
ALU: 0:REGR0(1ff6) 1:REGR1(0) func: out:1ff6
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
BP <- 1ff6
MAR <- 12
PC++
IR <- 34
-------------------------------------------------------------------------
cycle: 86.DECODE(3).0, PC: 14, SP: 1ff6, BP: 1ff6 MAR: 12(34), MDR: 1ffc CR: 00001000
IR: DECODING (34) Micro(0): 001000000000000000000000110000000000100000000000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(6) REGR1(0) OP0(8188) MDRin(6) 
ALUout(8188) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:6, tgt:4
ALU: 0:MDRout(1ffc) 1:REGR0(0) func: out:1ffc
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 86.DECODE(3).1, PC: 14, SP: 1ff6, BP: 1ff6 MAR: 12(34), MDR: 1ffc CR: 00001000
IR: ldi (34) - (0000000000110100), Micro(0): 001000000000000000000000110000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:6, tgt:4
ALU: 0:MDRout(1ffc) 1:REGR0(0) func: out:1ffc
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0006
-------------------------------------------------------------------------
cycle: 86.EXECUTE(7).0, PC: 14, SP: 1ff6, BP: 1ff6 MAR: 12(34), MDR: 6 CR: 00001000
IR: ldi (34) - (0000000000110100), Micro(128): 000100000000000010100000010000000000000000000000
REGWS(TGT) OP0S(MDRout) IRimm(13) MDRin(13) 

Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:6, tgt:4
ALU: 0:MDRout(6) 1:REGR0(0) func: out:6
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 86.EXECUTE(7).1, PC: 14, SP: 1ff6, BP: 1ff6 MAR: 12(34), MDR: 6 CR: 00001000
IR: ldi (34) - (0000000000110100), Micro(128): 000100000000000010100000010000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:6, tgt:4
ALU: 0:MDRout(6) 1:REGR0(0) func: out:6
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
REG4 <- 6
MAR <- 14
PC++
IR <- 97a6
-------------------------------------------------------------------------
cycle: 87.DECODE(3).0, PC: 16, SP: 1ff6, BP: 1ff6 MAR: 14(97a6), MDR: 6 CR: 00001000
IR: DECODING (97a6) Micro(11): 000100001000100110100000000010000011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(65513) REGR0(8182) REGR1(6) OP0(8182) OP1(6) MDRin(65513) 
ALUout(8176) 

Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:6, 1:4, tgt:6
ALU: 0:REGR0(1ff6) 1:REGR1(6) func: out:1ff0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 87.DECODE(3).1, PC: 16, SP: 1ff6, BP: 1ff6 MAR: 14(97a6), MDR: 6 CR: 00001000
IR: sub (97a6) - (1001011110100110), Micro(11): 000100001000100110100000000010000011000000000000

Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:6, 1:4, tgt:6
ALU: 0:REGR0(1ff6) 1:REGR1(6) func: out:1ff0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
SP <- 1ff0
MAR <- 16
PC++
IR <- 54
-------------------------------------------------------------------------
cycle: 88.DECODE(3).0, PC: 18, SP: 1ff0, BP: 1ff6 MAR: 16(54), MDR: 6 CR: 00001000
IR: DECODING (54) Micro(0): 001000000000000000000000110000000000100000000000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(10) REGR1(0) OP0(6) MDRin(10) 
ALUout(6) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:1, 1:2, tgt:4
ALU: 0:MDRout(6) 1:REGR0(0) func: out:6
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 88.DECODE(3).1, PC: 18, SP: 1ff0, BP: 1ff6 MAR: 16(54), MDR: 6 CR: 00001000
IR: ldi (54) - (0000000001010100), Micro(0): 001000000000000000000000110000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:1, 1:2, tgt:4
ALU: 0:MDRout(6) 1:REGR0(0) func: out:6
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 000a
-------------------------------------------------------------------------
cycle: 88.EXECUTE(7).0, PC: 18, SP: 1ff0, BP: 1ff6 MAR: 16(54), MDR: a CR: 00001000
IR: ldi (54) - (0000000001010100), Micro(128): 000100000000000010100000010000000000000000000000
REGWS(TGT) OP0S(MDRout) IRimm(21) MDRin(21) 

Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:1, 1:2, tgt:4
ALU: 0:MDRout(a) 1:REGR0(0) func: out:a
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 88.EXECUTE(7).1, PC: 18, SP: 1ff0, BP: 1ff6 MAR: 16(54), MDR: a CR: 00001000
IR: ldi (54) - (0000000001010100), Micro(128): 000100000000000010100000010000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:1, 1:2, tgt:4
ALU: 0:MDRout(a) 1:REGR0(0) func: out:a
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
REG4 <- a
MAR <- 18
PC++
IR <- 8deb
-------------------------------------------------------------------------
cycle: 89.DECODE(3).0, PC: 1a, SP: 1ff0, BP: 1ff6 MAR: 18(8deb), MDR: a CR: 00001000
IR: DECODING (8deb) Micro(6): 001000000000000000000000000000000000000000000000
MDR_LOAD IRimm(65530) REGR1(0) OP0(0) MDRin(65530) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:5, tgt:3
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 89.DECODE(3).1, PC: 1a, SP: 1ff0, BP: 1ff6 MAR: 18(8deb), MDR: a CR: 00001000
IR: stw s7 (8deb) - (1000110111101011), Micro(6): 001000000000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:5, tgt:3
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- fffa
-------------------------------------------------------------------------
cycle: 89.READ(5).0, PC: 1a, SP: 1ff0, BP: 1ff6 MAR: 18(8deb), MDR: fffa CR: 00001000
IR: stw s7 (8deb) - (1000110111101011), Micro(70): 100000000101000000000000010000000000000000000000
MAR_LOAD REGR0S(BP) OP0S(MDRout) REGR0(8182) OP0(65530) OP1(8182) 
ALUout(8176) 

Stable after 3 vcycles.
regfile: r0:BP, r1:REG0, w:REG0
args: 0:7, 1:5, tgt:3
ALU: 0:MDRout(fffa) 1:REGR0(1ff6) func: out:1ff0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 89.READ(5).1, PC: 1a, SP: 1ff0, BP: 1ff6 MAR: 18(8deb), MDR: fffa CR: 00001000
IR: stw s7 (8deb) - (1000110111101011), Micro(70): 100000000101000000000000010000000000000000000000

Stable after 1 vcycles.
regfile: r0:BP, r1:REG0, w:REG0
args: 0:7, 1:5, tgt:3
ALU: 0:MDRout(fffa) 1:REGR0(1ff6) func: out:1ff0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ff0
-------------------------------------------------------------------------
cycle: 89.EXECUTE(7).0, PC: 1a, SP: 1ff0, BP: 1ff6 MAR: 1ff0(a), MDR: fffa CR: 00001000
IR: stw s7 (8deb) - (1000110111101011), Micro(134): 001010001011000000001000000010000000000000000000
MDR_LOAD REGR0S(TGT2) MDRS(ALUout) OP1S(REGR1) REGR0(10) OP0(10) OP1(0) MDRin(8176) 
ALUout(10) MDRin(10) 

Stable after 3 vcycles.
regfile: r0:TGT2, r1:REG0, w:REG0
args: 0:7, 1:5, tgt:3
ALU: 0:REGR0(a) 1:REGR1(0) func: out:a
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 89.EXECUTE(7).1, PC: 1a, SP: 1ff0, BP: 1ff6 MAR: 1ff0(a), MDR: fffa CR: 00001000
IR: stw s7 (8deb) - (1000110111101011), Micro(134): 001010001011000000001000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:TGT2, r1:REG0, w:REG0
args: 0:7, 1:5, tgt:3
ALU: 0:REGR0(a) 1:REGR1(0) func: out:a
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 000a
RAM[1ff0] <- a
MAR <- 1a
PC++
IR <- 91f0
-------------------------------------------------------------------------
cycle: 90.DECODE(3).0, PC: 1c, SP: 1ff0, BP: 1ff6 MAR: 1a(91f0), MDR: a CR: 00001000
IR: DECODING (91f0) Micro(8): 001000000000000000000000000000000000000000000000
MDR_LOAD IRimm(65532) REGR1(0) OP0(0) MDRin(65532) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:6, tgt:0
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 90.DECODE(3).1, PC: 1c, SP: 1ff0, BP: 1ff6 MAR: 1a(91f0), MDR: a CR: 00001000
IR: stw0 s7 (91f0) - (1001000111110000), Micro(8): 001000000000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:6, tgt:0
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- fffc
-------------------------------------------------------------------------
cycle: 90.READ(5).0, PC: 1c, SP: 1ff0, BP: 1ff6 MAR: 1a(91f0), MDR: fffc CR: 00001000
IR: stw0 s7 (91f0) - (1001000111110000), Micro(72): 100000000101000000000000010000000000000000000000
MAR_LOAD REGR0S(BP) OP0S(MDRout) REGR0(8182) OP0(65532) OP1(8182) 
ALUout(8178) 

Stable after 3 vcycles.
regfile: r0:BP, r1:REG0, w:REG0
args: 0:7, 1:6, tgt:0
ALU: 0:MDRout(fffc) 1:REGR0(1ff6) func: out:1ff2
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 90.READ(5).1, PC: 1c, SP: 1ff0, BP: 1ff6 MAR: 1a(91f0), MDR: fffc CR: 00001000
IR: stw0 s7 (91f0) - (1001000111110000), Micro(72): 100000000101000000000000010000000000000000000000

Stable after 1 vcycles.
regfile: r0:BP, r1:REG0, w:REG0
args: 0:7, 1:6, tgt:0
ALU: 0:MDRout(fffc) 1:REGR0(1ff6) func: out:1ff2
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ff2
-------------------------------------------------------------------------
cycle: 90.EXECUTE(7).0, PC: 1c, SP: 1ff0, BP: 1ff6 MAR: 1ff2(0), MDR: fffc CR: 00001000
IR: stw0 s7 (91f0) - (1001000111110000), Micro(136): 001010000000000000001000000010000000000000000000
MDR_LOAD MDRS(ALUout) OP1S(REGR1) REGR0(0) OP0(0) OP1(0) MDRin(8178) 
ALUout(0) MDRin(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:6, tgt:0
ALU: 0:REGR0(0) 1:REGR1(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 90.EXECUTE(7).1, PC: 1c, SP: 1ff0, BP: 1ff6 MAR: 1ff2(0), MDR: fffc CR: 00001000
IR: stw0 s7 (91f0) - (1001000111110000), Micro(136): 001010000000000000001000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:6, tgt:0
ALU: 0:REGR0(0) 1:REGR1(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0000
RAM[1ff2] <- 0
MAR <- 1c
PC++
IR <- 64
-------------------------------------------------------------------------
cycle: 91.DECODE(3).0, PC: 1e, SP: 1ff0, BP: 1ff6 MAR: 1c(64), MDR: 0 CR: 00001000
IR: DECODING (64) Micro(0): 001000000000000000000000110000000000100000000000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(12) REGR1(0) OP0(0) MDRin(12) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:1, 1:4, tgt:4
ALU: 0:MDRout(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 91.DECODE(3).1, PC: 1e, SP: 1ff0, BP: 1ff6 MAR: 1c(64), MDR: 0 CR: 00001000
IR: ldi (64) - (0000000001100100), Micro(0): 001000000000000000000000110000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:1, 1:4, tgt:4
ALU: 0:MDRout(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 000c
-------------------------------------------------------------------------
cycle: 91.EXECUTE(7).0, PC: 1e, SP: 1ff0, BP: 1ff6 MAR: 1c(64), MDR: c CR: 00001000
IR: ldi (64) - (0000000001100100), Micro(128): 000100000000000010100000010000000000000000000000
REGWS(TGT) OP0S(MDRout) IRimm(25) MDRin(25) 

Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:1, 1:4, tgt:4
ALU: 0:MDRout(c) 1:REGR0(0) func: out:c
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 91.EXECUTE(7).1, PC: 1e, SP: 1ff0, BP: 1ff6 MAR: 1c(64), MDR: c CR: 00001000
IR: ldi (64) - (0000000001100100), Micro(128): 000100000000000010100000010000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:1, 1:4, tgt:4
ALU: 0:MDRout(c) 1:REGR0(0) func: out:c
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
REG4 <- c
MAR <- 1e
PC++
IR <- 8dfb
-------------------------------------------------------------------------
cycle: 92.DECODE(3).0, PC: 20, SP: 1ff0, BP: 1ff6 MAR: 1e(8dfb), MDR: c CR: 00001000
IR: DECODING (8dfb) Micro(6): 001000000000000000000000000000000000000000000000
MDR_LOAD IRimm(65534) REGR1(0) OP0(0) MDRin(65534) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:3
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 92.DECODE(3).1, PC: 20, SP: 1ff0, BP: 1ff6 MAR: 1e(8dfb), MDR: c CR: 00001000
IR: stw s7 (8dfb) - (1000110111111011), Micro(6): 001000000000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:3
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- fffe
-------------------------------------------------------------------------
cycle: 92.READ(5).0, PC: 20, SP: 1ff0, BP: 1ff6 MAR: 1e(8dfb), MDR: fffe CR: 00001000
IR: stw s7 (8dfb) - (1000110111111011), Micro(70): 100000000101000000000000010000000000000000000000
MAR_LOAD REGR0S(BP) OP0S(MDRout) REGR0(8182) OP0(65534) OP1(8182) 
ALUout(8180) 

Stable after 3 vcycles.
regfile: r0:BP, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:3
ALU: 0:MDRout(fffe) 1:REGR0(1ff6) func: out:1ff4
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 92.READ(5).1, PC: 20, SP: 1ff0, BP: 1ff6 MAR: 1e(8dfb), MDR: fffe CR: 00001000
IR: stw s7 (8dfb) - (1000110111111011), Micro(70): 100000000101000000000000010000000000000000000000

Stable after 1 vcycles.
regfile: r0:BP, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:3
ALU: 0:MDRout(fffe) 1:REGR0(1ff6) func: out:1ff4
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ff4
-------------------------------------------------------------------------
cycle: 92.EXECUTE(7).0, PC: 20, SP: 1ff0, BP: 1ff6 MAR: 1ff4(c), MDR: fffe CR: 00001000
IR: stw s7 (8dfb) - (1000110111111011), Micro(134): 001010001011000000001000000010000000000000000000
MDR_LOAD REGR0S(TGT2) MDRS(ALUout) OP1S(REGR1) REGR0(12) OP0(12) OP1(0) MDRin(8180) 
ALUout(12) MDRin(12) 

Stable after 3 vcycles.
regfile: r0:TGT2, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:3
ALU: 0:REGR0(c) 1:REGR1(0) func: out:c
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 92.EXECUTE(7).1, PC: 20, SP: 1ff0, BP: 1ff6 MAR: 1ff4(c), MDR: fffe CR: 00001000
IR: stw s7 (8dfb) - (1000110111111011), Micro(134): 001010001011000000001000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:TGT2, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:3
ALU: 0:REGR0(c) 1:REGR1(0) func: out:c
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 000c
RAM[1ff4] <- c
MAR <- 20
PC++
IR <- 8813
-------------------------------------------------------------------------
cycle: 93.DECODE(3).0, PC: 22, SP: 1ff0, BP: 1ff6 MAR: 20(8813), MDR: c CR: 00001000
IR: DECODING (8813) Micro(4): 001000000000000000000000000000000000000000000000
MDR_LOAD IRimm(4) REGR1(0) OP0(0) MDRin(4) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:3
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 93.DECODE(3).1, PC: 22, SP: 1ff0, BP: 1ff6 MAR: 20(8813), MDR: c CR: 00001000
IR: ldw s7 (8813) - (1000100000010011), Micro(4): 001000000000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:3
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0004
-------------------------------------------------------------------------
cycle: 93.READ(5).0, PC: 22, SP: 1ff0, BP: 1ff6 MAR: 20(8813), MDR: 4 CR: 00001000
IR: ldw s7 (8813) - (1000100000010011), Micro(68): 100000000101000000000000010000000000000000000000
MAR_LOAD REGR0S(BP) OP0S(MDRout) REGR0(8182) OP0(4) OP1(8182) 
ALUout(8186) 

Stable after 3 vcycles.
regfile: r0:BP, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:3
ALU: 0:MDRout(4) 1:REGR0(1ff6) func: out:1ffa
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 93.READ(5).1, PC: 22, SP: 1ff0, BP: 1ff6 MAR: 20(8813), MDR: 4 CR: 00001000
IR: ldw s7 (8813) - (1000100000010011), Micro(68): 100000000101000000000000010000000000000000000000

Stable after 1 vcycles.
regfile: r0:BP, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:3
ALU: 0:MDRout(4) 1:REGR0(1ff6) func: out:1ffa
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ffa
-------------------------------------------------------------------------
cycle: 93.EXECUTE(7).0, PC: 22, SP: 1ff0, BP: 1ff6 MAR: 1ffa(2), MDR: 4 CR: 00001000
IR: ldw s7 (8813) - (1000100000010011), Micro(132): 001100000000000010110100010000000000000000000000
MDR_LOAD REGWS(TGT2) MDRS(RAMout) OP0S(MDRout) REGR0(0) OP1(0) MDRin(2) 
ALUout(4) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT2
args: 0:0, 1:2, tgt:3
ALU: 0:MDRout(4) 1:REGR0(0) func: out:4
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 93.EXECUTE(7).1, PC: 22, SP: 1ff0, BP: 1ff6 MAR: 1ffa(2), MDR: 4 CR: 00001000
IR: ldw s7 (8813) - (1000100000010011), Micro(132): 001100000000000010110100010000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT2
args: 0:0, 1:2, tgt:3
ALU: 0:MDRout(4) 1:REGR0(0) func: out:4
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0002
REG4 <- 2
MAR <- 22
PC++
IR <- b813
-------------------------------------------------------------------------
cycle: 94.DECODE(3).0, PC: 24, SP: 1ff0, BP: 1ff6 MAR: 22(b813), MDR: 2 CR: 00001000
IR: DECODING (b813) Micro(28): 001000000000000000000010100000000000000000000000
MDR_LOAD IMMS(IMM4) IRimm(0) REGR1(0) OP0(0) MDRin(0) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:3
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 94.DECODE(3).1, PC: 24, SP: 1ff0, BP: 1ff6 MAR: 22(b813), MDR: 2 CR: 00001000
IR: shl (b813) - (1011100000010011), Micro(28): 001000000000000000000010100000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:3
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0000
-------------------------------------------------------------------------
cycle: 94.READ(5).0, PC: 24, SP: 1ff0, BP: 1ff6 MAR: 22(b813), MDR: 0 CR: 00001000
IR: shl (b813) - (1011100000010011), Micro(92): 000000000000000000000000000000000000000000000000
IRimm(4) MDRin(4) 

Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:3
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 94.READ(5).1, PC: 24, SP: 1ff0, BP: 1ff6 MAR: 22(b813), MDR: 0 CR: 00001000
IR: shl (b813) - (1011100000010011), Micro(92): 000000000000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:3
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 94.EXECUTE(7).0, PC: 24, SP: 1ff0, BP: 1ff6 MAR: 22(b813), MDR: 0 CR: 00001000
IR: shl (b813) - (1011100000010011), Micro(156): 000100001100000010110000000100001000000000000000
REGR0S(ARG2) REGWS(TGT2) OP1S(MDRout) ALUS(EQ) REGR0(2) OP0(2) 
ALUout(4) 

Stable after 3 vcycles.
regfile: r0:ARG2, r1:REG0, w:TGT2
args: 0:0, 1:2, tgt:3
ALU: 0:REGR0(2) 1:MDRout(0) func: out:4
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 94.EXECUTE(7).1, PC: 24, SP: 1ff0, BP: 1ff6 MAR: 22(b813), MDR: 0 CR: 00001000
IR: shl (b813) - (1011100000010011), Micro(156): 000100001100000010110000000100001000000000000000

Stable after 1 vcycles.
regfile: r0:ARG2, r1:REG0, w:TGT2
args: 0:0, 1:2, tgt:3
ALU: 0:REGR0(2) 1:MDRout(0) func: out:4
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
REG4 <- 4
MAR <- 24
PC++
IR <- 1fd3
-------------------------------------------------------------------------
cycle: 95.DECODE(3).0, PC: 26, SP: 1ff0, BP: 1ff6 MAR: 24(1fd3), MDR: 0 CR: 00001000
IR: DECODING (1fd3) Micro(0): 001000000000000000000000110000000000100000000000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(65530) REGR1(0) OP0(0) MDRin(65530) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:2, tgt:3
ALU: 0:MDRout(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 95.DECODE(3).1, PC: 26, SP: 1ff0, BP: 1ff6 MAR: 24(1fd3), MDR: 0 CR: 00001000
IR: ldi (1fd3) - (0001111111010011), Micro(0): 001000000000000000000000110000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:2, tgt:3
ALU: 0:MDRout(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- fffa
-------------------------------------------------------------------------
cycle: 95.EXECUTE(7).0, PC: 26, SP: 1ff0, BP: 1ff6 MAR: 24(1fd3), MDR: fffa CR: 00001000
IR: ldi (1fd3) - (0001111111010011), Micro(128): 000100000000000010100000010000000000000000000000
REGWS(TGT) OP0S(MDRout) IRimm(65524) MDRin(65524) 

Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:7, 1:2, tgt:3
ALU: 0:MDRout(fffa) 1:REGR0(0) func: out:fffa
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 95.EXECUTE(7).1, PC: 26, SP: 1ff0, BP: 1ff6 MAR: 24(1fd3), MDR: fffa CR: 00001000
IR: ldi (1fd3) - (0001111111010011), Micro(128): 000100000000000010100000010000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:7, 1:2, tgt:3
ALU: 0:MDRout(fffa) 1:REGR0(0) func: out:fffa
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
REG3 <- fffa
MAR <- 26
PC++
IR <- 94eb
-------------------------------------------------------------------------
cycle: 96.DECODE(3).0, PC: 28, SP: 1ff0, BP: 1ff6 MAR: 26(94eb), MDR: fffa CR: 00001000
IR: DECODING (94eb) Micro(10): 000100001000100110100000000010000001000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) IRimm(58) REGR0(65530) REGR1(8182) OP0(65530) OP1(8182) MDRin(58) 
ALUout(8176) 

Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:3, 1:5, tgt:3
ALU: 0:REGR0(fffa) 1:REGR1(1ff6) func: out:1ff0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 96.DECODE(3).1, PC: 28, SP: 1ff0, BP: 1ff6 MAR: 26(94eb), MDR: fffa CR: 00001000
IR: add (94eb) - (1001010011101011), Micro(10): 000100001000100110100000000010000001000000000000

Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:3, 1:5, tgt:3
ALU: 0:REGR0(fffa) 1:REGR1(1ff6) func: out:1ff0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
REG3 <- 1ff0
MAR <- 28
PC++
IR <- b119
-------------------------------------------------------------------------
cycle: 97.DECODE(3).0, PC: 2a, SP: 1ff0, BP: 1ff6 MAR: 28(b119), MDR: fffa CR: 00001000
IR: DECODING (b119) Micro(24): 000000000000000000000000000000000000000000000000
IRimm(65478) REGR1(0) OP0(0) MDRin(65478) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:4, 1:3, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 97.DECODE(3).1, PC: 2a, SP: 1ff0, BP: 1ff6 MAR: 28(b119), MDR: fffa CR: 00001000
IR: ldw.b (b119) - (1011000100011001), Micro(24): 000000000000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:4, 1:3, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 97.READ(5).0, PC: 2a, SP: 1ff0, BP: 1ff6 MAR: 28(b119), MDR: fffa CR: 00001000
IR: ldw.b (b119) - (1011000100011001), Micro(88): 100000001000100100000000000010000000000000000000
MAR_LOAD REGR0S(ARG0) REGR1S(ARG1) OP1S(REGR1) REGR0(4) REGR1(8176) OP0(4) OP1(8176) 
ALUout(8180) 

Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:REG0
args: 0:4, 1:3, tgt:1
ALU: 0:REGR0(4) 1:REGR1(1ff0) func: out:1ff4
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 97.READ(5).1, PC: 2a, SP: 1ff0, BP: 1ff6 MAR: 28(b119), MDR: fffa CR: 00001000
IR: ldw.b (b119) - (1011000100011001), Micro(88): 100000001000100100000000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:REG0
args: 0:4, 1:3, tgt:1
ALU: 0:REGR0(4) 1:REGR1(1ff0) func: out:1ff4
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ff4
-------------------------------------------------------------------------
cycle: 97.EXECUTE(7).0, PC: 2a, SP: 1ff0, BP: 1ff6 MAR: 1ff4(c), MDR: fffa CR: 00001000
IR: ldw.b (b119) - (1011000100011001), Micro(152): 001100000000000010100100010000000000000000000000
MDR_LOAD REGWS(TGT) MDRS(RAMout) OP0S(MDRout) REGR0(0) REGR1(0) OP0(65530) OP1(0) MDRin(12) 
ALUout(65530) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:4, 1:3, tgt:1
ALU: 0:MDRout(fffa) 1:REGR0(0) func: out:fffa
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 97.EXECUTE(7).1, PC: 2a, SP: 1ff0, BP: 1ff6 MAR: 1ff4(c), MDR: fffa CR: 00001000
IR: ldw.b (b119) - (1011000100011001), Micro(152): 001100000000000010100100010000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:4, 1:3, tgt:1
ALU: 0:MDRout(fffa) 1:REGR0(0) func: out:fffa
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 000c
REG1 <- c
MAR <- 2a
PC++
IR <- 9546
-------------------------------------------------------------------------
cycle: 98.DECODE(3).0, PC: 2c, SP: 1ff0, BP: 1ff6 MAR: 2a(9546), MDR: c CR: 00001000
IR: DECODING (9546) Micro(10): 000100001000100110100000000010000001000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) IRimm(65489) REGR0(8182) REGR1(0) OP0(8182) MDRin(65489) 
ALUout(8182) 

Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:5, 1:0, tgt:6
ALU: 0:REGR0(1ff6) 1:REGR1(0) func: out:1ff6
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 98.DECODE(3).1, PC: 2c, SP: 1ff0, BP: 1ff6 MAR: 2a(9546), MDR: c CR: 00001000
IR: add (9546) - (1001010101000110), Micro(10): 000100001000100110100000000010000001000000000000

Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:5, 1:0, tgt:6
ALU: 0:REGR0(1ff6) 1:REGR1(0) func: out:1ff6
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
SP <- 1ff6
MAR <- 2c
PC++
IR <- c005
-------------------------------------------------------------------------
cycle: 99.DECODE(3).0, PC: 2e, SP: 1ff6, BP: 1ff6 MAR: 2c(c005), MDR: c CR: 00001000
IR: DECODING (c005) Micro(32): 000000000000000000000000000000000000000000000000
IRimm(1) REGR1(0) OP0(0) MDRin(1) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 99.DECODE(3).1, PC: 2e, SP: 1ff6, BP: 1ff6 MAR: 2c(c005), MDR: c CR: 00001000
IR: pop (c005) - (1100000000000101), Micro(32): 000000000000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 99.READ(5).0, PC: 2e, SP: 1ff6, BP: 1ff6 MAR: 2c(c005), MDR: c CR: 00001000
IR: pop (c005) - (1100000000000101), Micro(96): 100000000110000000000000000010000000000000000000
MAR_LOAD REGR0S(SP) OP1S(REGR1) REGR0(8182) OP0(8182) 
ALUout(8182) 

Stable after 3 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(1ff6) 1:REGR1(0) func: out:1ff6
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 99.READ(5).1, PC: 2e, SP: 1ff6, BP: 1ff6 MAR: 2c(c005), MDR: c CR: 00001000
IR: pop (c005) - (1100000000000101), Micro(96): 100000000110000000000000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(1ff6) 1:REGR1(0) func: out:1ff6
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ff6
-------------------------------------------------------------------------
cycle: 99.EXECUTE(7).0, PC: 2e, SP: 1ff6, BP: 1ff6 MAR: 1ff6(1ffc), MDR: c CR: 00001000
IR: pop (c005) - (1100000000000101), Micro(160): 001100000000000010100100010000000000010000000000
MDR_LOAD REGWS(TGT) MDRS(RAMout) OP0S(MDRout) REGR0(0) OP0(12) MDRin(8188) 
ALUout(12) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:5
ALU: 0:MDRout(c) 1:REGR0(0) func: out:c
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 99.EXECUTE(7).1, PC: 2e, SP: 1ff6, BP: 1ff6 MAR: 1ff6(1ffc), MDR: c CR: 00001000
IR: pop (c005) - (1100000000000101), Micro(160): 001100000000000010100100010000000000010000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:5
ALU: 0:MDRout(c) 1:REGR0(0) func: out:c
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 1ffc
BP <- 1ffc
SP++
MAR <- 2e
PC++
IR <- c007
-------------------------------------------------------------------------
cycle: 100.DECODE(3).0, PC: 30, SP: 1ff8, BP: 1ffc MAR: 2e(c007), MDR: 1ffc CR: 00001000
IR: DECODING (c007) Micro(32): 000000000000000000000000000000000000000000000000
REGR1(0) OP0(0) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:7
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8*1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 100.DECODE(3).1, PC: 30, SP: 1ff8, BP: 1ffc MAR: 2e(c007), MDR: 1ffc CR: 00001000
IR: pop (c007) - (1100000000000111), Micro(32): 000000000000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:7
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8*1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 100.READ(5).0, PC: 30, SP: 1ff8, BP: 1ffc MAR: 2e(c007), MDR: 1ffc CR: 00001000
IR: pop (c007) - (1100000000000111), Micro(96): 100000000110000000000000000010000000000000000000
MAR_LOAD REGR0S(SP) OP1S(REGR1) REGR0(8184) OP0(8184) 
ALUout(8184) 

Stable after 3 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:7
ALU: 0:REGR0(1ff8) 1:REGR1(0) func: out:1ff8
STACK:
1ffe 1ffc 1ffa 1ff8*1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 100.READ(5).1, PC: 30, SP: 1ff8, BP: 1ffc MAR: 2e(c007), MDR: 1ffc CR: 00001000
IR: pop (c007) - (1100000000000111), Micro(96): 100000000110000000000000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:7
ALU: 0:REGR0(1ff8) 1:REGR1(0) func: out:1ff8
STACK:
1ffe 1ffc 1ffa 1ff8*1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ff8
-------------------------------------------------------------------------
cycle: 100.EXECUTE(7).0, PC: 30, SP: 1ff8, BP: 1ffc MAR: 1ff8(3e), MDR: 1ffc CR: 00001000
IR: pop (c007) - (1100000000000111), Micro(160): 001100000000000010100100010000000000010000000000
MDR_LOAD REGWS(TGT) MDRS(RAMout) OP0S(MDRout) REGR0(0) OP0(8188) MDRin(62) 
ALUout(8188) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:7
ALU: 0:MDRout(1ffc) 1:REGR0(0) func: out:1ffc
STACK:
1ffe 1ffc 1ffa 1ff8*1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 100.EXECUTE(7).1, PC: 30, SP: 1ff8, BP: 1ffc MAR: 1ff8(3e), MDR: 1ffc CR: 00001000
IR: pop (c007) - (1100000000000111), Micro(160): 001100000000000010100100010000000000010000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:7
ALU: 0:MDRout(1ffc) 1:REGR0(0) func: out:1ffc
STACK:
1ffe 1ffc 1ffa 1ff8*1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 003e
PC <- 3e
SP++
MAR <- 3e
PC++
IR <- 3
-------------------------------------------------------------------------
cycle: 101.DECODE(3).0, PC: 40, SP: 1ffa, BP: 1ffc MAR: 3e(3), MDR: 3e CR: 00001000
IR: DECODING (3) Micro(0): 001000000000000000000000110000000000100000000000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(0) REGR1(0) MDRin(0) 

Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:3
ALU: 0:MDRout(3e) 1:REGR0(0) func: out:3e
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 101.DECODE(3).1, PC: 40, SP: 1ffa, BP: 1ffc MAR: 3e(3), MDR: 3e CR: 00001000
IR: ldi (3) - (0000000000000011), Micro(0): 001000000000000000000000110000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:3
ALU: 0:MDRout(3e) 1:REGR0(0) func: out:3e
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0000
-------------------------------------------------------------------------
cycle: 101.EXECUTE(7).0, PC: 40, SP: 1ffa, BP: 1ffc MAR: 3e(3), MDR: 0 CR: 00001000
IR: ldi (3) - (0000000000000011), Micro(128): 000100000000000010100000010000000000000000000000
REGWS(TGT) OP0S(MDRout) 

Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:3
ALU: 0:MDRout(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 101.EXECUTE(7).1, PC: 40, SP: 1ffa, BP: 1ffc MAR: 3e(3), MDR: 0 CR: 00001000
IR: ldi (3) - (0000000000000011), Micro(128): 000100000000000010100000010000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:3
ALU: 0:MDRout(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
REG3 <- 0
MAR <- 40
PC++
IR <- bc22
-------------------------------------------------------------------------
cycle: 102.DECODE(3).0, PC: 42, SP: 1ffa, BP: 1ffc MAR: 40(bc22), MDR: 0 CR: 00001000
IR: DECODING (bc22) Micro(30): 001000000000000000000010000000000000100000000000
MDR_LOAD IMMS(IMM7u) IRimm(8) REGR1(0) OP0(0) MDRin(8) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:4, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 102.DECODE(3).1, PC: 42, SP: 1ffa, BP: 1ffc MAR: 40(bc22), MDR: 0 CR: 00001000
IR: addhi (bc22) - (1011110000100010), Micro(30): 001000000000000000000010000000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:4, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0008
-------------------------------------------------------------------------
cycle: 102.EXECUTE(7).0, PC: 42, SP: 1ffa, BP: 1ffc MAR: 40(bc22), MDR: 8 CR: 00001000
IR: addhi (bc22) - (1011110000100010), Micro(158): 000100000000101110110000010010001100000000000000
REGR1S(TGT2) REGWS(TGT2) OP0S(MDRout) OP1S(REGR1) ALUS(LT) OP0(8) 
ALUout(4096) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:TGT2, w:TGT2
args: 0:0, 1:4, tgt:2
ALU: 0:MDRout(8) 1:REGR1(0) func: out:1000
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 102.EXECUTE(7).1, PC: 42, SP: 1ffa, BP: 1ffc MAR: 40(bc22), MDR: 8 CR: 00001000
IR: addhi (bc22) - (1011110000100010), Micro(158): 000100000000101110110000010010001100000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:TGT2, w:TGT2
args: 0:0, 1:4, tgt:2
ALU: 0:MDRout(8) 1:REGR1(0) func: out:1000
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
REG3 <- 1000
MAR <- 42
PC++
IR <- b419
-------------------------------------------------------------------------
cycle: 103.DECODE(3).0, PC: 44, SP: 1ffa, BP: 1ffc MAR: 42(b419), MDR: 8 CR: 00001000
IR: DECODING (b419) Micro(26): 000000000000000000000000000000000000000000000000
IRimm(6) REGR1(0) OP0(0) MDRin(6) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:3, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 103.DECODE(3).1, PC: 44, SP: 1ffa, BP: 1ffc MAR: 42(b419), MDR: 8 CR: 00001000
IR: stw.b (b419) - (1011010000011001), Micro(26): 000000000000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:3, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 103.READ(5).0, PC: 44, SP: 1ffa, BP: 1ffc MAR: 42(b419), MDR: 8 CR: 00001000
IR: stw.b (b419) - (1011010000011001), Micro(90): 100000001000100100000000000010000000000000000000
MAR_LOAD REGR0S(ARG0) REGR1S(ARG1) OP1S(REGR1) REGR1(4096) OP1(4096) 
ALUout(4096) 

Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:REG0
args: 0:0, 1:3, tgt:1
ALU: 0:REGR0(0) 1:REGR1(1000) func: out:1000
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 103.READ(5).1, PC: 44, SP: 1ffa, BP: 1ffc MAR: 42(b419), MDR: 8 CR: 00001000
IR: stw.b (b419) - (1011010000011001), Micro(90): 100000001000100100000000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:REG0
args: 0:0, 1:3, tgt:1
ALU: 0:REGR0(0) 1:REGR1(1000) func: out:1000
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1000
-------------------------------------------------------------------------
cycle: 103.EXECUTE(7).0, PC: 44, SP: 1ffa, BP: 1ffc MAR: 1000(c), MDR: 8 CR: 00001000
IR: stw.b (b419) - (1011010000011001), Micro(154): 001010001010000000001000000010000000000000000000
MDR_LOAD REGR0S(TGT) MDRS(ALUout) OP1S(REGR1) REGR0(12) REGR1(0) OP0(12) OP1(0) MDRin(4096) 
ALUout(12) MDRin(12) 

Stable after 3 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:3, tgt:1
ALU: 0:REGR0(c) 1:REGR1(0) func: out:c
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 103.EXECUTE(7).1, PC: 44, SP: 1ffa, BP: 1ffc MAR: 1000(c), MDR: 8 CR: 00001000
IR: stw.b (b419) - (1011010000011001), Micro(154): 001010001010000000001000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:3, tgt:1
ALU: 0:REGR0(c) 1:REGR1(0) func: out:c
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 000c
RAM[1000] <- c
MAR <- 44
PC++
IR <- 9401
-------------------------------------------------------------------------
cycle: 104.DECODE(3).0, PC: 46, SP: 1ffa, BP: 1ffc MAR: 44(9401), MDR: c CR: 00001000
IR: DECODING (9401) Micro(10): 000100001000100110100000000010000001000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) IRimm(0) REGR1(0) OP0(0) MDRin(0) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(0) 1:REGR1(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 104.DECODE(3).1, PC: 46, SP: 1ffa, BP: 1ffc MAR: 44(9401), MDR: c CR: 00001000
IR: add (9401) - (1001010000000001), Micro(10): 000100001000100110100000000010000001000000000000

Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(0) 1:REGR1(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
REG1 <- 0
MAR <- 46
PC++
IR <- c005
-------------------------------------------------------------------------
cycle: 105.DECODE(3).0, PC: 48, SP: 1ffa, BP: 1ffc MAR: 46(c005), MDR: c CR: 00001000
IR: DECODING (c005) Micro(32): 000000000000000000000000000000000000000000000000
IRimm(1) REGR1(0) OP0(0) MDRin(1) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 105.DECODE(3).1, PC: 48, SP: 1ffa, BP: 1ffc MAR: 46(c005), MDR: c CR: 00001000
IR: pop (c005) - (1100000000000101), Micro(32): 000000000000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 105.READ(5).0, PC: 48, SP: 1ffa, BP: 1ffc MAR: 46(c005), MDR: c CR: 00001000
IR: pop (c005) - (1100000000000101), Micro(96): 100000000110000000000000000010000000000000000000
MAR_LOAD REGR0S(SP) OP1S(REGR1) REGR0(8186) OP0(8186) 
ALUout(8186) 

Stable after 3 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(1ffa) 1:REGR1(0) func: out:1ffa
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 105.READ(5).1, PC: 48, SP: 1ffa, BP: 1ffc MAR: 46(c005), MDR: c CR: 00001000
IR: pop (c005) - (1100000000000101), Micro(96): 100000000110000000000000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(1ffa) 1:REGR1(0) func: out:1ffa
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ffa
-------------------------------------------------------------------------
cycle: 105.EXECUTE(7).0, PC: 48, SP: 1ffa, BP: 1ffc MAR: 1ffa(2), MDR: c CR: 00001000
IR: pop (c005) - (1100000000000101), Micro(160): 001100000000000010100100010000000000010000000000
MDR_LOAD REGWS(TGT) MDRS(RAMout) OP0S(MDRout) REGR0(0) OP0(12) MDRin(2) 
ALUout(12) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:5
ALU: 0:MDRout(c) 1:REGR0(0) func: out:c
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 105.EXECUTE(7).1, PC: 48, SP: 1ffa, BP: 1ffc MAR: 1ffa(2), MDR: c CR: 00001000
IR: pop (c005) - (1100000000000101), Micro(160): 001100000000000010100100010000000000010000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:5
ALU: 0:MDRout(c) 1:REGR0(0) func: out:c
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0002
BP <- 2
SP++
MAR <- 48
PC++
IR <- c007
-------------------------------------------------------------------------
cycle: 106.DECODE(3).0, PC: 4a, SP: 1ffc, BP: 2 MAR: 48(c007), MDR: 2 CR: 00001000
IR: DECODING (c007) Micro(32): 000000000000000000000000000000000000000000000000
REGR1(0) OP0(0) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:7
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 106.DECODE(3).1, PC: 4a, SP: 1ffc, BP: 2 MAR: 48(c007), MDR: 2 CR: 00001000
IR: pop (c007) - (1100000000000111), Micro(32): 000000000000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:7
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 106.READ(5).0, PC: 4a, SP: 1ffc, BP: 2 MAR: 48(c007), MDR: 2 CR: 00001000
IR: pop (c007) - (1100000000000111), Micro(96): 100000000110000000000000000010000000000000000000
MAR_LOAD REGR0S(SP) OP1S(REGR1) REGR0(8188) OP0(8188) 
ALUout(8188) 

Stable after 3 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:7
ALU: 0:REGR0(1ffc) 1:REGR1(0) func: out:1ffc
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 106.READ(5).1, PC: 4a, SP: 1ffc, BP: 2 MAR: 48(c007), MDR: 2 CR: 00001000
IR: pop (c007) - (1100000000000111), Micro(96): 100000000110000000000000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:7
ALU: 0:REGR0(1ffc) 1:REGR1(0) func: out:1ffc
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ffc
-------------------------------------------------------------------------
cycle: 106.EXECUTE(7).0, PC: 4a, SP: 1ffc, BP: 2 MAR: 1ffc(2), MDR: 2 CR: 00001000
IR: pop (c007) - (1100000000000111), Micro(160): 001100000000000010100100010000000000010000000000
MDR_LOAD REGWS(TGT) MDRS(RAMout) OP0S(MDRout) REGR0(0) OP0(2) MDRin(2) 
ALUout(2) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:7
ALU: 0:MDRout(2) 1:REGR0(0) func: out:2
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 106.EXECUTE(7).1, PC: 4a, SP: 1ffc, BP: 2 MAR: 1ffc(2), MDR: 2 CR: 00001000
IR: pop (c007) - (1100000000000111), Micro(160): 001100000000000010100100010000000000010000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:7
ALU: 0:MDRout(2) 1:REGR0(0) func: out:2
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0002
PC <- 2
SP++
MAR <- 2
PC++
IR <- bc40
-------------------------------------------------------------------------
cycle: 107.DECODE(3).0, PC: 4, SP: 1ffe, BP: 2 MAR: 2(bc40), MDR: 2 CR: 00001000
IR: DECODING (bc40) Micro(30): 001000000000000000000010000000000000100000000000
MDR_LOAD IMMS(IMM7u) IRimm(16) REGR1(0) OP0(0) MDRin(16) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:1, 1:0, tgt:0
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 107.DECODE(3).1, PC: 4, SP: 1ffe, BP: 2 MAR: 2(bc40), MDR: 2 CR: 00001000
IR: addhi (bc40) - (1011110001000000), Micro(30): 001000000000000000000010000000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:1, 1:0, tgt:0
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0010
-------------------------------------------------------------------------
cycle: 107.EXECUTE(7).0, PC: 4, SP: 1ffe, BP: 2 MAR: 2(bc40), MDR: 10 CR: 00001000
IR: addhi (bc40) - (1011110001000000), Micro(158): 000100000000101110110000010010001100000000000000
REGR1S(TGT2) REGWS(TGT2) OP0S(MDRout) OP1S(REGR1) ALUS(LT) OP0(16) 
ALUout(8192) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:TGT2, w:TGT2
args: 0:1, 1:0, tgt:0
ALU: 0:MDRout(10) 1:REGR1(0) func: out:2000
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 107.EXECUTE(7).1, PC: 4, SP: 1ffe, BP: 2 MAR: 2(bc40), MDR: 10 CR: 00001000
IR: addhi (bc40) - (1011110001000000), Micro(158): 000100000000101110110000010010001100000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:TGT2, w:TGT2
args: 0:1, 1:0, tgt:0
ALU: 0:MDRout(10) 1:REGR1(0) func: out:2000
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
REG1 <- 2000
MAR <- 4
PC++
IR <- 9446
-------------------------------------------------------------------------
cycle: 108.DECODE(3).0, PC: 6, SP: 1ffe, BP: 2 MAR: 4(9446), MDR: 10 CR: 00001000
IR: DECODING (9446) Micro(10): 000100001000100110100000000010000001000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) IRimm(17) REGR0(8192) REGR1(0) OP0(8192) MDRin(17) 
ALUout(8192) 

Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:0, tgt:6
ALU: 0:REGR0(2000) 1:REGR1(0) func: out:2000
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 108.DECODE(3).1, PC: 6, SP: 1ffe, BP: 2 MAR: 4(9446), MDR: 10 CR: 00001000
IR: add (9446) - (1001010001000110), Micro(10): 000100001000100110100000000010000001000000000000

Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:0, tgt:6
ALU: 0:REGR0(2000) 1:REGR1(0) func: out:2000
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
SP <- 2000
MAR <- 6
PC++
IR <- a279
-------------------------------------------------------------------------
cycle: 109.DECODE(3).0, PC: 8, SP: 2000, BP: 2 MAR: 6(a279), MDR: 10 CR: 00001000
IR: DECODING (a279) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(2) REGR1(0) OP0(0) MDRin(2) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:1, 1:7, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 109.DECODE(3).1, PC: 8, SP: 2000, BP: 2 MAR: 6(a279), MDR: 10 CR: 00001000
IR: addi (a279) - (1010001001111001), Micro(17): 001000000000000000000001100000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:1, 1:7, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0002
-------------------------------------------------------------------------
cycle: 109.EXECUTE(7).0, PC: 8, SP: 2000, BP: 2 MAR: 6(a279), MDR: 2 CR: 00001000
IR: addi (a279) - (1010001001111001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(30) REGR1(8) OP0(8) OP1(2) MDRin(30) 
ALUout(10) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:1, 1:7, tgt:1
ALU: 0:REGR1(8) 1:MDRout(2) func: out:a
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 109.EXECUTE(7).1, PC: 8, SP: 2000, BP: 2 MAR: 6(a279), MDR: 2 CR: 00001000
IR: addi (a279) - (1010001001111001), Micro(145): 000100000000100110100000001100000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:1, 1:7, tgt:1
ALU: 0:REGR1(8) 1:MDRout(2) func: out:a
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
REG1 <- a
MAR <- 8
PC++
IR <- 2026
-------------------------------------------------------------------------
cycle: 110.DECODE(3).0, PC: a, SP: 2000, BP: 2 MAR: 8(2026), MDR: 2 CR: 00001000
IR: DECODING (2026) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(38) REGR1(0) OP0(0) MDRin(38) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:4, tgt:6
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 110.DECODE(3).1, PC: a, SP: 2000, BP: 2 MAR: 8(2026), MDR: 2 CR: 00001000
IR: br (2026) - (0010000000100110), Micro(1): 001000000000000000000001000000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:4, tgt:6
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0026
-------------------------------------------------------------------------
cycle: 110.EXECUTE(7).0, PC: a, SP: 2000, BP: 2 MAR: 8(2026), MDR: 26 CR: 00001000
IR: br (2026) - (0010000000100110), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(9) REGR0(10) OP0(38) OP1(10) MDRin(9) 
ALUout(48) 

Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:0, 1:4, tgt:6
ALU: 0:MDRout(26) 1:REGR0(a) func: out:30
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 110.EXECUTE(7).1, PC: a, SP: 2000, BP: 2 MAR: 8(2026), MDR: 26 CR: 00001000
IR: br (2026) - (0010000000100110), Micro(129): 000100000111000001110000010000000000000000000000

Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:0, 1:4, tgt:6
ALU: 0:MDRout(26) 1:REGR0(a) func: out:30
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
PC <- 30
MAR <- 30
PC++
IR <- be01
-------------------------------------------------------------------------
cycle: 111.DECODE(3).0, PC: 32, SP: 2000, BP: 2 MAR: 30(be01), MDR: 26 CR: 00001000
IR: DECODING (be01) Micro(31): 000000100000000000000000000000000000000000000000
IRimm(0) REGR1(0) OP0(0) MDRin(0) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 111.DECODE(3).1, PC: 32, SP: 2000, BP: 2 MAR: 30(be01), MDR: 26 CR: 00001000
IR: push (be01) - (1011111000000001), Micro(31): 000000100000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
SP--
-------------------------------------------------------------------------
cycle: 111.READ(5).0, PC: 32, SP: 1ffe, BP: 2 MAR: 30(be01), MDR: 26 CR: 00001000
IR: push (be01) - (1011111000000001), Micro(95): 100000000110000000000000000010000000000000000000
MAR_LOAD REGR0S(SP) OP1S(REGR1) REGR0(8190) OP0(8190) 
ALUout(8190) 

Stable after 3 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(1ffe) 1:REGR1(0) func: out:1ffe
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 111.READ(5).1, PC: 32, SP: 1ffe, BP: 2 MAR: 30(be01), MDR: 26 CR: 00001000
IR: push (be01) - (1011111000000001), Micro(95): 100000000110000000000000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(1ffe) 1:REGR1(0) func: out:1ffe
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ffe
-------------------------------------------------------------------------
cycle: 111.EXECUTE(7).0, PC: 32, SP: 1ffe, BP: 2 MAR: 1ffe(a), MDR: 26 CR: 00001000
IR: push (be01) - (1011111000000001), Micro(159): 001010001010000000001000000010000000000000000000
MDR_LOAD REGR0S(TGT) MDRS(ALUout) OP1S(REGR1) REGR0(10) OP0(10) MDRin(8190) 
ALUout(10) MDRin(10) 

Stable after 3 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(a) 1:REGR1(0) func: out:a
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 111.EXECUTE(7).1, PC: 32, SP: 1ffe, BP: 2 MAR: 1ffe(a), MDR: 26 CR: 00001000
IR: push (be01) - (1011111000000001), Micro(159): 001010001010000000001000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(a) 1:REGR1(0) func: out:a
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 000a
RAM[1ffe] <- a
MAR <- 32
PC++
IR <- be05
-------------------------------------------------------------------------
cycle: 112.DECODE(3).0, PC: 34, SP: 1ffe, BP: 2 MAR: 32(be05), MDR: a CR: 00001000
IR: DECODING (be05) Micro(31): 000000100000000000000000000000000000000000000000
IRimm(1) REGR1(0) OP0(0) MDRin(1) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 112.DECODE(3).1, PC: 34, SP: 1ffe, BP: 2 MAR: 32(be05), MDR: a CR: 00001000
IR: push (be05) - (1011111000000101), Micro(31): 000000100000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
SP--
-------------------------------------------------------------------------
cycle: 112.READ(5).0, PC: 34, SP: 1ffc, BP: 2 MAR: 32(be05), MDR: a CR: 00001000
IR: push (be05) - (1011111000000101), Micro(95): 100000000110000000000000000010000000000000000000
MAR_LOAD REGR0S(SP) OP1S(REGR1) REGR0(8188) OP0(8188) 
ALUout(8188) 

Stable after 3 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(1ffc) 1:REGR1(0) func: out:1ffc
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 112.READ(5).1, PC: 34, SP: 1ffc, BP: 2 MAR: 32(be05), MDR: a CR: 00001000
IR: push (be05) - (1011111000000101), Micro(95): 100000000110000000000000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(1ffc) 1:REGR1(0) func: out:1ffc
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ffc
-------------------------------------------------------------------------
cycle: 112.EXECUTE(7).0, PC: 34, SP: 1ffc, BP: 2 MAR: 1ffc(2), MDR: a CR: 00001000
IR: push (be05) - (1011111000000101), Micro(159): 001010001010000000001000000010000000000000000000
MDR_LOAD REGR0S(TGT) MDRS(ALUout) OP1S(REGR1) REGR0(2) OP0(2) MDRin(8188) 
ALUout(2) MDRin(2) 

Stable after 3 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(2) 1:REGR1(0) func: out:2
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 112.EXECUTE(7).1, PC: 34, SP: 1ffc, BP: 2 MAR: 1ffc(2), MDR: a CR: 00001000
IR: push (be05) - (1011111000000101), Micro(159): 001010001010000000001000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(2) 1:REGR1(0) func: out:2
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0002
RAM[1ffc] <- 2
MAR <- 34
PC++
IR <- 9585
-------------------------------------------------------------------------
cycle: 113.DECODE(3).0, PC: 36, SP: 1ffc, BP: 2 MAR: 34(9585), MDR: 2 CR: 00001000
IR: DECODING (9585) Micro(10): 000100001000100110100000000010000001000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) IRimm(65505) REGR0(8188) REGR1(0) OP0(8188) MDRin(65505) 
ALUout(8188) 

Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:6, 1:0, tgt:5
ALU: 0:REGR0(1ffc) 1:REGR1(0) func: out:1ffc
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 113.DECODE(3).1, PC: 36, SP: 1ffc, BP: 2 MAR: 34(9585), MDR: 2 CR: 00001000
IR: add (9585) - (1001010110000101), Micro(10): 000100001000100110100000000010000001000000000000

Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:6, 1:0, tgt:5
ALU: 0:REGR0(1ffc) 1:REGR1(0) func: out:1ffc
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
BP <- 1ffc
MAR <- 36
PC++
IR <- 14
-------------------------------------------------------------------------
cycle: 114.DECODE(3).0, PC: 38, SP: 1ffc, BP: 1ffc MAR: 36(14), MDR: 2 CR: 00001000
IR: DECODING (14) Micro(0): 001000000000000000000000110000000000100000000000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(2) REGR1(0) OP0(2) MDRin(2) 
ALUout(2) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:4
ALU: 0:MDRout(2) 1:REGR0(0) func: out:2
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 114.DECODE(3).1, PC: 38, SP: 1ffc, BP: 1ffc MAR: 36(14), MDR: 2 CR: 00001000
IR: ldi (14) - (0000000000010100), Micro(0): 001000000000000000000000110000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:4
ALU: 0:MDRout(2) 1:REGR0(0) func: out:2
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0002
-------------------------------------------------------------------------
cycle: 114.EXECUTE(7).0, PC: 38, SP: 1ffc, BP: 1ffc MAR: 36(14), MDR: 2 CR: 00001000
IR: ldi (14) - (0000000000010100), Micro(128): 000100000000000010100000010000000000000000000000
REGWS(TGT) OP0S(MDRout) IRimm(5) MDRin(5) 

Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:2, tgt:4
ALU: 0:MDRout(2) 1:REGR0(0) func: out:2
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 114.EXECUTE(7).1, PC: 38, SP: 1ffc, BP: 1ffc MAR: 36(14), MDR: 2 CR: 00001000
IR: ldi (14) - (0000000000010100), Micro(128): 000100000000000010100000010000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:2, tgt:4
ALU: 0:MDRout(2) 1:REGR0(0) func: out:2
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
REG4 <- 2
MAR <- 38
PC++
IR <- be04
-------------------------------------------------------------------------
cycle: 115.DECODE(3).0, PC: 3a, SP: 1ffc, BP: 1ffc MAR: 38(be04), MDR: 2 CR: 00001000
IR: DECODING (be04) Micro(31): 000000100000000000000000000000000000000000000000
IRimm(1) REGR1(0) OP0(0) MDRin(1) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:4
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 115.DECODE(3).1, PC: 3a, SP: 1ffc, BP: 1ffc MAR: 38(be04), MDR: 2 CR: 00001000
IR: push (be04) - (1011111000000100), Micro(31): 000000100000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:4
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
SP--
-------------------------------------------------------------------------
cycle: 115.READ(5).0, PC: 3a, SP: 1ffa, BP: 1ffc MAR: 38(be04), MDR: 2 CR: 00001000
IR: push (be04) - (1011111000000100), Micro(95): 100000000110000000000000000010000000000000000000
MAR_LOAD REGR0S(SP) OP1S(REGR1) REGR0(8186) OP0(8186) 
ALUout(8186) 

Stable after 3 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:4
ALU: 0:REGR0(1ffa) 1:REGR1(0) func: out:1ffa
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 115.READ(5).1, PC: 3a, SP: 1ffa, BP: 1ffc MAR: 38(be04), MDR: 2 CR: 00001000
IR: push (be04) - (1011111000000100), Micro(95): 100000000110000000000000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:4
ALU: 0:REGR0(1ffa) 1:REGR1(0) func: out:1ffa
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ffa
-------------------------------------------------------------------------
cycle: 115.EXECUTE(7).0, PC: 3a, SP: 1ffa, BP: 1ffc MAR: 1ffa(2), MDR: 2 CR: 00001000
IR: push (be04) - (1011111000000100), Micro(159): 001010001010000000001000000010000000000000000000
MDR_LOAD REGR0S(TGT) MDRS(ALUout) OP1S(REGR1) REGR0(2) OP0(2) MDRin(8186) 
ALUout(2) MDRin(2) 

Stable after 3 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:4
ALU: 0:REGR0(2) 1:REGR1(0) func: out:2
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 115.EXECUTE(7).1, PC: 3a, SP: 1ffa, BP: 1ffc MAR: 1ffa(2), MDR: 2 CR: 00001000
IR: push (be04) - (1011111000000100), Micro(159): 001010001010000000001000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:4
ALU: 0:REGR0(2) 1:REGR1(0) func: out:2
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0002
RAM[1ffa] <- 2
MAR <- 3a
PC++
IR <- a279
-------------------------------------------------------------------------
cycle: 116.DECODE(3).0, PC: 3c, SP: 1ffa, BP: 1ffc MAR: 3a(a279), MDR: 2 CR: 00001000
IR: DECODING (a279) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(2) REGR1(0) OP0(0) MDRin(2) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:1, 1:7, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 116.DECODE(3).1, PC: 3c, SP: 1ffa, BP: 1ffc MAR: 3a(a279), MDR: 2 CR: 00001000
IR: addi (a279) - (1010001001111001), Micro(17): 001000000000000000000001100000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:1, 1:7, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0002
-------------------------------------------------------------------------
cycle: 116.EXECUTE(7).0, PC: 3c, SP: 1ffa, BP: 1ffc MAR: 3a(a279), MDR: 2 CR: 00001000
IR: addi (a279) - (1010001001111001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(30) REGR1(60) OP0(60) OP1(2) MDRin(30) 
ALUout(62) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:1, 1:7, tgt:1
ALU: 0:REGR1(3c) 1:MDRout(2) func: out:3e
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 116.EXECUTE(7).1, PC: 3c, SP: 1ffa, BP: 1ffc MAR: 3a(a279), MDR: 2 CR: 00001000
IR: addi (a279) - (1010001001111001), Micro(145): 000100000000100110100000001100000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:1, 1:7, tgt:1
ALU: 0:REGR1(3c) 1:MDRout(2) func: out:3e
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
REG1 <- 3e
MAR <- 3c
PC++
IR <- 3fce
-------------------------------------------------------------------------
cycle: 117.DECODE(3).0, PC: 3e, SP: 1ffa, BP: 1ffc MAR: 3c(3fce), MDR: 2 CR: 00001000
IR: DECODING (3fce) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(65486) REGR1(0) OP0(0) MDRin(65486) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:1, tgt:6
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 117.DECODE(3).1, PC: 3e, SP: 1ffa, BP: 1ffc MAR: 3c(3fce), MDR: 2 CR: 00001000
IR: br (3fce) - (0011111111001110), Micro(1): 001000000000000000000001000000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:1, tgt:6
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- ffce
-------------------------------------------------------------------------
cycle: 117.EXECUTE(7).0, PC: 3e, SP: 1ffa, BP: 1ffc MAR: 3c(3fce), MDR: ffce CR: 00001000
IR: br (3fce) - (0011111111001110), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(65523) REGR0(62) OP0(65486) OP1(62) MDRin(65523) 
ALUout(12) 

Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:1, tgt:6
ALU: 0:MDRout(ffce) 1:REGR0(3e) func: out:c
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
CR <- a
-------------------------------------------------------------------------
cycle: 117.EXECUTE(7).1, PC: 3e, SP: 1ffa, BP: 1ffc MAR: 3c(3fce), MDR: ffce CR: 00001010
IR: br (3fce) - (0011111111001110), Micro(129): 000100000111000001110000010000000000000000000000

Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:7, 1:1, tgt:6
ALU: 0:MDRout(ffce) 1:REGR0(3e) func: out:c
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
PC <- c
MAR <- c
PC++
IR <- be01
-------------------------------------------------------------------------
cycle: 118.DECODE(3).0, PC: e, SP: 1ffa, BP: 1ffc MAR: c(be01), MDR: ffce CR: 00001010
IR: DECODING (be01) Micro(31): 000000100000000000000000000000000000000000000000
IRimm(0) REGR1(0) OP0(0) MDRin(0) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 118.DECODE(3).1, PC: e, SP: 1ffa, BP: 1ffc MAR: c(be01), MDR: ffce CR: 00001010
IR: push (be01) - (1011111000000001), Micro(31): 000000100000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
SP--
-------------------------------------------------------------------------
cycle: 118.READ(5).0, PC: e, SP: 1ff8, BP: 1ffc MAR: c(be01), MDR: ffce CR: 00001010
IR: push (be01) - (1011111000000001), Micro(95): 100000000110000000000000000010000000000000000000
MAR_LOAD REGR0S(SP) OP1S(REGR1) REGR0(8184) OP0(8184) 
ALUout(8184) 

Stable after 3 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(1ff8) 1:REGR1(0) func: out:1ff8
STACK:
1ffe 1ffc 1ffa 1ff8*1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 118.READ(5).1, PC: e, SP: 1ff8, BP: 1ffc MAR: c(be01), MDR: ffce CR: 00001010
IR: push (be01) - (1011111000000001), Micro(95): 100000000110000000000000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(1ff8) 1:REGR1(0) func: out:1ff8
STACK:
1ffe 1ffc 1ffa 1ff8*1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ff8
-------------------------------------------------------------------------
cycle: 118.EXECUTE(7).0, PC: e, SP: 1ff8, BP: 1ffc MAR: 1ff8(3e), MDR: ffce CR: 00001010
IR: push (be01) - (1011111000000001), Micro(159): 001010001010000000001000000010000000000000000000
MDR_LOAD REGR0S(TGT) MDRS(ALUout) OP1S(REGR1) REGR0(62) OP0(62) MDRin(8184) 
ALUout(62) MDRin(62) 

Stable after 3 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(3e) 1:REGR1(0) func: out:3e
STACK:
1ffe 1ffc 1ffa 1ff8*1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 118.EXECUTE(7).1, PC: e, SP: 1ff8, BP: 1ffc MAR: 1ff8(3e), MDR: ffce CR: 00001000
IR: push (be01) - (1011111000000001), Micro(159): 001010001010000000001000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(3e) 1:REGR1(0) func: out:3e
STACK:
1ffe 1ffc 1ffa 1ff8*1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 003e
RAM[1ff8] <- 3e
MAR <- e
PC++
IR <- be05
-------------------------------------------------------------------------
cycle: 119.DECODE(3).0, PC: 10, SP: 1ff8, BP: 1ffc MAR: e(be05), MDR: 3e CR: 00001000
IR: DECODING (be05) Micro(31): 000000100000000000000000000000000000000000000000
IRimm(1) REGR1(0) OP0(0) MDRin(1) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8*1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 119.DECODE(3).1, PC: 10, SP: 1ff8, BP: 1ffc MAR: e(be05), MDR: 3e CR: 00001000
IR: push (be05) - (1011111000000101), Micro(31): 000000100000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8*1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
SP--
-------------------------------------------------------------------------
cycle: 119.READ(5).0, PC: 10, SP: 1ff6, BP: 1ffc MAR: e(be05), MDR: 3e CR: 00001000
IR: push (be05) - (1011111000000101), Micro(95): 100000000110000000000000000010000000000000000000
MAR_LOAD REGR0S(SP) OP1S(REGR1) REGR0(8182) OP0(8182) 
ALUout(8182) 

Stable after 3 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(1ff6) 1:REGR1(0) func: out:1ff6
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 119.READ(5).1, PC: 10, SP: 1ff6, BP: 1ffc MAR: e(be05), MDR: 3e CR: 00001000
IR: push (be05) - (1011111000000101), Micro(95): 100000000110000000000000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(1ff6) 1:REGR1(0) func: out:1ff6
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ff6
-------------------------------------------------------------------------
cycle: 119.EXECUTE(7).0, PC: 10, SP: 1ff6, BP: 1ffc MAR: 1ff6(1ffc), MDR: 3e CR: 00001000
IR: push (be05) - (1011111000000101), Micro(159): 001010001010000000001000000010000000000000000000
MDR_LOAD REGR0S(TGT) MDRS(ALUout) OP1S(REGR1) REGR0(8188) OP0(8188) MDRin(8182) 
ALUout(8188) MDRin(8188) 

Stable after 3 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(1ffc) 1:REGR1(0) func: out:1ffc
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 119.EXECUTE(7).1, PC: 10, SP: 1ff6, BP: 1ffc MAR: 1ff6(1ffc), MDR: 3e CR: 00001000
IR: push (be05) - (1011111000000101), Micro(159): 001010001010000000001000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(1ffc) 1:REGR1(0) func: out:1ffc
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 1ffc
RAM[1ff6] <- 1ffc
MAR <- 10
PC++
IR <- 9585
-------------------------------------------------------------------------
cycle: 120.DECODE(3).0, PC: 12, SP: 1ff6, BP: 1ffc MAR: 10(9585), MDR: 1ffc CR: 00001000
IR: DECODING (9585) Micro(10): 000100001000100110100000000010000001000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) IRimm(65505) REGR0(8182) REGR1(0) OP0(8182) MDRin(65505) 
ALUout(8182) 

Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:6, 1:0, tgt:5
ALU: 0:REGR0(1ff6) 1:REGR1(0) func: out:1ff6
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 120.DECODE(3).1, PC: 12, SP: 1ff6, BP: 1ffc MAR: 10(9585), MDR: 1ffc CR: 00001000
IR: add (9585) - (1001010110000101), Micro(10): 000100001000100110100000000010000001000000000000

Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:6, 1:0, tgt:5
ALU: 0:REGR0(1ff6) 1:REGR1(0) func: out:1ff6
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
BP <- 1ff6
MAR <- 12
PC++
IR <- 34
-------------------------------------------------------------------------
cycle: 121.DECODE(3).0, PC: 14, SP: 1ff6, BP: 1ff6 MAR: 12(34), MDR: 1ffc CR: 00001000
IR: DECODING (34) Micro(0): 001000000000000000000000110000000000100000000000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(6) REGR1(0) OP0(8188) MDRin(6) 
ALUout(8188) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:6, tgt:4
ALU: 0:MDRout(1ffc) 1:REGR0(0) func: out:1ffc
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 121.DECODE(3).1, PC: 14, SP: 1ff6, BP: 1ff6 MAR: 12(34), MDR: 1ffc CR: 00001000
IR: ldi (34) - (0000000000110100), Micro(0): 001000000000000000000000110000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:6, tgt:4
ALU: 0:MDRout(1ffc) 1:REGR0(0) func: out:1ffc
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0006
-------------------------------------------------------------------------
cycle: 121.EXECUTE(7).0, PC: 14, SP: 1ff6, BP: 1ff6 MAR: 12(34), MDR: 6 CR: 00001000
IR: ldi (34) - (0000000000110100), Micro(128): 000100000000000010100000010000000000000000000000
REGWS(TGT) OP0S(MDRout) IRimm(13) MDRin(13) 

Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:6, tgt:4
ALU: 0:MDRout(6) 1:REGR0(0) func: out:6
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 121.EXECUTE(7).1, PC: 14, SP: 1ff6, BP: 1ff6 MAR: 12(34), MDR: 6 CR: 00001000
IR: ldi (34) - (0000000000110100), Micro(128): 000100000000000010100000010000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:6, tgt:4
ALU: 0:MDRout(6) 1:REGR0(0) func: out:6
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
REG4 <- 6
MAR <- 14
PC++
IR <- 97a6
-------------------------------------------------------------------------
cycle: 122.DECODE(3).0, PC: 16, SP: 1ff6, BP: 1ff6 MAR: 14(97a6), MDR: 6 CR: 00001000
IR: DECODING (97a6) Micro(11): 000100001000100110100000000010000011000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(65513) REGR0(8182) REGR1(6) OP0(8182) OP1(6) MDRin(65513) 
ALUout(8176) 

Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:6, 1:4, tgt:6
ALU: 0:REGR0(1ff6) 1:REGR1(6) func: out:1ff0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 122.DECODE(3).1, PC: 16, SP: 1ff6, BP: 1ff6 MAR: 14(97a6), MDR: 6 CR: 00001000
IR: sub (97a6) - (1001011110100110), Micro(11): 000100001000100110100000000010000011000000000000

Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:6, 1:4, tgt:6
ALU: 0:REGR0(1ff6) 1:REGR1(6) func: out:1ff0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
SP <- 1ff0
MAR <- 16
PC++
IR <- 54
-------------------------------------------------------------------------
cycle: 123.DECODE(3).0, PC: 18, SP: 1ff0, BP: 1ff6 MAR: 16(54), MDR: 6 CR: 00001000
IR: DECODING (54) Micro(0): 001000000000000000000000110000000000100000000000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(10) REGR1(0) OP0(6) MDRin(10) 
ALUout(6) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:1, 1:2, tgt:4
ALU: 0:MDRout(6) 1:REGR0(0) func: out:6
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 123.DECODE(3).1, PC: 18, SP: 1ff0, BP: 1ff6 MAR: 16(54), MDR: 6 CR: 00001000
IR: ldi (54) - (0000000001010100), Micro(0): 001000000000000000000000110000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:1, 1:2, tgt:4
ALU: 0:MDRout(6) 1:REGR0(0) func: out:6
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 000a
-------------------------------------------------------------------------
cycle: 123.EXECUTE(7).0, PC: 18, SP: 1ff0, BP: 1ff6 MAR: 16(54), MDR: a CR: 00001000
IR: ldi (54) - (0000000001010100), Micro(128): 000100000000000010100000010000000000000000000000
REGWS(TGT) OP0S(MDRout) IRimm(21) MDRin(21) 

Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:1, 1:2, tgt:4
ALU: 0:MDRout(a) 1:REGR0(0) func: out:a
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 123.EXECUTE(7).1, PC: 18, SP: 1ff0, BP: 1ff6 MAR: 16(54), MDR: a CR: 00001000
IR: ldi (54) - (0000000001010100), Micro(128): 000100000000000010100000010000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:1, 1:2, tgt:4
ALU: 0:MDRout(a) 1:REGR0(0) func: out:a
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
REG4 <- a
MAR <- 18
PC++
IR <- 8deb
-------------------------------------------------------------------------
cycle: 124.DECODE(3).0, PC: 1a, SP: 1ff0, BP: 1ff6 MAR: 18(8deb), MDR: a CR: 00001000
IR: DECODING (8deb) Micro(6): 001000000000000000000000000000000000000000000000
MDR_LOAD IRimm(65530) REGR1(0) OP0(0) MDRin(65530) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:5, tgt:3
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 124.DECODE(3).1, PC: 1a, SP: 1ff0, BP: 1ff6 MAR: 18(8deb), MDR: a CR: 00001000
IR: stw s7 (8deb) - (1000110111101011), Micro(6): 001000000000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:5, tgt:3
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- fffa
-------------------------------------------------------------------------
cycle: 124.READ(5).0, PC: 1a, SP: 1ff0, BP: 1ff6 MAR: 18(8deb), MDR: fffa CR: 00001000
IR: stw s7 (8deb) - (1000110111101011), Micro(70): 100000000101000000000000010000000000000000000000
MAR_LOAD REGR0S(BP) OP0S(MDRout) REGR0(8182) OP0(65530) OP1(8182) 
ALUout(8176) 

Stable after 3 vcycles.
regfile: r0:BP, r1:REG0, w:REG0
args: 0:7, 1:5, tgt:3
ALU: 0:MDRout(fffa) 1:REGR0(1ff6) func: out:1ff0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 124.READ(5).1, PC: 1a, SP: 1ff0, BP: 1ff6 MAR: 18(8deb), MDR: fffa CR: 00001000
IR: stw s7 (8deb) - (1000110111101011), Micro(70): 100000000101000000000000010000000000000000000000

Stable after 1 vcycles.
regfile: r0:BP, r1:REG0, w:REG0
args: 0:7, 1:5, tgt:3
ALU: 0:MDRout(fffa) 1:REGR0(1ff6) func: out:1ff0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ff0
-------------------------------------------------------------------------
cycle: 124.EXECUTE(7).0, PC: 1a, SP: 1ff0, BP: 1ff6 MAR: 1ff0(a), MDR: fffa CR: 00001000
IR: stw s7 (8deb) - (1000110111101011), Micro(134): 001010001011000000001000000010000000000000000000
MDR_LOAD REGR0S(TGT2) MDRS(ALUout) OP1S(REGR1) REGR0(10) OP0(10) OP1(0) MDRin(8176) 
ALUout(10) MDRin(10) 

Stable after 3 vcycles.
regfile: r0:TGT2, r1:REG0, w:REG0
args: 0:7, 1:5, tgt:3
ALU: 0:REGR0(a) 1:REGR1(0) func: out:a
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 124.EXECUTE(7).1, PC: 1a, SP: 1ff0, BP: 1ff6 MAR: 1ff0(a), MDR: fffa CR: 00001000
IR: stw s7 (8deb) - (1000110111101011), Micro(134): 001010001011000000001000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:TGT2, r1:REG0, w:REG0
args: 0:7, 1:5, tgt:3
ALU: 0:REGR0(a) 1:REGR1(0) func: out:a
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 000a
RAM[1ff0] <- a
MAR <- 1a
PC++
IR <- 91f0
-------------------------------------------------------------------------
cycle: 125.DECODE(3).0, PC: 1c, SP: 1ff0, BP: 1ff6 MAR: 1a(91f0), MDR: a CR: 00001000
IR: DECODING (91f0) Micro(8): 001000000000000000000000000000000000000000000000
MDR_LOAD IRimm(65532) REGR1(0) OP0(0) MDRin(65532) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:6, tgt:0
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 125.DECODE(3).1, PC: 1c, SP: 1ff0, BP: 1ff6 MAR: 1a(91f0), MDR: a CR: 00001000
IR: stw0 s7 (91f0) - (1001000111110000), Micro(8): 001000000000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:6, tgt:0
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- fffc
-------------------------------------------------------------------------
cycle: 125.READ(5).0, PC: 1c, SP: 1ff0, BP: 1ff6 MAR: 1a(91f0), MDR: fffc CR: 00001000
IR: stw0 s7 (91f0) - (1001000111110000), Micro(72): 100000000101000000000000010000000000000000000000
MAR_LOAD REGR0S(BP) OP0S(MDRout) REGR0(8182) OP0(65532) OP1(8182) 
ALUout(8178) 

Stable after 3 vcycles.
regfile: r0:BP, r1:REG0, w:REG0
args: 0:7, 1:6, tgt:0
ALU: 0:MDRout(fffc) 1:REGR0(1ff6) func: out:1ff2
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 125.READ(5).1, PC: 1c, SP: 1ff0, BP: 1ff6 MAR: 1a(91f0), MDR: fffc CR: 00001000
IR: stw0 s7 (91f0) - (1001000111110000), Micro(72): 100000000101000000000000010000000000000000000000

Stable after 1 vcycles.
regfile: r0:BP, r1:REG0, w:REG0
args: 0:7, 1:6, tgt:0
ALU: 0:MDRout(fffc) 1:REGR0(1ff6) func: out:1ff2
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ff2
-------------------------------------------------------------------------
cycle: 125.EXECUTE(7).0, PC: 1c, SP: 1ff0, BP: 1ff6 MAR: 1ff2(0), MDR: fffc CR: 00001000
IR: stw0 s7 (91f0) - (1001000111110000), Micro(136): 001010000000000000001000000010000000000000000000
MDR_LOAD MDRS(ALUout) OP1S(REGR1) REGR0(0) OP0(0) OP1(0) MDRin(8178) 
ALUout(0) MDRin(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:6, tgt:0
ALU: 0:REGR0(0) 1:REGR1(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 125.EXECUTE(7).1, PC: 1c, SP: 1ff0, BP: 1ff6 MAR: 1ff2(0), MDR: fffc CR: 00001000
IR: stw0 s7 (91f0) - (1001000111110000), Micro(136): 001010000000000000001000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:6, tgt:0
ALU: 0:REGR0(0) 1:REGR1(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0000
RAM[1ff2] <- 0
MAR <- 1c
PC++
IR <- 64
-------------------------------------------------------------------------
cycle: 126.DECODE(3).0, PC: 1e, SP: 1ff0, BP: 1ff6 MAR: 1c(64), MDR: 0 CR: 00001000
IR: DECODING (64) Micro(0): 001000000000000000000000110000000000100000000000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(12) REGR1(0) OP0(0) MDRin(12) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:1, 1:4, tgt:4
ALU: 0:MDRout(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 126.DECODE(3).1, PC: 1e, SP: 1ff0, BP: 1ff6 MAR: 1c(64), MDR: 0 CR: 00001000
IR: ldi (64) - (0000000001100100), Micro(0): 001000000000000000000000110000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:1, 1:4, tgt:4
ALU: 0:MDRout(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 000c
-------------------------------------------------------------------------
cycle: 126.EXECUTE(7).0, PC: 1e, SP: 1ff0, BP: 1ff6 MAR: 1c(64), MDR: c CR: 00001000
IR: ldi (64) - (0000000001100100), Micro(128): 000100000000000010100000010000000000000000000000
REGWS(TGT) OP0S(MDRout) IRimm(25) MDRin(25) 

Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:1, 1:4, tgt:4
ALU: 0:MDRout(c) 1:REGR0(0) func: out:c
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 126.EXECUTE(7).1, PC: 1e, SP: 1ff0, BP: 1ff6 MAR: 1c(64), MDR: c CR: 00001000
IR: ldi (64) - (0000000001100100), Micro(128): 000100000000000010100000010000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:1, 1:4, tgt:4
ALU: 0:MDRout(c) 1:REGR0(0) func: out:c
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
REG4 <- c
MAR <- 1e
PC++
IR <- 8dfb
-------------------------------------------------------------------------
cycle: 127.DECODE(3).0, PC: 20, SP: 1ff0, BP: 1ff6 MAR: 1e(8dfb), MDR: c CR: 00001000
IR: DECODING (8dfb) Micro(6): 001000000000000000000000000000000000000000000000
MDR_LOAD IRimm(65534) REGR1(0) OP0(0) MDRin(65534) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:3
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 127.DECODE(3).1, PC: 20, SP: 1ff0, BP: 1ff6 MAR: 1e(8dfb), MDR: c CR: 00001000
IR: stw s7 (8dfb) - (1000110111111011), Micro(6): 001000000000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:3
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- fffe
-------------------------------------------------------------------------
cycle: 127.READ(5).0, PC: 20, SP: 1ff0, BP: 1ff6 MAR: 1e(8dfb), MDR: fffe CR: 00001000
IR: stw s7 (8dfb) - (1000110111111011), Micro(70): 100000000101000000000000010000000000000000000000
MAR_LOAD REGR0S(BP) OP0S(MDRout) REGR0(8182) OP0(65534) OP1(8182) 
ALUout(8180) 

Stable after 3 vcycles.
regfile: r0:BP, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:3
ALU: 0:MDRout(fffe) 1:REGR0(1ff6) func: out:1ff4
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 127.READ(5).1, PC: 20, SP: 1ff0, BP: 1ff6 MAR: 1e(8dfb), MDR: fffe CR: 00001000
IR: stw s7 (8dfb) - (1000110111111011), Micro(70): 100000000101000000000000010000000000000000000000

Stable after 1 vcycles.
regfile: r0:BP, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:3
ALU: 0:MDRout(fffe) 1:REGR0(1ff6) func: out:1ff4
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ff4
-------------------------------------------------------------------------
cycle: 127.EXECUTE(7).0, PC: 20, SP: 1ff0, BP: 1ff6 MAR: 1ff4(c), MDR: fffe CR: 00001000
IR: stw s7 (8dfb) - (1000110111111011), Micro(134): 001010001011000000001000000010000000000000000000
MDR_LOAD REGR0S(TGT2) MDRS(ALUout) OP1S(REGR1) REGR0(12) OP0(12) OP1(0) MDRin(8180) 
ALUout(12) MDRin(12) 

Stable after 3 vcycles.
regfile: r0:TGT2, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:3
ALU: 0:REGR0(c) 1:REGR1(0) func: out:c
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 127.EXECUTE(7).1, PC: 20, SP: 1ff0, BP: 1ff6 MAR: 1ff4(c), MDR: fffe CR: 00001000
IR: stw s7 (8dfb) - (1000110111111011), Micro(134): 001010001011000000001000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:TGT2, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:3
ALU: 0:REGR0(c) 1:REGR1(0) func: out:c
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 000c
RAM[1ff4] <- c
MAR <- 20
PC++
IR <- 8813
-------------------------------------------------------------------------
cycle: 128.DECODE(3).0, PC: 22, SP: 1ff0, BP: 1ff6 MAR: 20(8813), MDR: c CR: 00001000
IR: DECODING (8813) Micro(4): 001000000000000000000000000000000000000000000000
MDR_LOAD IRimm(4) REGR1(0) OP0(0) MDRin(4) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:3
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 128.DECODE(3).1, PC: 22, SP: 1ff0, BP: 1ff6 MAR: 20(8813), MDR: c CR: 00001000
IR: ldw s7 (8813) - (1000100000010011), Micro(4): 001000000000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:3
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0004
-------------------------------------------------------------------------
cycle: 128.READ(5).0, PC: 22, SP: 1ff0, BP: 1ff6 MAR: 20(8813), MDR: 4 CR: 00001000
IR: ldw s7 (8813) - (1000100000010011), Micro(68): 100000000101000000000000010000000000000000000000
MAR_LOAD REGR0S(BP) OP0S(MDRout) REGR0(8182) OP0(4) OP1(8182) 
ALUout(8186) 

Stable after 3 vcycles.
regfile: r0:BP, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:3
ALU: 0:MDRout(4) 1:REGR0(1ff6) func: out:1ffa
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 128.READ(5).1, PC: 22, SP: 1ff0, BP: 1ff6 MAR: 20(8813), MDR: 4 CR: 00001000
IR: ldw s7 (8813) - (1000100000010011), Micro(68): 100000000101000000000000010000000000000000000000

Stable after 1 vcycles.
regfile: r0:BP, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:3
ALU: 0:MDRout(4) 1:REGR0(1ff6) func: out:1ffa
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ffa
-------------------------------------------------------------------------
cycle: 128.EXECUTE(7).0, PC: 22, SP: 1ff0, BP: 1ff6 MAR: 1ffa(2), MDR: 4 CR: 00001000
IR: ldw s7 (8813) - (1000100000010011), Micro(132): 001100000000000010110100010000000000000000000000
MDR_LOAD REGWS(TGT2) MDRS(RAMout) OP0S(MDRout) REGR0(0) OP1(0) MDRin(2) 
ALUout(4) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT2
args: 0:0, 1:2, tgt:3
ALU: 0:MDRout(4) 1:REGR0(0) func: out:4
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 128.EXECUTE(7).1, PC: 22, SP: 1ff0, BP: 1ff6 MAR: 1ffa(2), MDR: 4 CR: 00001000
IR: ldw s7 (8813) - (1000100000010011), Micro(132): 001100000000000010110100010000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT2
args: 0:0, 1:2, tgt:3
ALU: 0:MDRout(4) 1:REGR0(0) func: out:4
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0002
REG4 <- 2
MAR <- 22
PC++
IR <- b813
-------------------------------------------------------------------------
cycle: 129.DECODE(3).0, PC: 24, SP: 1ff0, BP: 1ff6 MAR: 22(b813), MDR: 2 CR: 00001000
IR: DECODING (b813) Micro(28): 001000000000000000000010100000000000000000000000
MDR_LOAD IMMS(IMM4) IRimm(0) REGR1(0) OP0(0) MDRin(0) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:3
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 129.DECODE(3).1, PC: 24, SP: 1ff0, BP: 1ff6 MAR: 22(b813), MDR: 2 CR: 00001000
IR: shl (b813) - (1011100000010011), Micro(28): 001000000000000000000010100000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:3
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0000
-------------------------------------------------------------------------
cycle: 129.READ(5).0, PC: 24, SP: 1ff0, BP: 1ff6 MAR: 22(b813), MDR: 0 CR: 00001000
IR: shl (b813) - (1011100000010011), Micro(92): 000000000000000000000000000000000000000000000000
IRimm(4) MDRin(4) 

Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:3
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 129.READ(5).1, PC: 24, SP: 1ff0, BP: 1ff6 MAR: 22(b813), MDR: 0 CR: 00001000
IR: shl (b813) - (1011100000010011), Micro(92): 000000000000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:3
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 129.EXECUTE(7).0, PC: 24, SP: 1ff0, BP: 1ff6 MAR: 22(b813), MDR: 0 CR: 00001000
IR: shl (b813) - (1011100000010011), Micro(156): 000100001100000010110000000100001000000000000000
REGR0S(ARG2) REGWS(TGT2) OP1S(MDRout) ALUS(EQ) REGR0(2) OP0(2) 
ALUout(4) 

Stable after 3 vcycles.
regfile: r0:ARG2, r1:REG0, w:TGT2
args: 0:0, 1:2, tgt:3
ALU: 0:REGR0(2) 1:MDRout(0) func: out:4
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 129.EXECUTE(7).1, PC: 24, SP: 1ff0, BP: 1ff6 MAR: 22(b813), MDR: 0 CR: 00001000
IR: shl (b813) - (1011100000010011), Micro(156): 000100001100000010110000000100001000000000000000

Stable after 1 vcycles.
regfile: r0:ARG2, r1:REG0, w:TGT2
args: 0:0, 1:2, tgt:3
ALU: 0:REGR0(2) 1:MDRout(0) func: out:4
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
REG4 <- 4
MAR <- 24
PC++
IR <- 1fd3
-------------------------------------------------------------------------
cycle: 130.DECODE(3).0, PC: 26, SP: 1ff0, BP: 1ff6 MAR: 24(1fd3), MDR: 0 CR: 00001000
IR: DECODING (1fd3) Micro(0): 001000000000000000000000110000000000100000000000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(65530) REGR1(0) OP0(0) MDRin(65530) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:2, tgt:3
ALU: 0:MDRout(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 130.DECODE(3).1, PC: 26, SP: 1ff0, BP: 1ff6 MAR: 24(1fd3), MDR: 0 CR: 00001000
IR: ldi (1fd3) - (0001111111010011), Micro(0): 001000000000000000000000110000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:2, tgt:3
ALU: 0:MDRout(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- fffa
-------------------------------------------------------------------------
cycle: 130.EXECUTE(7).0, PC: 26, SP: 1ff0, BP: 1ff6 MAR: 24(1fd3), MDR: fffa CR: 00001000
IR: ldi (1fd3) - (0001111111010011), Micro(128): 000100000000000010100000010000000000000000000000
REGWS(TGT) OP0S(MDRout) IRimm(65524) MDRin(65524) 

Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:7, 1:2, tgt:3
ALU: 0:MDRout(fffa) 1:REGR0(0) func: out:fffa
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 130.EXECUTE(7).1, PC: 26, SP: 1ff0, BP: 1ff6 MAR: 24(1fd3), MDR: fffa CR: 00001000
IR: ldi (1fd3) - (0001111111010011), Micro(128): 000100000000000010100000010000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:7, 1:2, tgt:3
ALU: 0:MDRout(fffa) 1:REGR0(0) func: out:fffa
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
REG3 <- fffa
MAR <- 26
PC++
IR <- 94eb
-------------------------------------------------------------------------
cycle: 131.DECODE(3).0, PC: 28, SP: 1ff0, BP: 1ff6 MAR: 26(94eb), MDR: fffa CR: 00001000
IR: DECODING (94eb) Micro(10): 000100001000100110100000000010000001000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) IRimm(58) REGR0(65530) REGR1(8182) OP0(65530) OP1(8182) MDRin(58) 
ALUout(8176) 

Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:3, 1:5, tgt:3
ALU: 0:REGR0(fffa) 1:REGR1(1ff6) func: out:1ff0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 131.DECODE(3).1, PC: 28, SP: 1ff0, BP: 1ff6 MAR: 26(94eb), MDR: fffa CR: 00001000
IR: add (94eb) - (1001010011101011), Micro(10): 000100001000100110100000000010000001000000000000

Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:3, 1:5, tgt:3
ALU: 0:REGR0(fffa) 1:REGR1(1ff6) func: out:1ff0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
REG3 <- 1ff0
MAR <- 28
PC++
IR <- b119
-------------------------------------------------------------------------
cycle: 132.DECODE(3).0, PC: 2a, SP: 1ff0, BP: 1ff6 MAR: 28(b119), MDR: fffa CR: 00001000
IR: DECODING (b119) Micro(24): 000000000000000000000000000000000000000000000000
IRimm(65478) REGR1(0) OP0(0) MDRin(65478) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:4, 1:3, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 132.DECODE(3).1, PC: 2a, SP: 1ff0, BP: 1ff6 MAR: 28(b119), MDR: fffa CR: 00001000
IR: ldw.b (b119) - (1011000100011001), Micro(24): 000000000000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:4, 1:3, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 132.READ(5).0, PC: 2a, SP: 1ff0, BP: 1ff6 MAR: 28(b119), MDR: fffa CR: 00001000
IR: ldw.b (b119) - (1011000100011001), Micro(88): 100000001000100100000000000010000000000000000000
MAR_LOAD REGR0S(ARG0) REGR1S(ARG1) OP1S(REGR1) REGR0(4) REGR1(8176) OP0(4) OP1(8176) 
ALUout(8180) 

Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:REG0
args: 0:4, 1:3, tgt:1
ALU: 0:REGR0(4) 1:REGR1(1ff0) func: out:1ff4
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 132.READ(5).1, PC: 2a, SP: 1ff0, BP: 1ff6 MAR: 28(b119), MDR: fffa CR: 00001000
IR: ldw.b (b119) - (1011000100011001), Micro(88): 100000001000100100000000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:REG0
args: 0:4, 1:3, tgt:1
ALU: 0:REGR0(4) 1:REGR1(1ff0) func: out:1ff4
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ff4
-------------------------------------------------------------------------
cycle: 132.EXECUTE(7).0, PC: 2a, SP: 1ff0, BP: 1ff6 MAR: 1ff4(c), MDR: fffa CR: 00001000
IR: ldw.b (b119) - (1011000100011001), Micro(152): 001100000000000010100100010000000000000000000000
MDR_LOAD REGWS(TGT) MDRS(RAMout) OP0S(MDRout) REGR0(0) REGR1(0) OP0(65530) OP1(0) MDRin(12) 
ALUout(65530) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:4, 1:3, tgt:1
ALU: 0:MDRout(fffa) 1:REGR0(0) func: out:fffa
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 132.EXECUTE(7).1, PC: 2a, SP: 1ff0, BP: 1ff6 MAR: 1ff4(c), MDR: fffa CR: 00001000
IR: ldw.b (b119) - (1011000100011001), Micro(152): 001100000000000010100100010000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:4, 1:3, tgt:1
ALU: 0:MDRout(fffa) 1:REGR0(0) func: out:fffa
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 000c
REG1 <- c
MAR <- 2a
PC++
IR <- 9546
-------------------------------------------------------------------------
cycle: 133.DECODE(3).0, PC: 2c, SP: 1ff0, BP: 1ff6 MAR: 2a(9546), MDR: c CR: 00001000
IR: DECODING (9546) Micro(10): 000100001000100110100000000010000001000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) IRimm(65489) REGR0(8182) REGR1(0) OP0(8182) MDRin(65489) 
ALUout(8182) 

Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:5, 1:0, tgt:6
ALU: 0:REGR0(1ff6) 1:REGR1(0) func: out:1ff6
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 133.DECODE(3).1, PC: 2c, SP: 1ff0, BP: 1ff6 MAR: 2a(9546), MDR: c CR: 00001000
IR: add (9546) - (1001010101000110), Micro(10): 000100001000100110100000000010000001000000000000

Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:5, 1:0, tgt:6
ALU: 0:REGR0(1ff6) 1:REGR1(0) func: out:1ff6
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0*1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
SP <- 1ff6
MAR <- 2c
PC++
IR <- c005
-------------------------------------------------------------------------
cycle: 134.DECODE(3).0, PC: 2e, SP: 1ff6, BP: 1ff6 MAR: 2c(c005), MDR: c CR: 00001000
IR: DECODING (c005) Micro(32): 000000000000000000000000000000000000000000000000
IRimm(1) REGR1(0) OP0(0) MDRin(1) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 134.DECODE(3).1, PC: 2e, SP: 1ff6, BP: 1ff6 MAR: 2c(c005), MDR: c CR: 00001000
IR: pop (c005) - (1100000000000101), Micro(32): 000000000000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 134.READ(5).0, PC: 2e, SP: 1ff6, BP: 1ff6 MAR: 2c(c005), MDR: c CR: 00001000
IR: pop (c005) - (1100000000000101), Micro(96): 100000000110000000000000000010000000000000000000
MAR_LOAD REGR0S(SP) OP1S(REGR1) REGR0(8182) OP0(8182) 
ALUout(8182) 

Stable after 3 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(1ff6) 1:REGR1(0) func: out:1ff6
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 134.READ(5).1, PC: 2e, SP: 1ff6, BP: 1ff6 MAR: 2c(c005), MDR: c CR: 00001000
IR: pop (c005) - (1100000000000101), Micro(96): 100000000110000000000000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(1ff6) 1:REGR1(0) func: out:1ff6
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ff6
-------------------------------------------------------------------------
cycle: 134.EXECUTE(7).0, PC: 2e, SP: 1ff6, BP: 1ff6 MAR: 1ff6(1ffc), MDR: c CR: 00001000
IR: pop (c005) - (1100000000000101), Micro(160): 001100000000000010100100010000000000010000000000
MDR_LOAD REGWS(TGT) MDRS(RAMout) OP0S(MDRout) REGR0(0) OP0(12) MDRin(8188) 
ALUout(12) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:5
ALU: 0:MDRout(c) 1:REGR0(0) func: out:c
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 134.EXECUTE(7).1, PC: 2e, SP: 1ff6, BP: 1ff6 MAR: 1ff6(1ffc), MDR: c CR: 00001000
IR: pop (c005) - (1100000000000101), Micro(160): 001100000000000010100100010000000000010000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:5
ALU: 0:MDRout(c) 1:REGR0(0) func: out:c
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6*1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 1ffc
BP <- 1ffc
SP++
MAR <- 2e
PC++
IR <- c007
-------------------------------------------------------------------------
cycle: 135.DECODE(3).0, PC: 30, SP: 1ff8, BP: 1ffc MAR: 2e(c007), MDR: 1ffc CR: 00001000
IR: DECODING (c007) Micro(32): 000000000000000000000000000000000000000000000000
REGR1(0) OP0(0) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:7
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8*1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 135.DECODE(3).1, PC: 30, SP: 1ff8, BP: 1ffc MAR: 2e(c007), MDR: 1ffc CR: 00001000
IR: pop (c007) - (1100000000000111), Micro(32): 000000000000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:7
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8*1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 135.READ(5).0, PC: 30, SP: 1ff8, BP: 1ffc MAR: 2e(c007), MDR: 1ffc CR: 00001000
IR: pop (c007) - (1100000000000111), Micro(96): 100000000110000000000000000010000000000000000000
MAR_LOAD REGR0S(SP) OP1S(REGR1) REGR0(8184) OP0(8184) 
ALUout(8184) 

Stable after 3 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:7
ALU: 0:REGR0(1ff8) 1:REGR1(0) func: out:1ff8
STACK:
1ffe 1ffc 1ffa 1ff8*1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 135.READ(5).1, PC: 30, SP: 1ff8, BP: 1ffc MAR: 2e(c007), MDR: 1ffc CR: 00001000
IR: pop (c007) - (1100000000000111), Micro(96): 100000000110000000000000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:7
ALU: 0:REGR0(1ff8) 1:REGR1(0) func: out:1ff8
STACK:
1ffe 1ffc 1ffa 1ff8*1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ff8
-------------------------------------------------------------------------
cycle: 135.EXECUTE(7).0, PC: 30, SP: 1ff8, BP: 1ffc MAR: 1ff8(3e), MDR: 1ffc CR: 00001000
IR: pop (c007) - (1100000000000111), Micro(160): 001100000000000010100100010000000000010000000000
MDR_LOAD REGWS(TGT) MDRS(RAMout) OP0S(MDRout) REGR0(0) OP0(8188) MDRin(62) 
ALUout(8188) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:7
ALU: 0:MDRout(1ffc) 1:REGR0(0) func: out:1ffc
STACK:
1ffe 1ffc 1ffa 1ff8*1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 135.EXECUTE(7).1, PC: 30, SP: 1ff8, BP: 1ffc MAR: 1ff8(3e), MDR: 1ffc CR: 00001000
IR: pop (c007) - (1100000000000111), Micro(160): 001100000000000010100100010000000000010000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:7
ALU: 0:MDRout(1ffc) 1:REGR0(0) func: out:1ffc
STACK:
1ffe 1ffc 1ffa 1ff8*1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 003e
PC <- 3e
SP++
MAR <- 3e
PC++
IR <- 3
-------------------------------------------------------------------------
cycle: 136.DECODE(3).0, PC: 40, SP: 1ffa, BP: 1ffc MAR: 3e(3), MDR: 3e CR: 00001000
IR: DECODING (3) Micro(0): 001000000000000000000000110000000000100000000000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(0) REGR1(0) MDRin(0) 

Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:3
ALU: 0:MDRout(3e) 1:REGR0(0) func: out:3e
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 136.DECODE(3).1, PC: 40, SP: 1ffa, BP: 1ffc MAR: 3e(3), MDR: 3e CR: 00001000
IR: ldi (3) - (0000000000000011), Micro(0): 001000000000000000000000110000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:3
ALU: 0:MDRout(3e) 1:REGR0(0) func: out:3e
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0000
-------------------------------------------------------------------------
cycle: 136.EXECUTE(7).0, PC: 40, SP: 1ffa, BP: 1ffc MAR: 3e(3), MDR: 0 CR: 00001000
IR: ldi (3) - (0000000000000011), Micro(128): 000100000000000010100000010000000000000000000000
REGWS(TGT) OP0S(MDRout) 

Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:3
ALU: 0:MDRout(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 136.EXECUTE(7).1, PC: 40, SP: 1ffa, BP: 1ffc MAR: 3e(3), MDR: 0 CR: 00001000
IR: ldi (3) - (0000000000000011), Micro(128): 000100000000000010100000010000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:3
ALU: 0:MDRout(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
REG3 <- 0
MAR <- 40
PC++
IR <- bc22
-------------------------------------------------------------------------
cycle: 137.DECODE(3).0, PC: 42, SP: 1ffa, BP: 1ffc MAR: 40(bc22), MDR: 0 CR: 00001000
IR: DECODING (bc22) Micro(30): 001000000000000000000010000000000000100000000000
MDR_LOAD IMMS(IMM7u) IRimm(8) REGR1(0) OP0(0) MDRin(8) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:4, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 137.DECODE(3).1, PC: 42, SP: 1ffa, BP: 1ffc MAR: 40(bc22), MDR: 0 CR: 00001000
IR: addhi (bc22) - (1011110000100010), Micro(30): 001000000000000000000010000000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:4, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0008
-------------------------------------------------------------------------
cycle: 137.EXECUTE(7).0, PC: 42, SP: 1ffa, BP: 1ffc MAR: 40(bc22), MDR: 8 CR: 00001000
IR: addhi (bc22) - (1011110000100010), Micro(158): 000100000000101110110000010010001100000000000000
REGR1S(TGT2) REGWS(TGT2) OP0S(MDRout) OP1S(REGR1) ALUS(LT) OP0(8) 
ALUout(4096) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:TGT2, w:TGT2
args: 0:0, 1:4, tgt:2
ALU: 0:MDRout(8) 1:REGR1(0) func: out:1000
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 137.EXECUTE(7).1, PC: 42, SP: 1ffa, BP: 1ffc MAR: 40(bc22), MDR: 8 CR: 00001000
IR: addhi (bc22) - (1011110000100010), Micro(158): 000100000000101110110000010010001100000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:TGT2, w:TGT2
args: 0:0, 1:4, tgt:2
ALU: 0:MDRout(8) 1:REGR1(0) func: out:1000
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
REG3 <- 1000
MAR <- 42
PC++
IR <- b419
-------------------------------------------------------------------------
cycle: 138.DECODE(3).0, PC: 44, SP: 1ffa, BP: 1ffc MAR: 42(b419), MDR: 8 CR: 00001000
IR: DECODING (b419) Micro(26): 000000000000000000000000000000000000000000000000
IRimm(6) REGR1(0) OP0(0) MDRin(6) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:3, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 138.DECODE(3).1, PC: 44, SP: 1ffa, BP: 1ffc MAR: 42(b419), MDR: 8 CR: 00001000
IR: stw.b (b419) - (1011010000011001), Micro(26): 000000000000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:3, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 138.READ(5).0, PC: 44, SP: 1ffa, BP: 1ffc MAR: 42(b419), MDR: 8 CR: 00001000
IR: stw.b (b419) - (1011010000011001), Micro(90): 100000001000100100000000000010000000000000000000
MAR_LOAD REGR0S(ARG0) REGR1S(ARG1) OP1S(REGR1) REGR1(4096) OP1(4096) 
ALUout(4096) 

Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:REG0
args: 0:0, 1:3, tgt:1
ALU: 0:REGR0(0) 1:REGR1(1000) func: out:1000
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 138.READ(5).1, PC: 44, SP: 1ffa, BP: 1ffc MAR: 42(b419), MDR: 8 CR: 00001000
IR: stw.b (b419) - (1011010000011001), Micro(90): 100000001000100100000000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:REG0
args: 0:0, 1:3, tgt:1
ALU: 0:REGR0(0) 1:REGR1(1000) func: out:1000
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1000
-------------------------------------------------------------------------
cycle: 138.EXECUTE(7).0, PC: 44, SP: 1ffa, BP: 1ffc MAR: 1000(c), MDR: 8 CR: 00001000
IR: stw.b (b419) - (1011010000011001), Micro(154): 001010001010000000001000000010000000000000000000
MDR_LOAD REGR0S(TGT) MDRS(ALUout) OP1S(REGR1) REGR0(12) REGR1(0) OP0(12) OP1(0) MDRin(4096) 
ALUout(12) MDRin(12) 

Stable after 3 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:3, tgt:1
ALU: 0:REGR0(c) 1:REGR1(0) func: out:c
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 138.EXECUTE(7).1, PC: 44, SP: 1ffa, BP: 1ffc MAR: 1000(c), MDR: 8 CR: 00001000
IR: stw.b (b419) - (1011010000011001), Micro(154): 001010001010000000001000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:3, tgt:1
ALU: 0:REGR0(c) 1:REGR1(0) func: out:c
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 000c
RAM[1000] <- c
MAR <- 44
PC++
IR <- 9401
-------------------------------------------------------------------------
cycle: 139.DECODE(3).0, PC: 46, SP: 1ffa, BP: 1ffc MAR: 44(9401), MDR: c CR: 00001000
IR: DECODING (9401) Micro(10): 000100001000100110100000000010000001000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) IRimm(0) REGR1(0) OP0(0) MDRin(0) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(0) 1:REGR1(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 139.DECODE(3).1, PC: 46, SP: 1ffa, BP: 1ffc MAR: 44(9401), MDR: c CR: 00001000
IR: add (9401) - (1001010000000001), Micro(10): 000100001000100110100000000010000001000000000000

Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(0) 1:REGR1(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
REG1 <- 0
MAR <- 46
PC++
IR <- c005
-------------------------------------------------------------------------
cycle: 140.DECODE(3).0, PC: 48, SP: 1ffa, BP: 1ffc MAR: 46(c005), MDR: c CR: 00001000
IR: DECODING (c005) Micro(32): 000000000000000000000000000000000000000000000000
IRimm(1) REGR1(0) OP0(0) MDRin(1) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 140.DECODE(3).1, PC: 48, SP: 1ffa, BP: 1ffc MAR: 46(c005), MDR: c CR: 00001000
IR: pop (c005) - (1100000000000101), Micro(32): 000000000000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 140.READ(5).0, PC: 48, SP: 1ffa, BP: 1ffc MAR: 46(c005), MDR: c CR: 00001000
IR: pop (c005) - (1100000000000101), Micro(96): 100000000110000000000000000010000000000000000000
MAR_LOAD REGR0S(SP) OP1S(REGR1) REGR0(8186) OP0(8186) 
ALUout(8186) 

Stable after 3 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(1ffa) 1:REGR1(0) func: out:1ffa
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 140.READ(5).1, PC: 48, SP: 1ffa, BP: 1ffc MAR: 46(c005), MDR: c CR: 00001000
IR: pop (c005) - (1100000000000101), Micro(96): 100000000110000000000000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(1ffa) 1:REGR1(0) func: out:1ffa
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ffa
-------------------------------------------------------------------------
cycle: 140.EXECUTE(7).0, PC: 48, SP: 1ffa, BP: 1ffc MAR: 1ffa(2), MDR: c CR: 00001000
IR: pop (c005) - (1100000000000101), Micro(160): 001100000000000010100100010000000000010000000000
MDR_LOAD REGWS(TGT) MDRS(RAMout) OP0S(MDRout) REGR0(0) OP0(12) MDRin(2) 
ALUout(12) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:5
ALU: 0:MDRout(c) 1:REGR0(0) func: out:c
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 140.EXECUTE(7).1, PC: 48, SP: 1ffa, BP: 1ffc MAR: 1ffa(2), MDR: c CR: 00001000
IR: pop (c005) - (1100000000000101), Micro(160): 001100000000000010100100010000000000010000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:5
ALU: 0:MDRout(c) 1:REGR0(0) func: out:c
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0002
BP <- 2
SP++
MAR <- 48
PC++
IR <- c007
-------------------------------------------------------------------------
cycle: 141.DECODE(3).0, PC: 4a, SP: 1ffc, BP: 2 MAR: 48(c007), MDR: 2 CR: 00001000
IR: DECODING (c007) Micro(32): 000000000000000000000000000000000000000000000000
REGR1(0) OP0(0) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:7
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 141.DECODE(3).1, PC: 4a, SP: 1ffc, BP: 2 MAR: 48(c007), MDR: 2 CR: 00001000
IR: pop (c007) - (1100000000000111), Micro(32): 000000000000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:7
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 141.READ(5).0, PC: 4a, SP: 1ffc, BP: 2 MAR: 48(c007), MDR: 2 CR: 00001000
IR: pop (c007) - (1100000000000111), Micro(96): 100000000110000000000000000010000000000000000000
MAR_LOAD REGR0S(SP) OP1S(REGR1) REGR0(8188) OP0(8188) 
ALUout(8188) 

Stable after 3 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:7
ALU: 0:REGR0(1ffc) 1:REGR1(0) func: out:1ffc
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 141.READ(5).1, PC: 4a, SP: 1ffc, BP: 2 MAR: 48(c007), MDR: 2 CR: 00001000
IR: pop (c007) - (1100000000000111), Micro(96): 100000000110000000000000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:7
ALU: 0:REGR0(1ffc) 1:REGR1(0) func: out:1ffc
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ffc
-------------------------------------------------------------------------
cycle: 141.EXECUTE(7).0, PC: 4a, SP: 1ffc, BP: 2 MAR: 1ffc(2), MDR: 2 CR: 00001000
IR: pop (c007) - (1100000000000111), Micro(160): 001100000000000010100100010000000000010000000000
MDR_LOAD REGWS(TGT) MDRS(RAMout) OP0S(MDRout) REGR0(0) OP0(2) MDRin(2) 
ALUout(2) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:7
ALU: 0:MDRout(2) 1:REGR0(0) func: out:2
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 141.EXECUTE(7).1, PC: 4a, SP: 1ffc, BP: 2 MAR: 1ffc(2), MDR: 2 CR: 00001000
IR: pop (c007) - (1100000000000111), Micro(160): 001100000000000010100100010000000000010000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:7
ALU: 0:MDRout(2) 1:REGR0(0) func: out:2
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0002
PC <- 2
SP++
MAR <- 2
PC++
IR <- bc40
-------------------------------------------------------------------------
cycle: 142.DECODE(3).0, PC: 4, SP: 1ffe, BP: 2 MAR: 2(bc40), MDR: 2 CR: 00001000
IR: DECODING (bc40) Micro(30): 001000000000000000000010000000000000100000000000
MDR_LOAD IMMS(IMM7u) IRimm(16) REGR1(0) OP0(0) MDRin(16) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:1, 1:0, tgt:0
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 142.DECODE(3).1, PC: 4, SP: 1ffe, BP: 2 MAR: 2(bc40), MDR: 2 CR: 00001000
IR: addhi (bc40) - (1011110001000000), Micro(30): 001000000000000000000010000000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:1, 1:0, tgt:0
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0010
-------------------------------------------------------------------------
cycle: 142.EXECUTE(7).0, PC: 4, SP: 1ffe, BP: 2 MAR: 2(bc40), MDR: 10 CR: 00001000
IR: addhi (bc40) - (1011110001000000), Micro(158): 000100000000101110110000010010001100000000000000
REGR1S(TGT2) REGWS(TGT2) OP0S(MDRout) OP1S(REGR1) ALUS(LT) OP0(16) 
ALUout(8192) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:TGT2, w:TGT2
args: 0:1, 1:0, tgt:0
ALU: 0:MDRout(10) 1:REGR1(0) func: out:2000
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 142.EXECUTE(7).1, PC: 4, SP: 1ffe, BP: 2 MAR: 2(bc40), MDR: 10 CR: 00001000
IR: addhi (bc40) - (1011110001000000), Micro(158): 000100000000101110110000010010001100000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:TGT2, w:TGT2
args: 0:1, 1:0, tgt:0
ALU: 0:MDRout(10) 1:REGR1(0) func: out:2000
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
REG1 <- 2000
MAR <- 4
PC++
IR <- 9446
-------------------------------------------------------------------------
cycle: 143.DECODE(3).0, PC: 6, SP: 1ffe, BP: 2 MAR: 4(9446), MDR: 10 CR: 00001000
IR: DECODING (9446) Micro(10): 000100001000100110100000000010000001000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) IRimm(17) REGR0(8192) REGR1(0) OP0(8192) MDRin(17) 
ALUout(8192) 

Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:0, tgt:6
ALU: 0:REGR0(2000) 1:REGR1(0) func: out:2000
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 143.DECODE(3).1, PC: 6, SP: 1ffe, BP: 2 MAR: 4(9446), MDR: 10 CR: 00001000
IR: add (9446) - (1001010001000110), Micro(10): 000100001000100110100000000010000001000000000000

Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:0, tgt:6
ALU: 0:REGR0(2000) 1:REGR1(0) func: out:2000
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
SP <- 2000
MAR <- 6
PC++
IR <- a279
-------------------------------------------------------------------------
cycle: 144.DECODE(3).0, PC: 8, SP: 2000, BP: 2 MAR: 6(a279), MDR: 10 CR: 00001000
IR: DECODING (a279) Micro(17): 001000000000000000000001100000000000100000000000
MDR_LOAD IMMS(IMMIR) IRimm(2) REGR1(0) OP0(0) MDRin(2) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:1, 1:7, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 144.DECODE(3).1, PC: 8, SP: 2000, BP: 2 MAR: 6(a279), MDR: 10 CR: 00001000
IR: addi (a279) - (1010001001111001), Micro(17): 001000000000000000000001100000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:1, 1:7, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0002
-------------------------------------------------------------------------
cycle: 144.EXECUTE(7).0, PC: 8, SP: 2000, BP: 2 MAR: 6(a279), MDR: 2 CR: 00001000
IR: addi (a279) - (1010001001111001), Micro(145): 000100000000100110100000001100000000000000000000
REGR1S(ARG1) REGWS(TGT) OP0S(REGR1) OP1S(MDRout) IRimm(30) REGR1(8) OP0(8) OP1(2) MDRin(30) 
ALUout(10) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:1, 1:7, tgt:1
ALU: 0:REGR1(8) 1:MDRout(2) func: out:a
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 144.EXECUTE(7).1, PC: 8, SP: 2000, BP: 2 MAR: 6(a279), MDR: 2 CR: 00001000
IR: addi (a279) - (1010001001111001), Micro(145): 000100000000100110100000001100000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:ARG1, w:TGT
args: 0:1, 1:7, tgt:1
ALU: 0:REGR1(8) 1:MDRout(2) func: out:a
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
REG1 <- a
MAR <- 8
PC++
IR <- 2026
-------------------------------------------------------------------------
cycle: 145.DECODE(3).0, PC: a, SP: 2000, BP: 2 MAR: 8(2026), MDR: 2 CR: 00001000
IR: DECODING (2026) Micro(1): 001000000000000000000001000000000000100000000000
MDR_LOAD IMMS(IMM13) IRimm(38) REGR1(0) OP0(0) MDRin(38) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:4, tgt:6
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 145.DECODE(3).1, PC: a, SP: 2000, BP: 2 MAR: 8(2026), MDR: 2 CR: 00001000
IR: br (2026) - (0010000000100110), Micro(1): 001000000000000000000001000000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:4, tgt:6
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0026
-------------------------------------------------------------------------
cycle: 145.EXECUTE(7).0, PC: a, SP: 2000, BP: 2 MAR: 8(2026), MDR: 26 CR: 00001000
IR: br (2026) - (0010000000100110), Micro(129): 000100000111000001110000010000000000000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(9) REGR0(10) OP0(38) OP1(10) MDRin(9) 
ALUout(48) 

Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:0, 1:4, tgt:6
ALU: 0:MDRout(26) 1:REGR0(a) func: out:30
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 145.EXECUTE(7).1, PC: a, SP: 2000, BP: 2 MAR: 8(2026), MDR: 26 CR: 00001000
IR: br (2026) - (0010000000100110), Micro(129): 000100000111000001110000010000000000000000000000

Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:0, 1:4, tgt:6
ALU: 0:MDRout(26) 1:REGR0(a) func: out:30
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
PC <- 30
MAR <- 30
PC++
IR <- be01
-------------------------------------------------------------------------
cycle: 146.DECODE(3).0, PC: 32, SP: 2000, BP: 2 MAR: 30(be01), MDR: 26 CR: 00001000
IR: DECODING (be01) Micro(31): 000000100000000000000000000000000000000000000000
IRimm(0) REGR1(0) OP0(0) MDRin(0) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 146.DECODE(3).1, PC: 32, SP: 2000, BP: 2 MAR: 30(be01), MDR: 26 CR: 00001000
IR: push (be01) - (1011111000000001), Micro(31): 000000100000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
SP--
-------------------------------------------------------------------------
cycle: 146.READ(5).0, PC: 32, SP: 1ffe, BP: 2 MAR: 30(be01), MDR: 26 CR: 00001000
IR: push (be01) - (1011111000000001), Micro(95): 100000000110000000000000000010000000000000000000
MAR_LOAD REGR0S(SP) OP1S(REGR1) REGR0(8190) OP0(8190) 
ALUout(8190) 

Stable after 3 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(1ffe) 1:REGR1(0) func: out:1ffe
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 146.READ(5).1, PC: 32, SP: 1ffe, BP: 2 MAR: 30(be01), MDR: 26 CR: 00001000
IR: push (be01) - (1011111000000001), Micro(95): 100000000110000000000000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(1ffe) 1:REGR1(0) func: out:1ffe
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ffe
-------------------------------------------------------------------------
cycle: 146.EXECUTE(7).0, PC: 32, SP: 1ffe, BP: 2 MAR: 1ffe(a), MDR: 26 CR: 00001000
IR: push (be01) - (1011111000000001), Micro(159): 001010001010000000001000000010000000000000000000
MDR_LOAD REGR0S(TGT) MDRS(ALUout) OP1S(REGR1) REGR0(10) OP0(10) MDRin(8190) 
ALUout(10) MDRin(10) 

Stable after 3 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(a) 1:REGR1(0) func: out:a
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 146.EXECUTE(7).1, PC: 32, SP: 1ffe, BP: 2 MAR: 1ffe(a), MDR: 26 CR: 00001000
IR: push (be01) - (1011111000000001), Micro(159): 001010001010000000001000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(a) 1:REGR1(0) func: out:a
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 000a
RAM[1ffe] <- a
MAR <- 32
PC++
IR <- be05
-------------------------------------------------------------------------
cycle: 147.DECODE(3).0, PC: 34, SP: 1ffe, BP: 2 MAR: 32(be05), MDR: a CR: 00001000
IR: DECODING (be05) Micro(31): 000000100000000000000000000000000000000000000000
IRimm(1) REGR1(0) OP0(0) MDRin(1) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 147.DECODE(3).1, PC: 34, SP: 1ffe, BP: 2 MAR: 32(be05), MDR: a CR: 00001000
IR: push (be05) - (1011111000000101), Micro(31): 000000100000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe*1ffc 1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
SP--
-------------------------------------------------------------------------
cycle: 147.READ(5).0, PC: 34, SP: 1ffc, BP: 2 MAR: 32(be05), MDR: a CR: 00001000
IR: push (be05) - (1011111000000101), Micro(95): 100000000110000000000000000010000000000000000000
MAR_LOAD REGR0S(SP) OP1S(REGR1) REGR0(8188) OP0(8188) 
ALUout(8188) 

Stable after 3 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(1ffc) 1:REGR1(0) func: out:1ffc
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 147.READ(5).1, PC: 34, SP: 1ffc, BP: 2 MAR: 32(be05), MDR: a CR: 00001000
IR: push (be05) - (1011111000000101), Micro(95): 100000000110000000000000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(1ffc) 1:REGR1(0) func: out:1ffc
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ffc
-------------------------------------------------------------------------
cycle: 147.EXECUTE(7).0, PC: 34, SP: 1ffc, BP: 2 MAR: 1ffc(2), MDR: a CR: 00001000
IR: push (be05) - (1011111000000101), Micro(159): 001010001010000000001000000010000000000000000000
MDR_LOAD REGR0S(TGT) MDRS(ALUout) OP1S(REGR1) REGR0(2) OP0(2) MDRin(8188) 
ALUout(2) MDRin(2) 

Stable after 3 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(2) 1:REGR1(0) func: out:2
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 147.EXECUTE(7).1, PC: 34, SP: 1ffc, BP: 2 MAR: 1ffc(2), MDR: a CR: 00001000
IR: push (be05) - (1011111000000101), Micro(159): 001010001010000000001000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(2) 1:REGR1(0) func: out:2
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0002
RAM[1ffc] <- 2
MAR <- 34
PC++
IR <- 9585
-------------------------------------------------------------------------
cycle: 148.DECODE(3).0, PC: 36, SP: 1ffc, BP: 2 MAR: 34(9585), MDR: 2 CR: 00001000
IR: DECODING (9585) Micro(10): 000100001000100110100000000010000001000000000000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) IRimm(65505) REGR0(8188) REGR1(0) OP0(8188) MDRin(65505) 
ALUout(8188) 

Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:6, 1:0, tgt:5
ALU: 0:REGR0(1ffc) 1:REGR1(0) func: out:1ffc
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 148.DECODE(3).1, PC: 36, SP: 1ffc, BP: 2 MAR: 34(9585), MDR: 2 CR: 00001000
IR: add (9585) - (1001010110000101), Micro(10): 000100001000100110100000000010000001000000000000

Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:6, 1:0, tgt:5
ALU: 0:REGR0(1ffc) 1:REGR1(0) func: out:1ffc
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
BP <- 1ffc
MAR <- 36
PC++
IR <- 14
-------------------------------------------------------------------------
cycle: 149.DECODE(3).0, PC: 38, SP: 1ffc, BP: 1ffc MAR: 36(14), MDR: 2 CR: 00001000
IR: DECODING (14) Micro(0): 001000000000000000000000110000000000100000000000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(2) REGR1(0) OP0(2) MDRin(2) 
ALUout(2) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:4
ALU: 0:MDRout(2) 1:REGR0(0) func: out:2
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 149.DECODE(3).1, PC: 38, SP: 1ffc, BP: 1ffc MAR: 36(14), MDR: 2 CR: 00001000
IR: ldi (14) - (0000000000010100), Micro(0): 001000000000000000000000110000000000100000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:4
ALU: 0:MDRout(2) 1:REGR0(0) func: out:2
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0002
-------------------------------------------------------------------------
cycle: 149.EXECUTE(7).0, PC: 38, SP: 1ffc, BP: 1ffc MAR: 36(14), MDR: 2 CR: 00001000
IR: ldi (14) - (0000000000010100), Micro(128): 000100000000000010100000010000000000000000000000
REGWS(TGT) OP0S(MDRout) IRimm(5) MDRin(5) 

Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:2, tgt:4
ALU: 0:MDRout(2) 1:REGR0(0) func: out:2
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 149.EXECUTE(7).1, PC: 38, SP: 1ffc, BP: 1ffc MAR: 36(14), MDR: 2 CR: 00001000
IR: ldi (14) - (0000000000010100), Micro(128): 000100000000000010100000010000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:2, tgt:4
ALU: 0:MDRout(2) 1:REGR0(0) func: out:2
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
REG4 <- 2
MAR <- 38
PC++
IR <- be04
-------------------------------------------------------------------------
cycle: 150.DECODE(3).0, PC: 3a, SP: 1ffc, BP: 1ffc MAR: 38(be04), MDR: 2 CR: 00001000
IR: DECODING (be04) Micro(31): 000000100000000000000000000000000000000000000000
IRimm(1) REGR1(0) OP0(0) MDRin(1) 
ALUout(0) 

Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:4
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 150.DECODE(3).1, PC: 3a, SP: 1ffc, BP: 1ffc MAR: 38(be04), MDR: 2 CR: 00001000
IR: push (be04) - (1011111000000100), Micro(31): 000000100000000000000000000000000000000000000000

Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:4
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK:
1ffe 1ffc*1ffa 1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
SP--
-------------------------------------------------------------------------
cycle: 150.READ(5).0, PC: 3a, SP: 1ffa, BP: 1ffc MAR: 38(be04), MDR: 2 CR: 00001000
IR: push (be04) - (1011111000000100), Micro(95): 100000000110000000000000000010000000000000000000
MAR_LOAD REGR0S(SP) OP1S(REGR1) REGR0(8186) OP0(8186) 
ALUout(8186) 

Stable after 3 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:4
ALU: 0:REGR0(1ffa) 1:REGR1(0) func: out:1ffa
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 150.READ(5).1, PC: 3a, SP: 1ffa, BP: 1ffc MAR: 38(be04), MDR: 2 CR: 00001000
IR: push (be04) - (1011111000000100), Micro(95): 100000000110000000000000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:SP, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:4
ALU: 0:REGR0(1ffa) 1:REGR1(0) func: out:1ffa
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MAR <- 1ffa
-------------------------------------------------------------------------
cycle: 150.EXECUTE(7).0, PC: 3a, SP: 1ffa, BP: 1ffc MAR: 1ffa(2), MDR: 2 CR: 00001000
IR: push (be04) - (1011111000000100), Micro(159): 001010001010000000001000000010000000000000000000
MDR_LOAD REGR0S(TGT) MDRS(ALUout) OP1S(REGR1) REGR0(2) OP0(2) MDRin(8186) 
ALUout(2) MDRin(2) 

Stable after 3 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:4
ALU: 0:REGR0(2) 1:REGR1(0) func: out:2
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
-------------------------------------------------------------------------
cycle: 150.EXECUTE(7).1, PC: 3a, SP: 1ffa, BP: 1ffc MAR: 1ffa(2), MDR: 2 CR: 00001000
IR: push (be04) - (1011111000000100), Micro(159): 001010001010000000001000000010000000000000000000

Stable after 1 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:4
ALU: 0:REGR0(2) 1:REGR1(0) func: out:2
STACK:
1ffe 1ffc 1ffa*1ff8 1ff6 1ff4 1ff2 1ff0 1fee 1fec 1fea 1fe8 1fe6 1fe4 1fe2 
000a 0002 0002 003e 1ffc 000c 0000 000a 0000 0000 0000 0000 0000 0000 0000 
MDR <- 0002
RAM[1ffa] <- 2
-------STACK-----------
0x1ffe: 000a
0x1ffc: 0002
0x1ffa: 0002
0x1ff8: 003e
0x1ff6: 1ffc
0x1ff4: 000c
0x1ff2: 0000
0x1ff0: 000a
0x1fee: 0000
0x1fec: 0000
0x1fea: 0000
0x1fe8: 0000
0x1fe6: 0000
0x1fe4: 0000
0x1fe2: 0000
0x1fe0: 0000
0x1fde: 0000
0x1fdc: 0000
0x1fda: 0000
0x1fd8: 0000
0x1fd6: 0000
0x1fd4: 0000
0x1fd2: 0000
0x1fd0: 0000
0x1fce: 0000
-------DSECTION--------
----------------------------REGISTERS-----------------------
R0: 0000
R1: 000a
R2: 0000
R3: 1000
R4: 0002
R5: 1ffc
R6: 1ffa
R7: 003a
CR: 0000000000001000 (8)
----------------------------SYSREGS-----------------------
MAR: 1ffa
MDR: 0002
IR: be04
