Opening: validation/A_sim.mifFound colon - skip: 0Found colon - skip: 0Found colon - skip: 0Found colon - skip: 0Found colon - skip: 0Found colon - skip: 0Found colon - skip: 0Found colon - skip: 0Found colon - skip: 0Init done..
MAR <- 0
PC++
IR <- 801
------------------------------------------------------
cycle: 0.DECODE(3), phase: 0, PC: 2, SP: 0, MAR: 0(801), MDR: 0
IR: DECODING (801) Micro(0): 0010000000000000000000001100000000001000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(256) ALUS(0) MDRin(256) 
ALUS(0) 
Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:MDRout(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 0.DECODE(3), phase: 1, PC: 2, SP: 0, MAR: 0(801), MDR: 0
IR: ldi (801) - (0000100000000001), Micro(0): 0010000000000000000000001100000000001000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:MDRout(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0100
------------------------------------------------------
cycle: 0.EXECUTE(7), phase: 0, PC: 2, SP: 0, MAR: 0(801), MDR: 100
IR: ldi (801) - (0000100000000001), Micro(128): 0001000000000000101000000100000000000000
REGWS(TGT) OP0S(MDRout) IRimm(0) ALUS(0) MDRin(0) 
ALUS(0) 
Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:1
ALU: 0:MDRout(100) 1:REGR0(0) func: out:100
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 0.EXECUTE(7), phase: 1, PC: 2, SP: 0, MAR: 0(801), MDR: 100
IR: ldi (801) - (0000100000000001), Micro(128): 0001000000000000101000000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:1
ALU: 0:MDRout(100) 1:REGR0(0) func: out:100
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 100
MAR <- 2
PC++
IR <- 20fc
------------------------------------------------------
cycle: 1.DECODE(3), phase: 0, PC: 4, SP: 0, MAR: 2(20fc), MDR: 100
IR: DECODING (20fc) Micro(1): 0010000000000000000000010000000000001000
MDR_LOAD IMMS(IMM13) IRimm(252) ALUS(0) REGR1(0) OP0(0) MDRin(252) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:3, 1:7, tgt:4
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 1.DECODE(3), phase: 1, PC: 4, SP: 0, MAR: 2(20fc), MDR: 100
IR: br (20fc) - (0010000011111100), Micro(1): 0010000000000000000000010000000000001000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:3, 1:7, tgt:4
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 00fc
------------------------------------------------------
cycle: 1.EXECUTE(7), phase: 0, PC: 4, SP: 0, MAR: 2(20fc), MDR: fc
IR: br (20fc) - (0010000011111100), Micro(129): 0001000001110000011100000100000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(63) ALUS(0) REGR0(4) OP0(252) OP1(4) MDRin(63) 
ALUS(0) ALUout(256) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:3, 1:7, tgt:4
ALU: 0:MDRout(fc) 1:REGR0(4) func: out:100
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 1.EXECUTE(7), phase: 1, PC: 4, SP: 0, MAR: 2(20fc), MDR: fc
IR: br (20fc) - (0010000011111100), Micro(129): 0001000001110000011100000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:3, 1:7, tgt:4
ALU: 0:MDRout(fc) 1:REGR0(4) func: out:100
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 100
MAR <- 100
PC++
IR <- 82
------------------------------------------------------
cycle: 2.DECODE(3), phase: 0, PC: 102, SP: 0, MAR: 100(82), MDR: fc
IR: DECODING (82) Micro(0): 0010000000000000000000001100000000001000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(16) ALUS(0) REGR1(0) OP0(252) MDRin(16) 
ALUS(0) ALUout(252) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:2, 1:0, tgt:2
ALU: 0:MDRout(fc) 1:REGR0(0) func: out:fc
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 2.DECODE(3), phase: 1, PC: 102, SP: 0, MAR: 100(82), MDR: fc
IR: ldi (82) - (0000000010000010), Micro(0): 0010000000000000000000001100000000001000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:2, 1:0, tgt:2
ALU: 0:MDRout(fc) 1:REGR0(0) func: out:fc
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0010
------------------------------------------------------
cycle: 2.EXECUTE(7), phase: 0, PC: 102, SP: 0, MAR: 100(82), MDR: 10
IR: ldi (82) - (0000000010000010), Micro(128): 0001000000000000101000000100000000000000
REGWS(TGT) OP0S(MDRout) IRimm(32) ALUS(0) MDRin(32) 
ALUS(0) 
Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:2, 1:0, tgt:2
ALU: 0:MDRout(10) 1:REGR0(0) func: out:10
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 2.EXECUTE(7), phase: 1, PC: 102, SP: 0, MAR: 100(82), MDR: 10
IR: ldi (82) - (0000000010000010), Micro(128): 0001000000000000101000000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:2, 1:0, tgt:2
ALU: 0:MDRout(10) 1:REGR0(0) func: out:10
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG2 <- 10
MAR <- 102
PC++
IR <- 321
------------------------------------------------------
cycle: 3.DECODE(3), phase: 0, PC: 104, SP: 0, MAR: 102(321), MDR: 10
IR: DECODING (321) Micro(0): 0010000000000000000000001100000000001000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(100) ALUS(0) REGR1(0) OP0(16) MDRin(100) 
ALUS(0) ALUout(16) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:4, 1:4, tgt:1
ALU: 0:MDRout(10) 1:REGR0(0) func: out:10
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 3.DECODE(3), phase: 1, PC: 104, SP: 0, MAR: 102(321), MDR: 10
IR: ldi (321) - (0000001100100001), Micro(0): 0010000000000000000000001100000000001000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:4, 1:4, tgt:1
ALU: 0:MDRout(10) 1:REGR0(0) func: out:10
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0064
------------------------------------------------------
cycle: 3.EXECUTE(7), phase: 0, PC: 104, SP: 0, MAR: 102(321), MDR: 64
IR: ldi (321) - (0000001100100001), Micro(128): 0001000000000000101000000100000000000000
REGWS(TGT) OP0S(MDRout) IRimm(65480) ALUS(0) MDRin(65480) 
ALUS(0) 
Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:4, 1:4, tgt:1
ALU: 0:MDRout(64) 1:REGR0(0) func: out:64
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 3.EXECUTE(7), phase: 1, PC: 104, SP: 0, MAR: 102(321), MDR: 64
IR: ldi (321) - (0000001100100001), Micro(128): 0001000000000000101000000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:4, 1:4, tgt:1
ALU: 0:MDRout(64) 1:REGR0(0) func: out:64
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 64
MAR <- 104
PC++
IR <- b611
------------------------------------------------------
cycle: 4.DECODE(3), phase: 0, PC: 106, SP: 0, MAR: 104(b611), MDR: 64
IR: DECODING (b611) Micro(27): 0000000000000000000000000000000000000000
IRimm(4) ALUS(0) REGR1(0) OP0(0) MDRin(4) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 4.DECODE(3), phase: 1, PC: 106, SP: 0, MAR: 104(b611), MDR: 64
IR: stb.b (b611) - (1011011000010001), Micro(27): 0000000000000000000000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 4.READ(5), phase: 0, PC: 106, SP: 0, MAR: 104(b611), MDR: 64
IR: stb.b (b611) - (1011011000010001), Micro(91): 1000000010001001000000000000100000000000
MAR_LOAD REGR0S(ARG0) REGR1S(ARG1) OP1S(REGR1) ALUS(0) REGR1(16) OP1(16) 
ALUS(0) ALUout(16) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:REG0
args: 0:0, 1:2, tgt:1
ALU: 0:REGR0(0) 1:REGR1(10) func: out:10
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 4.READ(5), phase: 1, PC: 106, SP: 0, MAR: 104(b611), MDR: 64
IR: stb.b (b611) - (1011011000010001), Micro(91): 1000000010001001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:REG0
args: 0:0, 1:2, tgt:1
ALU: 0:REGR0(0) 1:REGR1(10) func: out:10
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MAR <- 10
------------------------------------------------------
cycle: 4.EXECUTE(7), phase: 0, PC: 106, SP: 0, MAR: 10(0), MDR: 64
IR: stb.b (b611) - (1011011000010001), Micro(155): 0010100110100000000010000000100000000000
MDR_LOAD BE REGR0S(TGT) MDRS(ALUout) OP1S(REGR1) ALUS(0) REGR0(100) REGR1(0) OP0(100) OP1(0) MDRin(16) 
ALUS(0) ALUout(100) MDRin(100) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:1
ALU: 0:REGR0(64) 1:REGR1(0) func: out:64
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 4.EXECUTE(7), phase: 1, PC: 106, SP: 0, MAR: 10(0), MDR: 64
IR: stb.b (b611) - (1011011000010001), Micro(155): 0010100110100000000010000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:1
ALU: 0:REGR0(64) 1:REGR1(0) func: out:64
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0064
RAM[10H] <- 64
MAR <- 106
PC++
IR <- 92
------------------------------------------------------
cycle: 5.DECODE(3), phase: 0, PC: 108, SP: 0, MAR: 106(92), MDR: 64
IR: DECODING (92) Micro(0): 0010000000000000000000001100000000001000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(18) ALUS(0) REGR1(0) OP0(100) MDRin(18) 
ALUS(0) ALUout(100) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:2, 1:2, tgt:2
ALU: 0:MDRout(64) 1:REGR0(0) func: out:64
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 5.DECODE(3), phase: 1, PC: 108, SP: 0, MAR: 106(92), MDR: 64
IR: ldi (92) - (0000000010010010), Micro(0): 0010000000000000000000001100000000001000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:2, 1:2, tgt:2
ALU: 0:MDRout(64) 1:REGR0(0) func: out:64
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0012
------------------------------------------------------
cycle: 5.EXECUTE(7), phase: 0, PC: 108, SP: 0, MAR: 106(92), MDR: 12
IR: ldi (92) - (0000000010010010), Micro(128): 0001000000000000101000000100000000000000
REGWS(TGT) OP0S(MDRout) IRimm(36) ALUS(0) MDRin(36) 
ALUS(0) 
Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:2, 1:2, tgt:2
ALU: 0:MDRout(12) 1:REGR0(0) func: out:12
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 5.EXECUTE(7), phase: 1, PC: 108, SP: 0, MAR: 106(92), MDR: 12
IR: ldi (92) - (0000000010010010), Micro(128): 0001000000000000101000000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:2, 1:2, tgt:2
ALU: 0:MDRout(12) 1:REGR0(0) func: out:12
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG2 <- 12
MAR <- 108
PC++
IR <- 9
------------------------------------------------------
cycle: 6.DECODE(3), phase: 0, PC: 10a, SP: 0, MAR: 108(9), MDR: 12
IR: DECODING (9) Micro(0): 0010000000000000000000001100000000001000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(1) ALUS(0) REGR1(0) OP0(18) MDRin(1) 
ALUS(0) ALUout(18) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:MDRout(12) 1:REGR0(0) func: out:12
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 6.DECODE(3), phase: 1, PC: 10a, SP: 0, MAR: 108(9), MDR: 12
IR: ldi (9) - (0000000000001001), Micro(0): 0010000000000000000000001100000000001000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:1
ALU: 0:MDRout(12) 1:REGR0(0) func: out:12
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 6.EXECUTE(7), phase: 0, PC: 10a, SP: 0, MAR: 108(9), MDR: 1
IR: ldi (9) - (0000000000001001), Micro(128): 0001000000000000101000000100000000000000
REGWS(TGT) OP0S(MDRout) IRimm(2) ALUS(0) MDRin(2) 
ALUS(0) 
Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:MDRout(1) 1:REGR0(0) func: out:1
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 6.EXECUTE(7), phase: 1, PC: 10a, SP: 0, MAR: 108(9), MDR: 1
IR: ldi (9) - (0000000000001001), Micro(128): 0001000000000000101000000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:1, tgt:1
ALU: 0:MDRout(1) 1:REGR0(0) func: out:1
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 1
MAR <- 10a
PC++
IR <- b611
------------------------------------------------------
cycle: 7.DECODE(3), phase: 0, PC: 10c, SP: 0, MAR: 10a(b611), MDR: 1
IR: DECODING (b611) Micro(27): 0000000000000000000000000000000000000000
IRimm(4) ALUS(0) REGR1(0) OP0(0) MDRin(4) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 7.DECODE(3), phase: 1, PC: 10c, SP: 0, MAR: 10a(b611), MDR: 1
IR: stb.b (b611) - (1011011000010001), Micro(27): 0000000000000000000000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:1
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 7.READ(5), phase: 0, PC: 10c, SP: 0, MAR: 10a(b611), MDR: 1
IR: stb.b (b611) - (1011011000010001), Micro(91): 1000000010001001000000000000100000000000
MAR_LOAD REGR0S(ARG0) REGR1S(ARG1) OP1S(REGR1) ALUS(0) REGR1(18) OP1(18) 
ALUS(0) ALUout(18) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:REG0
args: 0:0, 1:2, tgt:1
ALU: 0:REGR0(0) 1:REGR1(12) func: out:12
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 7.READ(5), phase: 1, PC: 10c, SP: 0, MAR: 10a(b611), MDR: 1
IR: stb.b (b611) - (1011011000010001), Micro(91): 1000000010001001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:REG0
args: 0:0, 1:2, tgt:1
ALU: 0:REGR0(0) 1:REGR1(12) func: out:12
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MAR <- 12
------------------------------------------------------
cycle: 7.EXECUTE(7), phase: 0, PC: 10c, SP: 0, MAR: 12(0), MDR: 1
IR: stb.b (b611) - (1011011000010001), Micro(155): 0010100110100000000010000000100000000000
MDR_LOAD BE REGR0S(TGT) MDRS(ALUout) OP1S(REGR1) ALUS(0) REGR0(1) REGR1(0) OP0(1) OP1(0) MDRin(18) 
ALUS(0) ALUout(1) MDRin(1) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:1
ALU: 0:REGR0(1) 1:REGR1(0) func: out:1
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 7.EXECUTE(7), phase: 1, PC: 10c, SP: 0, MAR: 12(0), MDR: 1
IR: stb.b (b611) - (1011011000010001), Micro(155): 0010100110100000000010000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:1
ALU: 0:REGR0(1) 1:REGR1(0) func: out:1
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
RAM[12H] <- 1
MAR <- 10c
PC++
IR <- a2
------------------------------------------------------
cycle: 8.DECODE(3), phase: 0, PC: 10e, SP: 0, MAR: 10c(a2), MDR: 1
IR: DECODING (a2) Micro(0): 0010000000000000000000001100000000001000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(20) ALUS(0) REGR1(0) OP0(1) MDRin(20) 
ALUS(0) ALUout(1) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:2, 1:4, tgt:2
ALU: 0:MDRout(1) 1:REGR0(0) func: out:1
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 8.DECODE(3), phase: 1, PC: 10e, SP: 0, MAR: 10c(a2), MDR: 1
IR: ldi (a2) - (0000000010100010), Micro(0): 0010000000000000000000001100000000001000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:2, 1:4, tgt:2
ALU: 0:MDRout(1) 1:REGR0(0) func: out:1
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0014
------------------------------------------------------
cycle: 8.EXECUTE(7), phase: 0, PC: 10e, SP: 0, MAR: 10c(a2), MDR: 14
IR: ldi (a2) - (0000000010100010), Micro(128): 0001000000000000101000000100000000000000
REGWS(TGT) OP0S(MDRout) IRimm(40) ALUS(0) MDRin(40) 
ALUS(0) 
Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:2, 1:4, tgt:2
ALU: 0:MDRout(14) 1:REGR0(0) func: out:14
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 8.EXECUTE(7), phase: 1, PC: 10e, SP: 0, MAR: 10c(a2), MDR: 14
IR: ldi (a2) - (0000000010100010), Micro(128): 0001000000000000101000000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:2, 1:4, tgt:2
ALU: 0:MDRout(14) 1:REGR0(0) func: out:14
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG2 <- 14
MAR <- 10e
PC++
IR <- c
------------------------------------------------------
cycle: 9.DECODE(3), phase: 0, PC: 110, SP: 0, MAR: 10e(c), MDR: 14
IR: DECODING (c) Micro(0): 0010000000000000000000001100000000001000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(1) ALUS(0) REGR1(0) OP0(20) MDRin(1) 
ALUS(0) ALUout(20) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:4
ALU: 0:MDRout(14) 1:REGR0(0) func: out:14
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 9.DECODE(3), phase: 1, PC: 110, SP: 0, MAR: 10e(c), MDR: 14
IR: ldi (c) - (0000000000001100), Micro(0): 0010000000000000000000001100000000001000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:1, tgt:4
ALU: 0:MDRout(14) 1:REGR0(0) func: out:14
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
------------------------------------------------------
cycle: 9.EXECUTE(7), phase: 0, PC: 110, SP: 0, MAR: 10e(c), MDR: 1
IR: ldi (c) - (0000000000001100), Micro(128): 0001000000000000101000000100000000000000
REGWS(TGT) OP0S(MDRout) IRimm(3) ALUS(0) MDRin(3) 
ALUS(0) 
Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:1, tgt:4
ALU: 0:MDRout(1) 1:REGR0(0) func: out:1
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 9.EXECUTE(7), phase: 1, PC: 110, SP: 0, MAR: 10e(c), MDR: 1
IR: ldi (c) - (0000000000001100), Micro(128): 0001000000000000101000000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:1, tgt:4
ALU: 0:MDRout(1) 1:REGR0(0) func: out:1
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG4 <- 1
MAR <- 110
PC++
IR <- b614
------------------------------------------------------
cycle: 10.DECODE(3), phase: 0, PC: 112, SP: 0, MAR: 110(b614), MDR: 1
IR: DECODING (b614) Micro(27): 0000000000000000000000000000000000000000
IRimm(5) ALUS(0) REGR1(0) OP0(0) MDRin(5) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:4
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 10.DECODE(3), phase: 1, PC: 112, SP: 0, MAR: 110(b614), MDR: 1
IR: stb.b (b614) - (1011011000010100), Micro(27): 0000000000000000000000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:4
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 10.READ(5), phase: 0, PC: 112, SP: 0, MAR: 110(b614), MDR: 1
IR: stb.b (b614) - (1011011000010100), Micro(91): 1000000010001001000000000000100000000000
MAR_LOAD REGR0S(ARG0) REGR1S(ARG1) OP1S(REGR1) ALUS(0) REGR1(20) OP1(20) 
ALUS(0) ALUout(20) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:REG0
args: 0:0, 1:2, tgt:4
ALU: 0:REGR0(0) 1:REGR1(14) func: out:14
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 10.READ(5), phase: 1, PC: 112, SP: 0, MAR: 110(b614), MDR: 1
IR: stb.b (b614) - (1011011000010100), Micro(91): 1000000010001001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:REG0
args: 0:0, 1:2, tgt:4
ALU: 0:REGR0(0) 1:REGR1(14) func: out:14
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MAR <- 14
------------------------------------------------------
cycle: 10.EXECUTE(7), phase: 0, PC: 112, SP: 0, MAR: 14(0), MDR: 1
IR: stb.b (b614) - (1011011000010100), Micro(155): 0010100110100000000010000000100000000000
MDR_LOAD BE REGR0S(TGT) MDRS(ALUout) OP1S(REGR1) ALUS(0) REGR0(1) REGR1(0) OP0(1) OP1(0) MDRin(20) 
ALUS(0) ALUout(1) MDRin(1) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:4
ALU: 0:REGR0(1) 1:REGR1(0) func: out:1
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 10.EXECUTE(7), phase: 1, PC: 112, SP: 0, MAR: 14(0), MDR: 1
IR: stb.b (b614) - (1011011000010100), Micro(155): 0010100110100000000010000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:4
ALU: 0:REGR0(1) 1:REGR1(0) func: out:1
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0001
RAM[14H] <- 1
MAR <- 112
PC++
IR <- 9401
------------------------------------------------------
cycle: 11.DECODE(3), phase: 0, PC: 114, SP: 0, MAR: 112(9401), MDR: 1
IR: DECODING (9401) Micro(10): 0001000010001001101000000000100000010000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) IRimm(0) ALUS(0) REGR1(0) OP0(0) MDRin(0) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(0) 1:REGR1(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 11.DECODE(3), phase: 1, PC: 114, SP: 0, MAR: 112(9401), MDR: 1
IR: add (9401) - (1001010000000001), Micro(10): 0001000010001001101000000000100000010000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:0, 1:0, tgt:1
ALU: 0:REGR0(0) 1:REGR1(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 0
MAR <- 114
PC++
IR <- 9402
------------------------------------------------------
cycle: 12.DECODE(3), phase: 0, PC: 116, SP: 0, MAR: 114(9402), MDR: 1
IR: DECODING (9402) Micro(10): 0001000010001001101000000000100000010000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(0) REGR1(0) OP0(0) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:0, 1:0, tgt:2
ALU: 0:REGR0(0) 1:REGR1(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 12.DECODE(3), phase: 1, PC: 116, SP: 0, MAR: 114(9402), MDR: 1
IR: add (9402) - (1001010000000010), Micro(10): 0001000010001001101000000000100000010000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:0, 1:0, tgt:2
ALU: 0:REGR0(0) 1:REGR1(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG2 <- 0
MAR <- 116
PC++
IR <- 9403
------------------------------------------------------
cycle: 13.DECODE(3), phase: 0, PC: 118, SP: 0, MAR: 116(9403), MDR: 1
IR: DECODING (9403) Micro(10): 0001000010001001101000000000100000010000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(0) REGR1(0) OP0(0) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:0, 1:0, tgt:3
ALU: 0:REGR0(0) 1:REGR1(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 13.DECODE(3), phase: 1, PC: 118, SP: 0, MAR: 116(9403), MDR: 1
IR: add (9403) - (1001010000000011), Micro(10): 0001000010001001101000000000100000010000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:0, 1:0, tgt:3
ALU: 0:REGR0(0) 1:REGR1(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 0
MAR <- 118
PC++
IR <- 9405
------------------------------------------------------
cycle: 14.DECODE(3), phase: 0, PC: 11a, SP: 0, MAR: 118(9405), MDR: 1
IR: DECODING (9405) Micro(10): 0001000010001001101000000000100000010000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) IRimm(1) ALUS(0) REGR1(0) OP0(0) MDRin(1) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(0) 1:REGR1(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 14.DECODE(3), phase: 1, PC: 11a, SP: 0, MAR: 118(9405), MDR: 1
IR: add (9405) - (1001010000000101), Micro(10): 0001000010001001101000000000100000010000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:0, 1:0, tgt:5
ALU: 0:REGR0(0) 1:REGR1(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
BP <- 0
MAR <- 11a
PC++
IR <- 9406
------------------------------------------------------
cycle: 15.DECODE(3), phase: 0, PC: 11c, SP: 0, MAR: 11a(9406), MDR: 1
IR: DECODING (9406) Micro(10): 0001000010001001101000000000100000010000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(0) REGR1(0) OP0(0) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:0, 1:0, tgt:6
ALU: 0:REGR0(0) 1:REGR1(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 15.DECODE(3), phase: 1, PC: 11c, SP: 0, MAR: 11a(9406), MDR: 1
IR: add (9406) - (1001010000000110), Micro(10): 0001000010001001101000000000100000010000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:0, 1:0, tgt:6
ALU: 0:REGR0(0) 1:REGR1(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
SP <- 0
MAR <- 11c
PC++
IR <- d79
------------------------------------------------------
cycle: 16.DECODE(3), phase: 0, PC: 11e, SP: 0, MAR: 11c(d79), MDR: 1
IR: DECODING (d79) Micro(0): 0010000000000000000000001100000000001000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(431) ALUS(0) REGR1(0) OP0(1) MDRin(431) 
ALUS(0) ALUout(1) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:5, 1:7, tgt:1
ALU: 0:MDRout(1) 1:REGR0(0) func: out:1
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 16.DECODE(3), phase: 1, PC: 11e, SP: 0, MAR: 11c(d79), MDR: 1
IR: ldi (d79) - (0000110101111001), Micro(0): 0010000000000000000000001100000000001000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:5, 1:7, tgt:1
ALU: 0:MDRout(1) 1:REGR0(0) func: out:1
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 01af
------------------------------------------------------
cycle: 16.EXECUTE(7), phase: 0, PC: 11e, SP: 0, MAR: 11c(d79), MDR: 1af
IR: ldi (d79) - (0000110101111001), Micro(128): 0001000000000000101000000100000000000000
REGWS(TGT) OP0S(MDRout) IRimm(65502) ALUS(0) MDRin(65502) 
ALUS(0) 
Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:5, 1:7, tgt:1
ALU: 0:MDRout(1af) 1:REGR0(0) func: out:1af
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 16.EXECUTE(7), phase: 1, PC: 11e, SP: 0, MAR: 11c(d79), MDR: 1af
IR: ldi (d79) - (0000110101111001), Micro(128): 0001000000000000101000000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:5, 1:7, tgt:1
ALU: 0:MDRout(1af) 1:REGR0(0) func: out:1af
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 1af
MAR <- 11e
PC++
IR <- 1e2
------------------------------------------------------
cycle: 17.DECODE(3), phase: 0, PC: 120, SP: 0, MAR: 11e(1e2), MDR: 1af
IR: DECODING (1e2) Micro(0): 0010000000000000000000001100000000001000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(60) ALUS(0) REGR1(0) OP0(431) MDRin(60) 
ALUS(0) ALUout(431) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:4, tgt:2
ALU: 0:MDRout(1af) 1:REGR0(0) func: out:1af
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 17.DECODE(3), phase: 1, PC: 120, SP: 0, MAR: 11e(1e2), MDR: 1af
IR: ldi (1e2) - (0000000111100010), Micro(0): 0010000000000000000000001100000000001000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:4, tgt:2
ALU: 0:MDRout(1af) 1:REGR0(0) func: out:1af
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 003c
------------------------------------------------------
cycle: 17.EXECUTE(7), phase: 0, PC: 120, SP: 0, MAR: 11e(1e2), MDR: 3c
IR: ldi (1e2) - (0000000111100010), Micro(128): 0001000000000000101000000100000000000000
REGWS(TGT) OP0S(MDRout) IRimm(65528) ALUS(0) MDRin(65528) 
ALUS(0) 
Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:7, 1:4, tgt:2
ALU: 0:MDRout(3c) 1:REGR0(0) func: out:3c
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 17.EXECUTE(7), phase: 1, PC: 120, SP: 0, MAR: 11e(1e2), MDR: 3c
IR: ldi (1e2) - (0000000111100010), Micro(128): 0001000000000000101000000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:7, 1:4, tgt:2
ALU: 0:MDRout(3c) 1:REGR0(0) func: out:3c
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG2 <- 3c
MAR <- 120
PC++
IR <- 9655
------------------------------------------------------
cycle: 18.DECODE(3), phase: 0, PC: 122, SP: 0, MAR: 120(9655), MDR: 3c
IR: DECODING (9655) Micro(11): 0001000010001001101000000000100000110000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(21) ALUS(1) REGR0(431) REGR1(60) OP0(431) OP1(60) MDRin(21) 
ALUS(1) ALUout(371) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:5
ALU: 0:REGR0(1af) 1:REGR1(3c) func: out:173
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 18.DECODE(3), phase: 1, PC: 122, SP: 0, MAR: 120(9655), MDR: 3c
IR: sub (9655) - (1001011001010101), Micro(11): 0001000010001001101000000000100000110000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:5
ALU: 0:REGR0(1af) 1:REGR1(3c) func: out:173
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
BP <- 173
MAR <- 122
PC++
IR <- 8af2
------------------------------------------------------
cycle: 19.DECODE(3), phase: 0, PC: 124, SP: 0, MAR: 122(8af2), MDR: 3c
IR: DECODING (8af2) Micro(5): 0010000000000000000000000000000000000000
MDR_LOAD IRimm(60) ALUS(0) REGR1(0) OP0(0) MDRin(60) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:3, 1:6, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 19.DECODE(3), phase: 1, PC: 124, SP: 0, MAR: 122(8af2), MDR: 3c
IR: nocode (8af2) - (1000101011110010), Micro(5): 0010000000000000000000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:3, 1:6, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 003c
------------------------------------------------------
cycle: 19.READ(5), phase: 0, PC: 124, SP: 0, MAR: 122(8af2), MDR: 3c
IR: nocode (8af2) - (1000101011110010), Micro(69): 1000000001010000000000000100000000000000
MAR_LOAD REGR0S(BP) OP0S(MDRout) ALUS(0) REGR0(371) OP0(60) OP1(371) 
ALUS(0) ALUout(431) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:BP, r1:REG0, w:REG0
args: 0:3, 1:6, tgt:2
ALU: 0:MDRout(3c) 1:REGR0(173) func: out:1af
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 19.READ(5), phase: 1, PC: 124, SP: 0, MAR: 122(8af2), MDR: 3c
IR: nocode (8af2) - (1000101011110010), Micro(69): 1000000001010000000000000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:BP, r1:REG0, w:REG0
args: 0:3, 1:6, tgt:2
ALU: 0:MDRout(3c) 1:REGR0(173) func: out:1af
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MAR <- 1af
------------------------------------------------------
cycle: 19.EXECUTE(7), phase: 0, PC: 124, SP: 0, MAR: 1af(7f80), MDR: 3c
IR: nocode (8af2) - (1000101011110010), Micro(133): 0011000100000000101101000100000000000000
MDR_LOAD BE REGWS(TGT2) MDRS(RAMout) OP0S(MDRout) ALUS(0) REGR0(0) OP1(0) MDRin(128) 
ALUS(0) ALUout(60) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT2
args: 0:3, 1:6, tgt:2
ALU: 0:MDRout(3c) 1:REGR0(0) func: out:3c
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 19.EXECUTE(7), phase: 1, PC: 124, SP: 0, MAR: 1af(80), MDR: 3c
IR: nocode (8af2) - (1000101011110010), Micro(133): 0011000100000000101101000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT2
args: 0:3, 1:6, tgt:2
ALU: 0:MDRout(3c) 1:REGR0(0) func: out:3c
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0080
REG3 <- 80
MAR <- 124
PC++
IR <- 401
------------------------------------------------------
cycle: 20.DECODE(3), phase: 0, PC: 126, SP: 0, MAR: 124(401), MDR: 80
IR: DECODING (401) Micro(0): 0010000000000000000000001100000000001000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(128) ALUS(0) REGR1(0) OP0(128) MDRin(128) 
ALUS(0) ALUout(128) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:MDRout(80) 1:REGR0(0) func: out:80
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 20.DECODE(3), phase: 1, PC: 126, SP: 0, MAR: 124(401), MDR: 80
IR: ldi (401) - (0000010000000001), Micro(0): 0010000000000000000000001100000000001000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:MDRout(80) 1:REGR0(0) func: out:80
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0080
------------------------------------------------------
cycle: 20.EXECUTE(7), phase: 0, PC: 126, SP: 0, MAR: 124(401), MDR: 80
IR: ldi (401) - (0000010000000001), Micro(128): 0001000000000000101000000100000000000000
REGWS(TGT) OP0S(MDRout) IRimm(0) ALUS(0) MDRin(0) 
ALUS(0) 
Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:1
ALU: 0:MDRout(80) 1:REGR0(0) func: out:80
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 20.EXECUTE(7), phase: 1, PC: 126, SP: 0, MAR: 124(401), MDR: 80
IR: ldi (401) - (0000010000000001), Micro(128): 0001000000000000101000000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:1
ALU: 0:MDRout(80) 1:REGR0(0) func: out:80
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 80
MAR <- 126
PC++
IR <- 9e59
------------------------------------------------------
cycle: 21.DECODE(3), phase: 0, PC: 128, SP: 0, MAR: 126(9e59), MDR: 80
IR: DECODING (9e59) Micro(15): 0001000010001001101000000000100100110000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(22) SKIP ALUS(1) REGR0(128) REGR1(128) OP0(128) OP1(128) MDRin(22) 
ALUS(1) ALUout(0) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:3, tgt:1
ALU: 0:REGR0(80) 1:REGR1(80) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 21.DECODE(3), phase: 1, PC: 128, SP: 0, MAR: 126(9e59), MDR: 80
IR: addskp.z (9e59) - (1001111001011001), Micro(15): 0001000010001001101000000000100100110000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:3, tgt:1
ALU: 0:REGR0(80) 1:REGR1(80) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC++ (SKIP)
REG1 <- 0
MAR <- 12a
PC++
IR <- 2012
------------------------------------------------------
cycle: 22.DECODE(3), phase: 0, PC: 12c, SP: 0, MAR: 12a(2012), MDR: 80
IR: DECODING (2012) Micro(1): 0010000000000000000000010000000000001000
MDR_LOAD IMMS(IMM13) IRimm(18) ALUS(0) REGR1(0) OP0(0) MDRin(18) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 22.DECODE(3), phase: 1, PC: 12c, SP: 0, MAR: 12a(2012), MDR: 80
IR: br (2012) - (0010000000010010), Micro(1): 0010000000000000000000010000000000001000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0012
------------------------------------------------------
cycle: 22.EXECUTE(7), phase: 0, PC: 12c, SP: 0, MAR: 12a(2012), MDR: 12
IR: br (2012) - (0010000000010010), Micro(129): 0001000001110000011100000100000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(4) ALUS(0) REGR0(300) OP0(18) OP1(300) MDRin(4) 
ALUS(0) ALUout(318) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:0, 1:2, tgt:2
ALU: 0:MDRout(12) 1:REGR0(12c) func: out:13e
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 22.EXECUTE(7), phase: 1, PC: 12c, SP: 0, MAR: 12a(2012), MDR: 12
IR: br (2012) - (0010000000010010), Micro(129): 0001000001110000011100000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:0, 1:2, tgt:2
ALU: 0:MDRout(12) 1:REGR0(12c) func: out:13e
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 13e
MAR <- 13e
PC++
IR <- d79
------------------------------------------------------
cycle: 23.DECODE(3), phase: 0, PC: 140, SP: 0, MAR: 13e(d79), MDR: 12
IR: DECODING (d79) Micro(0): 0010000000000000000000001100000000001000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(431) ALUS(0) REGR1(0) OP0(18) MDRin(431) 
ALUS(0) ALUout(18) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:5, 1:7, tgt:1
ALU: 0:MDRout(12) 1:REGR0(0) func: out:12
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 23.DECODE(3), phase: 1, PC: 140, SP: 0, MAR: 13e(d79), MDR: 12
IR: ldi (d79) - (0000110101111001), Micro(0): 0010000000000000000000001100000000001000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:5, 1:7, tgt:1
ALU: 0:MDRout(12) 1:REGR0(0) func: out:12
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 01af
------------------------------------------------------
cycle: 23.EXECUTE(7), phase: 0, PC: 140, SP: 0, MAR: 13e(d79), MDR: 1af
IR: ldi (d79) - (0000110101111001), Micro(128): 0001000000000000101000000100000000000000
REGWS(TGT) OP0S(MDRout) IRimm(65502) ALUS(0) MDRin(65502) 
ALUS(0) 
Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:5, 1:7, tgt:1
ALU: 0:MDRout(1af) 1:REGR0(0) func: out:1af
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 23.EXECUTE(7), phase: 1, PC: 140, SP: 0, MAR: 13e(d79), MDR: 1af
IR: ldi (d79) - (0000110101111001), Micro(128): 0001000000000000101000000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:5, 1:7, tgt:1
ALU: 0:MDRout(1af) 1:REGR0(0) func: out:1af
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 1af
MAR <- 140
PC++
IR <- 1e2
------------------------------------------------------
cycle: 24.DECODE(3), phase: 0, PC: 142, SP: 0, MAR: 140(1e2), MDR: 1af
IR: DECODING (1e2) Micro(0): 0010000000000000000000001100000000001000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(60) ALUS(0) REGR1(0) OP0(431) MDRin(60) 
ALUS(0) ALUout(431) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:4, tgt:2
ALU: 0:MDRout(1af) 1:REGR0(0) func: out:1af
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 24.DECODE(3), phase: 1, PC: 142, SP: 0, MAR: 140(1e2), MDR: 1af
IR: ldi (1e2) - (0000000111100010), Micro(0): 0010000000000000000000001100000000001000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:4, tgt:2
ALU: 0:MDRout(1af) 1:REGR0(0) func: out:1af
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 003c
------------------------------------------------------
cycle: 24.EXECUTE(7), phase: 0, PC: 142, SP: 0, MAR: 140(1e2), MDR: 3c
IR: ldi (1e2) - (0000000111100010), Micro(128): 0001000000000000101000000100000000000000
REGWS(TGT) OP0S(MDRout) IRimm(65528) ALUS(0) MDRin(65528) 
ALUS(0) 
Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:7, 1:4, tgt:2
ALU: 0:MDRout(3c) 1:REGR0(0) func: out:3c
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 24.EXECUTE(7), phase: 1, PC: 142, SP: 0, MAR: 140(1e2), MDR: 3c
IR: ldi (1e2) - (0000000111100010), Micro(128): 0001000000000000101000000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:7, 1:4, tgt:2
ALU: 0:MDRout(3c) 1:REGR0(0) func: out:3c
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG2 <- 3c
MAR <- 142
PC++
IR <- 9455
------------------------------------------------------
cycle: 25.DECODE(3), phase: 0, PC: 144, SP: 0, MAR: 142(9455), MDR: 3c
IR: DECODING (9455) Micro(10): 0001000010001001101000000000100000010000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) IRimm(21) ALUS(0) REGR0(431) REGR1(60) OP0(431) OP1(60) MDRin(21) 
ALUS(0) ALUout(491) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:5
ALU: 0:REGR0(1af) 1:REGR1(3c) func: out:1eb
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 25.DECODE(3), phase: 1, PC: 144, SP: 0, MAR: 142(9455), MDR: 3c
IR: add (9455) - (1001010001010101), Micro(10): 0001000010001001101000000000100000010000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:5
ALU: 0:REGR0(1af) 1:REGR1(3c) func: out:1eb
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
BP <- 1eb
MAR <- 144
PC++
IR <- 8b12
------------------------------------------------------
cycle: 26.DECODE(3), phase: 0, PC: 146, SP: 0, MAR: 144(8b12), MDR: 3c
IR: DECODING (8b12) Micro(5): 0010000000000000000000000000000000000000
MDR_LOAD IRimm(65476) ALUS(0) REGR1(0) OP0(0) MDRin(65476) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:4, 1:2, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 26.DECODE(3), phase: 1, PC: 146, SP: 0, MAR: 144(8b12), MDR: 3c
IR: nocode (8b12) - (1000101100010010), Micro(5): 0010000000000000000000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:4, 1:2, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- ffc4
------------------------------------------------------
cycle: 26.READ(5), phase: 0, PC: 146, SP: 0, MAR: 144(8b12), MDR: ffc4
IR: nocode (8b12) - (1000101100010010), Micro(69): 1000000001010000000000000100000000000000
MAR_LOAD REGR0S(BP) OP0S(MDRout) ALUS(0) REGR0(491) OP0(65476) OP1(491) 
ALUS(0) ALUout(431) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:BP, r1:REG0, w:REG0
args: 0:4, 1:2, tgt:2
ALU: 0:MDRout(ffc4) 1:REGR0(1eb) func: out:1af
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 26.READ(5), phase: 1, PC: 146, SP: 0, MAR: 144(8b12), MDR: ffc4
IR: nocode (8b12) - (1000101100010010), Micro(69): 1000000001010000000000000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:BP, r1:REG0, w:REG0
args: 0:4, 1:2, tgt:2
ALU: 0:MDRout(ffc4) 1:REGR0(1eb) func: out:1af
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MAR <- 1af
------------------------------------------------------
cycle: 26.EXECUTE(7), phase: 0, PC: 146, SP: 0, MAR: 1af(7f80), MDR: ffc4
IR: nocode (8b12) - (1000101100010010), Micro(133): 0011000100000000101101000100000000000000
MDR_LOAD BE REGWS(TGT2) MDRS(RAMout) OP0S(MDRout) ALUS(0) REGR0(0) OP1(0) MDRin(128) 
ALUS(0) ALUout(65476) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT2
args: 0:4, 1:2, tgt:2
ALU: 0:MDRout(ffc4) 1:REGR0(0) func: out:ffc4
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 26.EXECUTE(7), phase: 1, PC: 146, SP: 0, MAR: 1af(80), MDR: ffc4
IR: nocode (8b12) - (1000101100010010), Micro(133): 0011000100000000101101000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT2
args: 0:4, 1:2, tgt:2
ALU: 0:MDRout(ffc4) 1:REGR0(0) func: out:ffc4
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0080
REG3 <- 80
MAR <- 146
PC++
IR <- 401
------------------------------------------------------
cycle: 27.DECODE(3), phase: 0, PC: 148, SP: 0, MAR: 146(401), MDR: 80
IR: DECODING (401) Micro(0): 0010000000000000000000001100000000001000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(128) ALUS(0) REGR1(0) OP0(128) MDRin(128) 
ALUS(0) ALUout(128) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:MDRout(80) 1:REGR0(0) func: out:80
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 27.DECODE(3), phase: 1, PC: 148, SP: 0, MAR: 146(401), MDR: 80
IR: ldi (401) - (0000010000000001), Micro(0): 0010000000000000000000001100000000001000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:1
ALU: 0:MDRout(80) 1:REGR0(0) func: out:80
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0080
------------------------------------------------------
cycle: 27.EXECUTE(7), phase: 0, PC: 148, SP: 0, MAR: 146(401), MDR: 80
IR: ldi (401) - (0000010000000001), Micro(128): 0001000000000000101000000100000000000000
REGWS(TGT) OP0S(MDRout) IRimm(0) ALUS(0) MDRin(0) 
ALUS(0) 
Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:1
ALU: 0:MDRout(80) 1:REGR0(0) func: out:80
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 27.EXECUTE(7), phase: 1, PC: 148, SP: 0, MAR: 146(401), MDR: 80
IR: ldi (401) - (0000010000000001), Micro(128): 0001000000000000101000000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:0, 1:0, tgt:1
ALU: 0:MDRout(80) 1:REGR0(0) func: out:80
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 80
MAR <- 148
PC++
IR <- 9e59
------------------------------------------------------
cycle: 28.DECODE(3), phase: 0, PC: 14a, SP: 0, MAR: 148(9e59), MDR: 80
IR: DECODING (9e59) Micro(15): 0001000010001001101000000000100100110000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(22) SKIP ALUS(1) REGR0(128) REGR1(128) OP0(128) OP1(128) MDRin(22) 
ALUS(1) ALUout(0) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:3, tgt:1
ALU: 0:REGR0(80) 1:REGR1(80) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 28.DECODE(3), phase: 1, PC: 14a, SP: 0, MAR: 148(9e59), MDR: 80
IR: addskp.z (9e59) - (1001111001011001), Micro(15): 0001000010001001101000000000100100110000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:3, tgt:1
ALU: 0:REGR0(80) 1:REGR1(80) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC++ (SKIP)
REG1 <- 0
MAR <- 14c
PC++
IR <- 2012
------------------------------------------------------
cycle: 29.DECODE(3), phase: 0, PC: 14e, SP: 0, MAR: 14c(2012), MDR: 80
IR: DECODING (2012) Micro(1): 0010000000000000000000010000000000001000
MDR_LOAD IMMS(IMM13) IRimm(18) ALUS(0) REGR1(0) OP0(0) MDRin(18) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 29.DECODE(3), phase: 1, PC: 14e, SP: 0, MAR: 14c(2012), MDR: 80
IR: br (2012) - (0010000000010010), Micro(1): 0010000000000000000000010000000000001000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0012
------------------------------------------------------
cycle: 29.EXECUTE(7), phase: 0, PC: 14e, SP: 0, MAR: 14c(2012), MDR: 12
IR: br (2012) - (0010000000010010), Micro(129): 0001000001110000011100000100000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(4) ALUS(0) REGR0(334) OP0(18) OP1(334) MDRin(4) 
ALUS(0) ALUout(352) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:0, 1:2, tgt:2
ALU: 0:MDRout(12) 1:REGR0(14e) func: out:160
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 29.EXECUTE(7), phase: 1, PC: 14e, SP: 0, MAR: 14c(2012), MDR: 12
IR: br (2012) - (0010000000010010), Micro(129): 0001000001110000011100000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:0, 1:2, tgt:2
ALU: 0:MDRout(12) 1:REGR0(14e) func: out:160
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 160
MAR <- 160
PC++
IR <- d71
------------------------------------------------------
cycle: 30.DECODE(3), phase: 0, PC: 162, SP: 0, MAR: 160(d71), MDR: 12
IR: DECODING (d71) Micro(0): 0010000000000000000000001100000000001000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(430) ALUS(0) REGR1(0) OP0(18) MDRin(430) 
ALUS(0) ALUout(18) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:5, 1:6, tgt:1
ALU: 0:MDRout(12) 1:REGR0(0) func: out:12
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 30.DECODE(3), phase: 1, PC: 162, SP: 0, MAR: 160(d71), MDR: 12
IR: ldi (d71) - (0000110101110001), Micro(0): 0010000000000000000000001100000000001000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:5, 1:6, tgt:1
ALU: 0:MDRout(12) 1:REGR0(0) func: out:12
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 01ae
------------------------------------------------------
cycle: 30.EXECUTE(7), phase: 0, PC: 162, SP: 0, MAR: 160(d71), MDR: 1ae
IR: ldi (d71) - (0000110101110001), Micro(128): 0001000000000000101000000100000000000000
REGWS(TGT) OP0S(MDRout) IRimm(65500) ALUS(0) MDRin(65500) 
ALUS(0) 
Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:5, 1:6, tgt:1
ALU: 0:MDRout(1ae) 1:REGR0(0) func: out:1ae
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 30.EXECUTE(7), phase: 1, PC: 162, SP: 0, MAR: 160(d71), MDR: 1ae
IR: ldi (d71) - (0000110101110001), Micro(128): 0001000000000000101000000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:5, 1:6, tgt:1
ALU: 0:MDRout(1ae) 1:REGR0(0) func: out:1ae
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 1ae
MAR <- 162
PC++
IR <- fa2
------------------------------------------------------
cycle: 31.DECODE(3), phase: 0, PC: 164, SP: 0, MAR: 162(fa2), MDR: 1ae
IR: DECODING (fa2) Micro(0): 0010000000000000000000001100000000001000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(500) ALUS(0) REGR1(0) OP0(430) MDRin(500) 
ALUS(0) ALUout(430) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:6, 1:4, tgt:2
ALU: 0:MDRout(1ae) 1:REGR0(0) func: out:1ae
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 31.DECODE(3), phase: 1, PC: 164, SP: 0, MAR: 162(fa2), MDR: 1ae
IR: ldi (fa2) - (0000111110100010), Micro(0): 0010000000000000000000001100000000001000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:6, 1:4, tgt:2
ALU: 0:MDRout(1ae) 1:REGR0(0) func: out:1ae
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 01f4
------------------------------------------------------
cycle: 31.EXECUTE(7), phase: 0, PC: 164, SP: 0, MAR: 162(fa2), MDR: 1f4
IR: ldi (fa2) - (0000111110100010), Micro(128): 0001000000000000101000000100000000000000
REGWS(TGT) OP0S(MDRout) IRimm(65512) ALUS(0) MDRin(65512) 
ALUS(0) 
Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:6, 1:4, tgt:2
ALU: 0:MDRout(1f4) 1:REGR0(0) func: out:1f4
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 31.EXECUTE(7), phase: 1, PC: 164, SP: 0, MAR: 162(fa2), MDR: 1f4
IR: ldi (fa2) - (0000111110100010), Micro(128): 0001000000000000101000000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:6, 1:4, tgt:2
ALU: 0:MDRout(1f4) 1:REGR0(0) func: out:1f4
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG2 <- 1f4
MAR <- 164
PC++
IR <- 9653
------------------------------------------------------
cycle: 32.DECODE(3), phase: 0, PC: 166, SP: 0, MAR: 164(9653), MDR: 1f4
IR: DECODING (9653) Micro(11): 0001000010001001101000000000100000110000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) ALUS(1) REGR0(430) REGR1(500) OP0(430) OP1(500) MDRin(20) 
ALUS(1) ALUout(65466) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(1ae) 1:REGR1(1f4) func: out:ffba
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 32.DECODE(3), phase: 1, PC: 166, SP: 0, MAR: 164(9653), MDR: 1f4
IR: sub (9653) - (1001011001010011), Micro(11): 0001000010001001101000000000100000110000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(1ae) 1:REGR1(1f4) func: out:ffba
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- ffba
MAR <- 166
PC++
IR <- b29b
------------------------------------------------------
cycle: 33.DECODE(3), phase: 0, PC: 168, SP: 0, MAR: 166(b29b), MDR: 1f4
IR: DECODING (b29b) Micro(25): 0000000000000000000000000000000000000000
IRimm(38) ALUS(0) REGR1(0) OP0(0) MDRin(38) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:2, 1:3, tgt:3
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 33.DECODE(3), phase: 1, PC: 168, SP: 0, MAR: 166(b29b), MDR: 1f4
IR: ldb.b (b29b) - (1011001010011011), Micro(25): 0000000000000000000000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:2, 1:3, tgt:3
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 33.READ(5), phase: 0, PC: 168, SP: 0, MAR: 166(b29b), MDR: 1f4
IR: ldb.b (b29b) - (1011001010011011), Micro(89): 1000000010001001000000000000100000000000
MAR_LOAD REGR0S(ARG0) REGR1S(ARG1) OP1S(REGR1) ALUS(0) REGR0(500) REGR1(65466) OP0(500) OP1(65466) 
ALUS(0) ALUout(430) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:REG0
args: 0:2, 1:3, tgt:3
ALU: 0:REGR0(1f4) 1:REGR1(ffba) func: out:1ae
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 33.READ(5), phase: 1, PC: 168, SP: 0, MAR: 166(b29b), MDR: 1f4
IR: ldb.b (b29b) - (1011001010011011), Micro(89): 1000000010001001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:REG0
args: 0:2, 1:3, tgt:3
ALU: 0:REGR0(1f4) 1:REGR1(ffba) func: out:1ae
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MAR <- 1ae
------------------------------------------------------
cycle: 33.EXECUTE(7), phase: 0, PC: 168, SP: 0, MAR: 1ae(7f80), MDR: 1f4
IR: ldb.b (b29b) - (1011001010011011), Micro(153): 0011000100000000101001000100000000000000
MDR_LOAD BE REGWS(TGT) MDRS(RAMout) OP0S(MDRout) ALUS(0) REGR0(0) REGR1(0) OP1(0) MDRin(127) 
ALUS(0) ALUout(500) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:2, 1:3, tgt:3
ALU: 0:MDRout(1f4) 1:REGR0(0) func: out:1f4
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 33.EXECUTE(7), phase: 1, PC: 168, SP: 0, MAR: 1ae(7f), MDR: 1f4
IR: ldb.b (b29b) - (1011001010011011), Micro(153): 0011000100000000101001000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:2, 1:3, tgt:3
ALU: 0:MDRout(1f4) 1:REGR0(0) func: out:1f4
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 007f
REG3 <- 7f
MAR <- 168
PC++
IR <- 3f9
------------------------------------------------------
cycle: 34.DECODE(3), phase: 0, PC: 16a, SP: 0, MAR: 168(3f9), MDR: 7f
IR: DECODING (3f9) Micro(0): 0010000000000000000000001100000000001000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(127) ALUS(0) REGR1(0) OP0(127) MDRin(127) 
ALUS(0) ALUout(127) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:1
ALU: 0:MDRout(7f) 1:REGR0(0) func: out:7f
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 34.DECODE(3), phase: 1, PC: 16a, SP: 0, MAR: 168(3f9), MDR: 7f
IR: ldi (3f9) - (0000001111111001), Micro(0): 0010000000000000000000001100000000001000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:1
ALU: 0:MDRout(7f) 1:REGR0(0) func: out:7f
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 007f
------------------------------------------------------
cycle: 34.EXECUTE(7), phase: 0, PC: 16a, SP: 0, MAR: 168(3f9), MDR: 7f
IR: ldi (3f9) - (0000001111111001), Micro(128): 0001000000000000101000000100000000000000
REGWS(TGT) OP0S(MDRout) IRimm(65534) ALUS(0) MDRin(65534) 
ALUS(0) 
Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:7, 1:7, tgt:1
ALU: 0:MDRout(7f) 1:REGR0(0) func: out:7f
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 34.EXECUTE(7), phase: 1, PC: 16a, SP: 0, MAR: 168(3f9), MDR: 7f
IR: ldi (3f9) - (0000001111111001), Micro(128): 0001000000000000101000000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:7, 1:7, tgt:1
ALU: 0:MDRout(7f) 1:REGR0(0) func: out:7f
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 7f
MAR <- 16a
PC++
IR <- 9e59
------------------------------------------------------
cycle: 35.DECODE(3), phase: 0, PC: 16c, SP: 0, MAR: 16a(9e59), MDR: 7f
IR: DECODING (9e59) Micro(15): 0001000010001001101000000000100100110000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(22) SKIP ALUS(1) REGR0(127) REGR1(127) OP0(127) OP1(127) MDRin(22) 
ALUS(1) ALUout(0) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:3, tgt:1
ALU: 0:REGR0(7f) 1:REGR1(7f) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 35.DECODE(3), phase: 1, PC: 16c, SP: 0, MAR: 16a(9e59), MDR: 7f
IR: addskp.z (9e59) - (1001111001011001), Micro(15): 0001000010001001101000000000100100110000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:3, tgt:1
ALU: 0:REGR0(7f) 1:REGR1(7f) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC++ (SKIP)
REG1 <- 0
MAR <- 16e
PC++
IR <- 2012
------------------------------------------------------
cycle: 36.DECODE(3), phase: 0, PC: 170, SP: 0, MAR: 16e(2012), MDR: 7f
IR: DECODING (2012) Micro(1): 0010000000000000000000010000000000001000
MDR_LOAD IMMS(IMM13) IRimm(18) ALUS(0) REGR1(0) OP0(0) MDRin(18) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 36.DECODE(3), phase: 1, PC: 170, SP: 0, MAR: 16e(2012), MDR: 7f
IR: br (2012) - (0010000000010010), Micro(1): 0010000000000000000000010000000000001000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:2, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0012
------------------------------------------------------
cycle: 36.EXECUTE(7), phase: 0, PC: 170, SP: 0, MAR: 16e(2012), MDR: 12
IR: br (2012) - (0010000000010010), Micro(129): 0001000001110000011100000100000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(4) ALUS(0) REGR0(368) OP0(18) OP1(368) MDRin(4) 
ALUS(0) ALUout(386) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:0, 1:2, tgt:2
ALU: 0:MDRout(12) 1:REGR0(170) func: out:182
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 36.EXECUTE(7), phase: 1, PC: 170, SP: 0, MAR: 16e(2012), MDR: 12
IR: br (2012) - (0010000000010010), Micro(129): 0001000001110000011100000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:0, 1:2, tgt:2
ALU: 0:MDRout(12) 1:REGR0(170) func: out:182
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 182
MAR <- 182
PC++
IR <- d71
------------------------------------------------------
cycle: 37.DECODE(3), phase: 0, PC: 184, SP: 0, MAR: 182(d71), MDR: 12
IR: DECODING (d71) Micro(0): 0010000000000000000000001100000000001000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(430) ALUS(0) REGR1(0) OP0(18) MDRin(430) 
ALUS(0) ALUout(18) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:5, 1:6, tgt:1
ALU: 0:MDRout(12) 1:REGR0(0) func: out:12
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 37.DECODE(3), phase: 1, PC: 184, SP: 0, MAR: 182(d71), MDR: 12
IR: ldi (d71) - (0000110101110001), Micro(0): 0010000000000000000000001100000000001000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:5, 1:6, tgt:1
ALU: 0:MDRout(12) 1:REGR0(0) func: out:12
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 01ae
------------------------------------------------------
cycle: 37.EXECUTE(7), phase: 0, PC: 184, SP: 0, MAR: 182(d71), MDR: 1ae
IR: ldi (d71) - (0000110101110001), Micro(128): 0001000000000000101000000100000000000000
REGWS(TGT) OP0S(MDRout) IRimm(65500) ALUS(0) MDRin(65500) 
ALUS(0) 
Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:5, 1:6, tgt:1
ALU: 0:MDRout(1ae) 1:REGR0(0) func: out:1ae
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 37.EXECUTE(7), phase: 1, PC: 184, SP: 0, MAR: 182(d71), MDR: 1ae
IR: ldi (d71) - (0000110101110001), Micro(128): 0001000000000000101000000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:5, 1:6, tgt:1
ALU: 0:MDRout(1ae) 1:REGR0(0) func: out:1ae
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 1ae
MAR <- 184
PC++
IR <- fa2
------------------------------------------------------
cycle: 38.DECODE(3), phase: 0, PC: 186, SP: 0, MAR: 184(fa2), MDR: 1ae
IR: DECODING (fa2) Micro(0): 0010000000000000000000001100000000001000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(500) ALUS(0) REGR1(0) OP0(430) MDRin(500) 
ALUS(0) ALUout(430) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:6, 1:4, tgt:2
ALU: 0:MDRout(1ae) 1:REGR0(0) func: out:1ae
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 38.DECODE(3), phase: 1, PC: 186, SP: 0, MAR: 184(fa2), MDR: 1ae
IR: ldi (fa2) - (0000111110100010), Micro(0): 0010000000000000000000001100000000001000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:6, 1:4, tgt:2
ALU: 0:MDRout(1ae) 1:REGR0(0) func: out:1ae
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 01f4
------------------------------------------------------
cycle: 38.EXECUTE(7), phase: 0, PC: 186, SP: 0, MAR: 184(fa2), MDR: 1f4
IR: ldi (fa2) - (0000111110100010), Micro(128): 0001000000000000101000000100000000000000
REGWS(TGT) OP0S(MDRout) IRimm(65512) ALUS(0) MDRin(65512) 
ALUS(0) 
Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:6, 1:4, tgt:2
ALU: 0:MDRout(1f4) 1:REGR0(0) func: out:1f4
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 38.EXECUTE(7), phase: 1, PC: 186, SP: 0, MAR: 184(fa2), MDR: 1f4
IR: ldi (fa2) - (0000111110100010), Micro(128): 0001000000000000101000000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:6, 1:4, tgt:2
ALU: 0:MDRout(1f4) 1:REGR0(0) func: out:1f4
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG2 <- 1f4
MAR <- 186
PC++
IR <- 9653
------------------------------------------------------
cycle: 39.DECODE(3), phase: 0, PC: 188, SP: 0, MAR: 186(9653), MDR: 1f4
IR: DECODING (9653) Micro(11): 0001000010001001101000000000100000110000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(20) ALUS(1) REGR0(430) REGR1(500) OP0(430) OP1(500) MDRin(20) 
ALUS(1) ALUout(65466) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(1ae) 1:REGR1(1f4) func: out:ffba
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 39.DECODE(3), phase: 1, PC: 188, SP: 0, MAR: 186(9653), MDR: 1f4
IR: sub (9653) - (1001011001010011), Micro(11): 0001000010001001101000000000100000110000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:2, tgt:3
ALU: 0:REGR0(1ae) 1:REGR1(1f4) func: out:ffba
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- ffba
MAR <- 188
PC++
IR <- b29b
------------------------------------------------------
cycle: 40.DECODE(3), phase: 0, PC: 18a, SP: 0, MAR: 188(b29b), MDR: 1f4
IR: DECODING (b29b) Micro(25): 0000000000000000000000000000000000000000
IRimm(38) ALUS(0) REGR1(0) OP0(0) MDRin(38) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:2, 1:3, tgt:3
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 40.DECODE(3), phase: 1, PC: 18a, SP: 0, MAR: 188(b29b), MDR: 1f4
IR: ldb.b (b29b) - (1011001010011011), Micro(25): 0000000000000000000000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:2, 1:3, tgt:3
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 40.READ(5), phase: 0, PC: 18a, SP: 0, MAR: 188(b29b), MDR: 1f4
IR: ldb.b (b29b) - (1011001010011011), Micro(89): 1000000010001001000000000000100000000000
MAR_LOAD REGR0S(ARG0) REGR1S(ARG1) OP1S(REGR1) ALUS(0) REGR0(500) REGR1(65466) OP0(500) OP1(65466) 
ALUS(0) ALUout(430) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:REG0
args: 0:2, 1:3, tgt:3
ALU: 0:REGR0(1f4) 1:REGR1(ffba) func: out:1ae
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 40.READ(5), phase: 1, PC: 18a, SP: 0, MAR: 188(b29b), MDR: 1f4
IR: ldb.b (b29b) - (1011001010011011), Micro(89): 1000000010001001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:REG0
args: 0:2, 1:3, tgt:3
ALU: 0:REGR0(1f4) 1:REGR1(ffba) func: out:1ae
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MAR <- 1ae
------------------------------------------------------
cycle: 40.EXECUTE(7), phase: 0, PC: 18a, SP: 0, MAR: 1ae(7f80), MDR: 1f4
IR: ldb.b (b29b) - (1011001010011011), Micro(153): 0011000100000000101001000100000000000000
MDR_LOAD BE REGWS(TGT) MDRS(RAMout) OP0S(MDRout) ALUS(0) REGR0(0) REGR1(0) OP1(0) MDRin(127) 
ALUS(0) ALUout(500) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:2, 1:3, tgt:3
ALU: 0:MDRout(1f4) 1:REGR0(0) func: out:1f4
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 40.EXECUTE(7), phase: 1, PC: 18a, SP: 0, MAR: 1ae(7f), MDR: 1f4
IR: ldb.b (b29b) - (1011001010011011), Micro(153): 0011000100000000101001000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:2, 1:3, tgt:3
ALU: 0:MDRout(1f4) 1:REGR0(0) func: out:1f4
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 007f
REG3 <- 7f
MAR <- 18a
PC++
IR <- 3f9
------------------------------------------------------
cycle: 41.DECODE(3), phase: 0, PC: 18c, SP: 0, MAR: 18a(3f9), MDR: 7f
IR: DECODING (3f9) Micro(0): 0010000000000000000000001100000000001000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(127) ALUS(0) REGR1(0) OP0(127) MDRin(127) 
ALUS(0) ALUout(127) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:1
ALU: 0:MDRout(7f) 1:REGR0(0) func: out:7f
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 41.DECODE(3), phase: 1, PC: 18c, SP: 0, MAR: 18a(3f9), MDR: 7f
IR: ldi (3f9) - (0000001111111001), Micro(0): 0010000000000000000000001100000000001000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:7, 1:7, tgt:1
ALU: 0:MDRout(7f) 1:REGR0(0) func: out:7f
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 007f
------------------------------------------------------
cycle: 41.EXECUTE(7), phase: 0, PC: 18c, SP: 0, MAR: 18a(3f9), MDR: 7f
IR: ldi (3f9) - (0000001111111001), Micro(128): 0001000000000000101000000100000000000000
REGWS(TGT) OP0S(MDRout) IRimm(65534) ALUS(0) MDRin(65534) 
ALUS(0) 
Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:7, 1:7, tgt:1
ALU: 0:MDRout(7f) 1:REGR0(0) func: out:7f
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 41.EXECUTE(7), phase: 1, PC: 18c, SP: 0, MAR: 18a(3f9), MDR: 7f
IR: ldi (3f9) - (0000001111111001), Micro(128): 0001000000000000101000000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:7, 1:7, tgt:1
ALU: 0:MDRout(7f) 1:REGR0(0) func: out:7f
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG1 <- 7f
MAR <- 18c
PC++
IR <- 9e59
------------------------------------------------------
cycle: 42.DECODE(3), phase: 0, PC: 18e, SP: 0, MAR: 18c(9e59), MDR: 7f
IR: DECODING (9e59) Micro(15): 0001000010001001101000000000100100110000
REGR0S(ARG0) REGR1S(ARG1) REGWS(TGT) OP1S(REGR1) ALUS(SUB) IRimm(22) SKIP ALUS(1) REGR0(127) REGR1(127) OP0(127) OP1(127) MDRin(22) 
ALUS(1) ALUout(0) 
ALUS(1) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:3, tgt:1
ALU: 0:REGR0(7f) 1:REGR1(7f) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 42.DECODE(3), phase: 1, PC: 18e, SP: 0, MAR: 18c(9e59), MDR: 7f
IR: addskp.z (9e59) - (1001111001011001), Micro(15): 0001000010001001101000000000100100110000
ALUS(1) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:TGT
args: 0:1, 1:3, tgt:1
ALU: 0:REGR0(7f) 1:REGR1(7f) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC++ (SKIP)
REG1 <- 0
MAR <- 190
PC++
IR <- 2002
------------------------------------------------------
cycle: 43.DECODE(3), phase: 0, PC: 192, SP: 0, MAR: 190(2002), MDR: 7f
IR: DECODING (2002) Micro(1): 0010000000000000000000010000000000001000
MDR_LOAD IMMS(IMM13) IRimm(2) ALUS(0) REGR1(0) OP0(0) MDRin(2) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 43.DECODE(3), phase: 1, PC: 192, SP: 0, MAR: 190(2002), MDR: 7f
IR: br (2002) - (0010000000000010), Micro(1): 0010000000000000000000010000000000001000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:0, tgt:2
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0002
------------------------------------------------------
cycle: 43.EXECUTE(7), phase: 0, PC: 192, SP: 0, MAR: 190(2002), MDR: 2
IR: br (2002) - (0010000000000010), Micro(129): 0001000001110000011100000100000000000000
REGR0S(PC) REGWS(PC) OP0S(MDRout) IRimm(0) ALUS(0) REGR0(402) OP0(2) OP1(402) MDRin(0) 
ALUS(0) ALUout(404) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:0, 1:0, tgt:2
ALU: 0:MDRout(2) 1:REGR0(192) func: out:194
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 43.EXECUTE(7), phase: 1, PC: 192, SP: 0, MAR: 190(2002), MDR: 2
IR: br (2002) - (0010000000000010), Micro(129): 0001000001110000011100000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:PC, r1:REG0, w:PC
args: 0:0, 1:0, tgt:2
ALU: 0:MDRout(2) 1:REGR0(192) func: out:194
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
PC <- 194
MAR <- 194
PC++
IR <- 103
------------------------------------------------------
cycle: 44.DECODE(3), phase: 0, PC: 196, SP: 0, MAR: 194(103), MDR: 2
IR: DECODING (103) Micro(0): 0010000000000000000000001100000000001000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(32) ALUS(0) REGR1(0) OP0(2) MDRin(32) 
ALUS(0) ALUout(2) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:4, 1:0, tgt:3
ALU: 0:MDRout(2) 1:REGR0(0) func: out:2
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 44.DECODE(3), phase: 1, PC: 196, SP: 0, MAR: 194(103), MDR: 2
IR: ldi (103) - (0000000100000011), Micro(0): 0010000000000000000000001100000000001000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:4, 1:0, tgt:3
ALU: 0:MDRout(2) 1:REGR0(0) func: out:2
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 0020
------------------------------------------------------
cycle: 44.EXECUTE(7), phase: 0, PC: 196, SP: 0, MAR: 194(103), MDR: 20
IR: ldi (103) - (0000000100000011), Micro(128): 0001000000000000101000000100000000000000
REGWS(TGT) OP0S(MDRout) IRimm(65472) ALUS(0) MDRin(65472) 
ALUS(0) 
Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:4, 1:0, tgt:3
ALU: 0:MDRout(20) 1:REGR0(0) func: out:20
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 44.EXECUTE(7), phase: 1, PC: 196, SP: 0, MAR: 194(103), MDR: 20
IR: ldi (103) - (0000000100000011), Micro(128): 0001000000000000101000000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:4, 1:0, tgt:3
ALU: 0:MDRout(20) 1:REGR0(0) func: out:20
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
REG3 <- 20
MAR <- 196
PC++
IR <- 555
------------------------------------------------------
cycle: 45.DECODE(3), phase: 0, PC: 198, SP: 0, MAR: 196(555), MDR: 20
IR: DECODING (555) Micro(0): 0010000000000000000000001100000000001000
MDR_LOAD OP0S(MDRout) IMMS(IMM10) IRimm(170) ALUS(0) REGR1(0) OP0(32) MDRin(170) 
ALUS(0) ALUout(32) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:5, 1:2, tgt:5
ALU: 0:MDRout(20) 1:REGR0(0) func: out:20
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 45.DECODE(3), phase: 1, PC: 198, SP: 0, MAR: 196(555), MDR: 20
IR: ldi (555) - (0000010101010101), Micro(0): 0010000000000000000000001100000000001000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:5, 1:2, tgt:5
ALU: 0:MDRout(20) 1:REGR0(0) func: out:20
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 00aa
------------------------------------------------------
cycle: 45.EXECUTE(7), phase: 0, PC: 198, SP: 0, MAR: 196(555), MDR: aa
IR: ldi (555) - (0000010101010101), Micro(128): 0001000000000000101000000100000000000000
REGWS(TGT) OP0S(MDRout) IRimm(65493) ALUS(0) MDRin(65493) 
ALUS(0) 
Stable after 2 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:5, 1:2, tgt:5
ALU: 0:MDRout(aa) 1:REGR0(0) func: out:aa
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 45.EXECUTE(7), phase: 1, PC: 198, SP: 0, MAR: 196(555), MDR: aa
IR: ldi (555) - (0000010101010101), Micro(128): 0001000000000000101000000100000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:TGT
args: 0:5, 1:2, tgt:5
ALU: 0:MDRout(aa) 1:REGR0(0) func: out:aa
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
BP <- aa
MAR <- 198
PC++
IR <- b41d
------------------------------------------------------
cycle: 46.DECODE(3), phase: 0, PC: 19a, SP: 0, MAR: 198(b41d), MDR: aa
IR: DECODING (b41d) Micro(26): 0000000000000000000000000000000000000000
IRimm(7) ALUS(0) REGR1(0) OP0(0) MDRin(7) 
ALUS(0) ALUout(0) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:3, tgt:5
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 46.DECODE(3), phase: 1, PC: 19a, SP: 0, MAR: 198(b41d), MDR: aa
IR: stw.b (b41d) - (1011010000011101), Micro(26): 0000000000000000000000000000000000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:REG0, r1:REG0, w:REG0
args: 0:0, 1:3, tgt:5
ALU: 0:REGR0(0) 1:REGR0(0) func: out:0
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 46.READ(5), phase: 0, PC: 19a, SP: 0, MAR: 198(b41d), MDR: aa
IR: stw.b (b41d) - (1011010000011101), Micro(90): 1000000010001001000000000000100000000000
MAR_LOAD REGR0S(ARG0) REGR1S(ARG1) OP1S(REGR1) ALUS(0) REGR1(32) OP1(32) 
ALUS(0) ALUout(32) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:ARG0, r1:ARG1, w:REG0
args: 0:0, 1:3, tgt:5
ALU: 0:REGR0(0) 1:REGR1(20) func: out:20
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 46.READ(5), phase: 1, PC: 19a, SP: 0, MAR: 198(b41d), MDR: aa
IR: stw.b (b41d) - (1011010000011101), Micro(90): 1000000010001001000000000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:ARG0, r1:ARG1, w:REG0
args: 0:0, 1:3, tgt:5
ALU: 0:REGR0(0) 1:REGR1(20) func: out:20
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MAR <- 20
------------------------------------------------------
cycle: 46.EXECUTE(7), phase: 0, PC: 19a, SP: 0, MAR: 20(0), MDR: aa
IR: stw.b (b41d) - (1011010000011101), Micro(154): 0010100010100000000010000000100000000000
MDR_LOAD REGR0S(TGT) MDRS(ALUout) OP1S(REGR1) ALUS(0) REGR0(170) REGR1(0) OP0(170) OP1(0) MDRin(32) 
ALUS(0) ALUout(170) MDRin(170) 
ALUS(0) 
Stable after 3 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:3, tgt:5
ALU: 0:REGR0(aa) 1:REGR1(0) func: out:aa
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
------------------------------------------------------
cycle: 46.EXECUTE(7), phase: 1, PC: 19a, SP: 0, MAR: 20(0), MDR: aa
IR: stw.b (b41d) - (1011010000011101), Micro(154): 0010100010100000000010000000100000000000
ALUS(0) 
Stable after 1 vcycles.
regfile: r0:TGT, r1:REG0, w:REG0
args: 0:0, 1:3, tgt:5
ALU: 0:REGR0(aa) 1:REGR1(0) func: out:aa
STACK: 0 0 0 0 0 0 0 0 0 0 0 0 0 
MDR <- 00aa
RAM[20] <- aa
MAR <- 19a
PC++
IR <- fe00
HALT: encountered halt instruction.

-------RAM---------DATA--------
0x064: 00         0x000: 801
0x062: 00         0x002: 20fc
0x060: 00         0x004: 00
0x05e: 00         0x006: 00
0x05c: 00         0x008: 00
0x05a: 00         0x00a: 00
0x058: 00         0x00c: 00
0x056: 00         0x00e: 00
0x054: 00         0x010: 6400
0x052: 00         0x012: 100
0x050: 00         0x014: 100
0x04e: 00         0x016: 00
0x04c: 00         0x018: 00
0x04a: 00         0x01a: 00
0x048: 00         0x01c: 00
0x046: 00         0x01e: 00
0x044: 00         0x020: aa
0x042: 00         0x022: 00
0x040: 00         0x024: 00
0x03e: 00         0x026: 00
0x03c: 00         0x028: 00
0x03a: 00         0x02a: 00
0x038: 00         0x02c: 00
0x036: 00         0x02e: 00
0x034: 00         0x030: 00
0x032: 00         0x032: 00
----------------------------REGISTERS-----------------------
R0: 0000
R1: 0000
R2: 01f4
R3: 0020
R4: 0001
R5: 00aa
R6: 0000
R7: 019c
----------------------------SYSREGS-----------------------
MAR: 019a
MDR: 00aa
IR: fe00
