0, ldi s10(tgt), decode, imms[imm10], MDRS[imm], mdr_load, op0s[mdr], skipstate[1]
0, ldi s10(tgt), read,
0, ldi s10(tgt), exec, op0s[mdr], reg_load, regws[tgt]
1, br s13 offset, decode, imms[imm13], MDRS[imm], mdr_load, skipstate[1]
1, br s13 offset, read,
1, br s13 offset, exec, op0s[mdr], regr0S[PC], op1s[regr0], regws[PC], reg_load
2, fetch, decode, regr1s[pc], op0s[regr1], mar_load, incr_pc, ir_load
2, fetch, read,
2, fetch, exec,
3,
4, ldw s7(r5) tgt, decode, imms[imm7], MDRS[imm], mdr_load
4, ldw s7(r5) tgt, read, regr0s[REG5], op0s[mdr], op1s[regr0], mar_load
4, ldw s7(r5) tgt, exec, regr1s[reg0], op0s[mdr], regws[tgt2], mdrs[ram], mdr_load, reg_load
5,
6,
7, stw src sw7(r5), decode, imms[imm7], mdr_load, mdrs[imm]
7, stw src sw7(r5), read, regr0s[REG5], op0s[mdr], op1s[regr0], mar_load
7, stw src sw7(r5), exec, mdrs[alu], regr0s[tgt2], regr1s[reg0], op0s[regr0], op1s[regr1], mdr_load, ram_load
8,
9,
10, add op1 op2 res, decode, regr0s[arg0], regr1s[arg1], op0s[regr0], op1s[regr1], regws[tgt], reg_load, skipstate[2]
10, add op1 op2 res, read,
10, add op1 op2 res, exec,
11, sub op1 op2 res, decode, regr0s[arg1], regr1s[arg0], op0s[regr0], op1s[regr1], regws[tgt], reg_load, ALU[sub], skipstate[2]
11, sub op1 op2 res, read
11, sub op1 op2 res, exec
12,
13,
14,
15, addskp.z r1 r2 r3, decode, op0s[regr0], regr0s[arg0], regr1s[arg1], op1s[regr1], skipc[zr], ALU[sub], regws[tgt], reg_load, skipstate[2]
15, addskp.z r1 r2 r3, read,
15, addskp.z r1 r2 r3, exec,
16, addskp.nz r1 r2 r3, decode, op0s[regr0], regr0s[arg0], regr1s[arg1], op1s[regr1], skipc[nzr], ALU[sub], regws[tgt], reg_load, skipstate[2]
16, addskp.nz r1 r2 r3, read,
16, addskp.nz r1 r2 r3, exec,
17, addi IRimm r1 res, decode, imms[IMMIR], mdr_load, MDRS[imm], skipstate[1]
17, addi IRimm r1 res, read,
17, addi IRimm r1 res, exec, op1s[mdr], regr1s[arg1], op0s[regr1], ALU[add], regws[tgt], reg_load
18,
19,
20,
21,
22, addskpi.z imm op2 res, decode, imms[IMMIR], mdr_load, MDRS[imm], skipstate[1]
22, addskpi.z imm op2 res, read,
22, addskpi.z imm op2 res, exec, op0s[mdr], regr1s[arg1], op1s[regr1], skipc[zr], ALU[sub], regws[tgt], reg_load
23, addskpi.nz imm op2 res, decode, imms[IMMIR], mdr_load, MDRS[imm], skipstate[1]
23, addskpi.nz imm op2 res, read,
23, addskpi.nz imm op2 res, exec, op0s[mdr], regr1s[arg1], op1s[regr1], skipc[nzr], ALU[sub], regws[tgt], reg_load
24,
25,
26, stwb src (idx base), decode,
26, stwb src (idx base), read, regr0s[arg0], regr1s[arg1], op0s[regr0], op1s[regr1], mar_load
26, stwb src (idx base), exec, mdrs[alu], regr0s[tgt], regr1s[reg0], op0s[regr0], op1s[regr1], mdr_load, ram_load
27,
28,
29,
30, addhi imm7 reg, decode, imms[imm7u], mdrs[imm], mdr_load, skipstate[1]
30, addhi imm7 reg, read,
30, addhi imm7 reg, exec, op0s[mdr], regr1s[REG0], op1s[regr1], regws[tgt2], be, reg_load
31, push reg, decode, decr_sp,
31, push reg, read, regr0s[SP], op0s[regr0], op1s[regr1], mar_load
31, push reg, exec, mdrs[alu], regr0s[tgt], regr1s[reg0], op0s[regr0], op1s[regr1], mdr_load, ram_load
32, pop reg, decode,
32, pop reg, read, regr0s[SP], op0s[regr0], op1s[regr1], mar_load
32, pop reg, exec, regr1s[reg0], op0s[mdr], regws[tgt], mdrs[ram], mdr_load, reg_load, incr_sp